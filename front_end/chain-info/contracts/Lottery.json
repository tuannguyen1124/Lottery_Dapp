{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vrfCoordinator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_linkTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_keyhash",
          "type": "bytes32"
        },
        {
          "internalType": "contract BAPToken",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timeStamp",
          "type": "uint256"
        }
      ],
      "name": "LotteryFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timeStamp",
          "type": "uint256"
        }
      ],
      "name": "LotteryStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "participant",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "entryId",
          "type": "uint256"
        }
      ],
      "name": "NewEntry",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "name": "RequestedRandomness",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "UserPaid",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newDuration",
          "type": "uint256"
        }
      ],
      "name": "changeDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endLottery",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_numberOfEntries",
          "type": "uint256"
        }
      ],
      "name": "enterLottery",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entryCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "entryIdToParticipant",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "keyhash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestWinner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lotteryDeadlineTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lotteryDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lotteryState",
      "outputs": [
        {
          "internalType": "enum Lottery.LOTTERY_STATE",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "participantEntries",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolPrize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "randomness",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "randomness",
          "type": "uint256"
        }
      ],
      "name": "rawFulfillRandomness",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startLottery",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract BAPToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/XUAN TUAN/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/access/Ownable.sol",
    "1": "C:/Users/XUAN TUAN/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC20/ERC20.sol",
    "10": "contracts/Lottery.sol",
    "2": "C:/Users/XUAN TUAN/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC20/IERC20.sol",
    "3": "C:/Users/XUAN TUAN/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "4": "C:/Users/XUAN TUAN/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/Context.sol",
    "5": "C:/Users/XUAN TUAN/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/VRFConsumerBase.sol",
    "6": "C:/Users/XUAN TUAN/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/VRFRequestIDBase.sol",
    "9": "contracts/BAPToken.sol"
  },
  "ast": {
    "absolutePath": "contracts/Lottery.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        1487
      ],
      "BAPToken": [
        43
      ],
      "Context": [
        1210
      ],
      "ERC20": [
        1187
      ],
      "IERC20": [
        1660
      ],
      "IERC20Metadata": [
        1685
      ],
      "LinkTokenInterface": [
        1582
      ],
      "Lottery": [
        561
      ],
      "Ownable": [
        1320
      ],
      "VRFConsumerBase": [
        1441
      ],
      "VRFRequestIDBase": [
        1735
      ]
    },
    "id": 562,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 45,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:10"
      },
      {
        "absolutePath": "C:/Users/XUAN TUAN/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 46,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 562,
        "sourceUnit": 1488,
        "src": "57:76:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/XUAN TUAN/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/VRFConsumerBase.sol",
        "file": "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol",
        "id": 47,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 562,
        "sourceUnit": 1442,
        "src": "134:59:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/XUAN TUAN/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 48,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 562,
        "sourceUnit": 1321,
        "src": "194:52:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/BAPToken.sol",
        "file": "./BAPToken.sol",
        "id": 49,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 562,
        "sourceUnit": 44,
        "src": "248:24:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 50,
              "name": "VRFConsumerBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1441,
              "src": "295:15:10"
            },
            "id": 51,
            "nodeType": "InheritanceSpecifier",
            "src": "295:15:10"
          },
          {
            "baseName": {
              "id": 52,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1320,
              "src": "312:7:10"
            },
            "id": 53,
            "nodeType": "InheritanceSpecifier",
            "src": "312:7:10"
          }
        ],
        "canonicalName": "Lottery",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 561,
        "linearizedBaseContracts": [
          561,
          1320,
          1210,
          1441,
          1735
        ],
        "name": "Lottery",
        "nameLocation": "284:7:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Lottery.LOTTERY_STATE",
            "id": 57,
            "members": [
              {
                "id": 54,
                "name": "CLOSED",
                "nameLocation": "384:6:10",
                "nodeType": "EnumValue",
                "src": "384:6:10"
              },
              {
                "id": 55,
                "name": "OPENED",
                "nameLocation": "400:6:10",
                "nodeType": "EnumValue",
                "src": "400:6:10"
              },
              {
                "id": 56,
                "name": "PROCESSING",
                "nameLocation": "416:10:10",
                "nodeType": "EnumValue",
                "src": "416:10:10"
              }
            ],
            "name": "LOTTERY_STATE",
            "nameLocation": "360:13:10",
            "nodeType": "EnumDefinition",
            "src": "355:77:10"
          },
          {
            "constant": false,
            "functionSelector": "6939864b",
            "id": 60,
            "mutability": "mutable",
            "name": "lotteryState",
            "nameLocation": "458:12:10",
            "nodeType": "VariableDeclaration",
            "scope": 561,
            "src": "437:33:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_LOTTERY_STATE_$57",
              "typeString": "enum Lottery.LOTTERY_STATE"
            },
            "typeName": {
              "id": 59,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 58,
                "name": "LOTTERY_STATE",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 57,
                "src": "437:13:10"
              },
              "referencedDeclaration": 57,
              "src": "437:13:10",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_LOTTERY_STATE_$57",
                "typeString": "enum Lottery.LOTTERY_STATE"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 63,
            "mutability": "mutable",
            "name": "ticketPrice",
            "nameLocation": "483:11:10",
            "nodeType": "VariableDeclaration",
            "scope": 561,
            "src": "476:23:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 61,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "476:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "3530",
              "id": 62,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "497:2:10",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50_by_1",
                "typeString": "int_const 50"
              },
              "value": "50"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "36013189",
            "id": 65,
            "mutability": "mutable",
            "name": "randomness",
            "nameLocation": "520:10:10",
            "nodeType": "VariableDeclaration",
            "scope": 561,
            "src": "505:25:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 64,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "505:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "62da8313",
            "id": 67,
            "mutability": "mutable",
            "name": "entryCounter",
            "nameLocation": "551:12:10",
            "nodeType": "VariableDeclaration",
            "scope": 561,
            "src": "536:27:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 66,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "536:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ddca3f43",
            "id": 69,
            "mutability": "mutable",
            "name": "fee",
            "nameLocation": "616:3:10",
            "nodeType": "VariableDeclaration",
            "scope": 561,
            "src": "601:18:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 68,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "601:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2d97902f",
            "id": 71,
            "mutability": "mutable",
            "name": "lotteryDuration",
            "nameLocation": "641:15:10",
            "nodeType": "VariableDeclaration",
            "scope": 561,
            "src": "626:30:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 70,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "626:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d84c72c5",
            "id": 73,
            "mutability": "mutable",
            "name": "lotteryDeadlineTimestamp",
            "nameLocation": "677:24:10",
            "nodeType": "VariableDeclaration",
            "scope": 561,
            "src": "662:39:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 72,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "662:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "69ebe78e",
            "id": 75,
            "mutability": "mutable",
            "name": "keyhash",
            "nameLocation": "726:7:10",
            "nodeType": "VariableDeclaration",
            "scope": 561,
            "src": "711:22:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 74,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "711:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "06ef53e0",
            "id": 77,
            "mutability": "mutable",
            "name": "latestWinner",
            "nameLocation": "754:12:10",
            "nodeType": "VariableDeclaration",
            "scope": 561,
            "src": "739:27:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 76,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "739:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fcac59c3",
            "id": 81,
            "mutability": "mutable",
            "name": "participantEntries",
            "nameLocation": "807:18:10",
            "nodeType": "VariableDeclaration",
            "scope": 561,
            "src": "772:53:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 80,
              "keyType": {
                "id": 78,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "780:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "772:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 79,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "791:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fe0837d1",
            "id": 85,
            "mutability": "mutable",
            "name": "entryIdToParticipant",
            "nameLocation": "864:20:10",
            "nodeType": "VariableDeclaration",
            "scope": 561,
            "src": "831:53:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 84,
              "keyType": {
                "id": 82,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "839:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "831:25:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 83,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "848:7:10",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 88,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "953:5:10",
            "nodeType": "VariableDeclaration",
            "scope": 561,
            "src": "937:21:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BAPToken_$43",
              "typeString": "contract BAPToken"
            },
            "typeName": {
              "id": 87,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 86,
                "name": "BAPToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 43,
                "src": "937:8:10"
              },
              "referencedDeclaration": 43,
              "src": "937:8:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BAPToken_$43",
                "typeString": "contract BAPToken"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "835a1fae",
            "id": 90,
            "mutability": "mutable",
            "name": "poolPrize",
            "nameLocation": "979:9:10",
            "nodeType": "VariableDeclaration",
            "scope": 561,
            "src": "964:24:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 89,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "964:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "3d01c4ba0165a3f9c01ca4916efd5efd92dd9ac07569ff74d7047c7cde668349",
            "id": 94,
            "name": "LotteryStarted",
            "nameLocation": "1015:14:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timeStamp",
                  "nameLocation": "1038:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "1030:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1030:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1029:19:10"
            },
            "src": "1009:40:10"
          },
          {
            "anonymous": false,
            "eventSelector": "64ffca72c341aab4874123afb736afbd6fad01e6eaf584cfe0f320a144d3a576",
            "id": 100,
            "name": "LotteryFinished",
            "nameLocation": "1060:15:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "winner",
                  "nameLocation": "1084:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "1076:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1076:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timeStamp",
                  "nameLocation": "1100:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "1092:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1092:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1075:35:10"
            },
            "src": "1054:57:10"
          },
          {
            "anonymous": false,
            "eventSelector": "9d5cf8d6fc62210bab9630b8d613c1b63d9cfe0e0d2d70dda538d69c7e4f37ba",
            "id": 106,
            "name": "NewEntry",
            "nameLocation": "1122:8:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "participant",
                  "nameLocation": "1139:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 106,
                  "src": "1131:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1131:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "entryId",
                  "nameLocation": "1160:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 106,
                  "src": "1152:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1152:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1130:38:10"
            },
            "src": "1116:53:10"
          },
          {
            "anonymous": false,
            "eventSelector": "188c4d19b4fadd1889d9bd9bf0ab7c97e0719434751e6c05feac6339c1c001ec",
            "id": 112,
            "name": "UserPaid",
            "nameLocation": "1180:8:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 108,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1197:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "1189:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1189:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1211:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "1203:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1203:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1188:30:10"
            },
            "src": "1174:45:10"
          },
          {
            "anonymous": false,
            "eventSelector": "e5f5b44d72d4143c278eb745c4acc0695c4a5bc616be5beecf46abe29661780e",
            "id": 116,
            "name": "RequestedRandomness",
            "nameLocation": "1230:19:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 114,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "1258:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 116,
                  "src": "1250:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1250:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1249:19:10"
            },
            "src": "1224:45:10"
          },
          {
            "body": {
              "id": 179,
              "nodeType": "Block",
              "src": "1556:496:10",
              "statements": [
                {
                  "expression": {
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 134,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "1729:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 135,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122,
                      "src": "1735:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1729:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "1729:10:10"
                },
                {
                  "expression": {
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 138,
                      "name": "keyhash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "1749:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 139,
                      "name": "_keyhash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 124,
                      "src": "1759:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1749:18:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "1749:18:10"
                },
                {
                  "expression": {
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 142,
                      "name": "lotteryState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "1777:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$57",
                        "typeString": "enum Lottery.LOTTERY_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 143,
                        "name": "LOTTERY_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "1792:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$57_$",
                          "typeString": "type(enum Lottery.LOTTERY_STATE)"
                        }
                      },
                      "id": 144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CLOSED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54,
                      "src": "1792:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$57",
                        "typeString": "enum Lottery.LOTTERY_STATE"
                      }
                    },
                    "src": "1777:35:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LOTTERY_STATE_$57",
                      "typeString": "enum Lottery.LOTTERY_STATE"
                    }
                  },
                  "id": 146,
                  "nodeType": "ExpressionStatement",
                  "src": "1777:35:10"
                },
                {
                  "expression": {
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 147,
                      "name": "lotteryDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "1841:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "333030",
                      "id": 148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1859:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_300_by_1",
                        "typeString": "int_const 300"
                      },
                      "value": "300"
                    },
                    "src": "1841:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "1841:21:10"
                },
                {
                  "expression": {
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 151,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "1872:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BAPToken_$43",
                        "typeString": "contract BAPToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 152,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "1880:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BAPToken_$43",
                        "typeString": "contract BAPToken"
                      }
                    },
                    "src": "1872:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BAPToken_$43",
                      "typeString": "contract BAPToken"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "1872:14:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 158,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1914:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1914:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 162,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1934:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lottery_$561",
                              "typeString": "contract Lottery"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lottery_$561",
                              "typeString": "contract Lottery"
                            }
                          ],
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1926:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 160,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1926:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1926:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030303030",
                        "id": 164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1941:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "value": "1000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "id": 155,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "1896:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BAPToken_$43",
                          "typeString": "contract BAPToken"
                        }
                      },
                      "id": 157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "1896:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1896:53:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 166,
                  "nodeType": "ExpressionStatement",
                  "src": "1896:53:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 170,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1978:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1978:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 174,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1998:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lottery_$561",
                              "typeString": "contract Lottery"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lottery_$561",
                              "typeString": "contract Lottery"
                            }
                          ],
                          "id": 173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1990:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 172,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1990:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1990:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030303030",
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2005:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "value": "1000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "id": 167,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "1959:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BAPToken_$43",
                          "typeString": "contract BAPToken"
                        }
                      },
                      "id": 169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 886,
                      "src": "1959:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1959:54:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "1959:54:10"
                }
              ]
            },
            "id": 180,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 130,
                    "name": "_vrfCoordinator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 118,
                    "src": "1520:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 131,
                    "name": "_linkTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 120,
                    "src": "1537:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 132,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 129,
                  "name": "VRFConsumerBase",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1441,
                  "src": "1504:15:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "1504:51:10"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "mutability": "mutable",
                  "name": "_vrfCoordinator",
                  "nameLocation": "1342:15:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "1334:23:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1334:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 120,
                  "mutability": "mutable",
                  "name": "_linkTokenAddress",
                  "nameLocation": "1375:17:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "1367:25:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1367:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "1442:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "1434:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1434:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "_keyhash",
                  "nameLocation": "1464:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "1456:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1456:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 127,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1491:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "1482:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BAPToken_$43",
                    "typeString": "contract BAPToken"
                  },
                  "typeName": {
                    "id": 126,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 125,
                      "name": "BAPToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43,
                      "src": "1482:8:10"
                    },
                    "referencedDeclaration": 43,
                    "src": "1482:8:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BAPToken_$43",
                      "typeString": "contract BAPToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1286:217:10"
            },
            "returnParameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1556:0:10"
            },
            "scope": 561,
            "src": "1275:777:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 191,
              "nodeType": "Block",
              "src": "2094:99:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_LOTTERY_STATE_$57",
                          "typeString": "enum Lottery.LOTTERY_STATE"
                        },
                        "id": 186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 183,
                          "name": "lotteryState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "2112:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$57",
                            "typeString": "enum Lottery.LOTTERY_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 184,
                            "name": "LOTTERY_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57,
                            "src": "2128:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$57_$",
                              "typeString": "type(enum Lottery.LOTTERY_STATE)"
                            }
                          },
                          "id": 185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "OPENED",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 55,
                          "src": "2128:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$57",
                            "typeString": "enum Lottery.LOTTERY_STATE"
                          }
                        },
                        "src": "2112:36:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6f7474657279206d757374206265206f70656e6564",
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2150:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24b8184f1790fdadd9302d37963d25060e07dda244fc31557c3378e99b3a21c1",
                          "typeString": "literal_string \"Lottery must be opened\""
                        },
                        "value": "Lottery must be opened"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24b8184f1790fdadd9302d37963d25060e07dda244fc31557c3378e99b3a21c1",
                          "typeString": "literal_string \"Lottery must be opened\""
                        }
                      ],
                      "id": 182,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2104:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2104:71:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "2104:71:10"
                },
                {
                  "id": 190,
                  "nodeType": "PlaceholderStatement",
                  "src": "2185:1:10"
                }
              ]
            },
            "id": 192,
            "name": "onlyOpened",
            "nameLocation": "2083:10:10",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2094:0:10"
            },
            "src": "2074:119:10",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 203,
              "nodeType": "Block",
              "src": "2219:99:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_LOTTERY_STATE_$57",
                          "typeString": "enum Lottery.LOTTERY_STATE"
                        },
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 195,
                          "name": "lotteryState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "2237:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$57",
                            "typeString": "enum Lottery.LOTTERY_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 196,
                            "name": "LOTTERY_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57,
                            "src": "2253:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$57_$",
                              "typeString": "type(enum Lottery.LOTTERY_STATE)"
                            }
                          },
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "CLOSED",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54,
                          "src": "2253:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$57",
                            "typeString": "enum Lottery.LOTTERY_STATE"
                          }
                        },
                        "src": "2237:36:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6f7474657279206d75737420626520636c6f736564",
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2275:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_175e27549d0e435a170c022347bd2b2d891b3c4931ba764348aaa6b26ca2005e",
                          "typeString": "literal_string \"Lottery must be closed\""
                        },
                        "value": "Lottery must be closed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_175e27549d0e435a170c022347bd2b2d891b3c4931ba764348aaa6b26ca2005e",
                          "typeString": "literal_string \"Lottery must be closed\""
                        }
                      ],
                      "id": 194,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2229:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2229:71:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "2229:71:10"
                },
                {
                  "id": 202,
                  "nodeType": "PlaceholderStatement",
                  "src": "2310:1:10"
                }
              ]
            },
            "id": 204,
            "name": "onlyClosed",
            "nameLocation": "2208:10:10",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2219:0:10"
            },
            "src": "2199:119:10",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 216,
              "nodeType": "Block",
              "src": "2358:82:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 209,
                          "name": "_number",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 206,
                          "src": "2376:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2387:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2376:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320706172616d657465722063616e6e6f74206265207a65726f",
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2390:31:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c16a8c29b2aa42d4b592011b699468b67b48c9796af36a542b3e3dd17fb8f37",
                          "typeString": "literal_string \"This parameter cannot be zero\""
                        },
                        "value": "This parameter cannot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8c16a8c29b2aa42d4b592011b699468b67b48c9796af36a542b3e3dd17fb8f37",
                          "typeString": "literal_string \"This parameter cannot be zero\""
                        }
                      ],
                      "id": 208,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2368:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2368:54:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 214,
                  "nodeType": "ExpressionStatement",
                  "src": "2368:54:10"
                },
                {
                  "id": 215,
                  "nodeType": "PlaceholderStatement",
                  "src": "2432:1:10"
                }
              ]
            },
            "id": 217,
            "name": "notZero",
            "nameLocation": "2333:7:10",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "_number",
                  "nameLocation": "2349:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 217,
                  "src": "2341:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2341:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2340:17:10"
            },
            "src": "2324:116:10",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 223,
              "nodeType": "Block",
              "src": "2473:25:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 220,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "2483:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2483:8:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "2483:8:10"
                }
              ]
            },
            "id": 224,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2454:2:10"
            },
            "returnParameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2473:0:10"
            },
            "scope": 561,
            "src": "2446:52:10",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 227,
              "nodeType": "Block",
              "src": "2530:8:10",
              "statements": []
            },
            "id": 228,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2511:2:10"
            },
            "returnParameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2530:0:10"
            },
            "scope": 561,
            "src": "2504:34:10",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 334,
              "nodeType": "Block",
              "src": "2968:611:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 239,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2986:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2986:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 243,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3008:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3000:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 241,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3000:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3000:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2986:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420757365722061646472657373",
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3012:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78359dd56f2c41c23946f5c79919dd06f79520be28e60a3758f48fb62585fbf5",
                          "typeString": "literal_string \"invalid user address\""
                        },
                        "value": "invalid user address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_78359dd56f2c41c23946f5c79919dd06f79520be28e60a3758f48fb62585fbf5",
                          "typeString": "literal_string \"invalid user address\""
                        }
                      ],
                      "id": 238,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2978:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2978:57:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "2978:57:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 252,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3072:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3072:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 256,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3092:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lottery_$561",
                              "typeString": "contract Lottery"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lottery_$561",
                              "typeString": "contract Lottery"
                            }
                          ],
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3084:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 254,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3084:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3084:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 260,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 258,
                                "name": "ticketPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63,
                                "src": "3100:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 259,
                                "name": "_numberOfEntries",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 230,
                                "src": "3112:16:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3100:28:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 261,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3129:2:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 262,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3133:2:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "3129:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "3100:35:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 265,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3099:37:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 249,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "3054:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BAPToken_$43",
                          "typeString": "contract BAPToken"
                        }
                      },
                      "id": 251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "3054:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3054:83:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 267,
                  "nodeType": "ExpressionStatement",
                  "src": "3054:83:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 271,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3166:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3166:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 275,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3186:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lottery_$561",
                              "typeString": "contract Lottery"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lottery_$561",
                              "typeString": "contract Lottery"
                            }
                          ],
                          "id": 274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3178:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 273,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3178:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3178:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 277,
                                "name": "ticketPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63,
                                "src": "3194:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 278,
                                "name": "_numberOfEntries",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 230,
                                "src": "3206:16:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3194:28:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 282,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 280,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3223:2:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 281,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3227:2:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "3223:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "3194:35:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 284,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3193:37:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 268,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "3147:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BAPToken_$43",
                          "typeString": "contract BAPToken"
                        }
                      },
                      "id": 270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 886,
                      "src": "3147:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3147:84:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 286,
                  "nodeType": "ExpressionStatement",
                  "src": "3147:84:10"
                },
                {
                  "expression": {
                    "id": 296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 287,
                      "name": "poolPrize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "3241:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 288,
                          "name": "ticketPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "3254:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 289,
                          "name": "_numberOfEntries",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 230,
                          "src": "3266:16:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3254:28:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 291,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3284:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3288:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "3284:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          }
                        ],
                        "id": 294,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3283:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "3254:37:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3241:50:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 297,
                  "nodeType": "ExpressionStatement",
                  "src": "3241:50:10"
                },
                {
                  "body": {
                    "id": 332,
                    "nodeType": "Block",
                    "src": "3366:207:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 308,
                              "name": "entryIdToParticipant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85,
                              "src": "3380:20:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 310,
                            "indexExpression": {
                              "id": 309,
                              "name": "entryCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "3401:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3380:34:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 311,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3417:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3417:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3380:47:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 314,
                        "nodeType": "ExpressionStatement",
                        "src": "3380:47:10"
                      },
                      {
                        "expression": {
                          "id": 319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "3441:32:10",
                          "subExpression": {
                            "baseExpression": {
                              "id": 315,
                              "name": "participantEntries",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81,
                              "src": "3441:18:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 318,
                            "indexExpression": {
                              "expression": {
                                "id": 316,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3460:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 317,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3460:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3441:30:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 320,
                        "nodeType": "ExpressionStatement",
                        "src": "3441:32:10"
                      },
                      {
                        "expression": {
                          "id": 322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "3487:14:10",
                          "subExpression": {
                            "id": 321,
                            "name": "entryCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "3487:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 323,
                        "nodeType": "ExpressionStatement",
                        "src": "3487:14:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 325,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3529:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3529:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 329,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 327,
                                "name": "entryCounter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67,
                                "src": "3541:12:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 328,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3556:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "3541:16:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 324,
                            "name": "NewEntry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "3520:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3520:38:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 331,
                        "nodeType": "EmitStatement",
                        "src": "3515:43:10"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 302,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 299,
                      "src": "3327:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 303,
                      "name": "_numberOfEntries",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 230,
                      "src": "3337:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3327:26:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 333,
                  "initializationExpression": {
                    "assignments": [
                      299
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 299,
                        "mutability": "mutable",
                        "name": "counter",
                        "nameLocation": "3314:7:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 333,
                        "src": "3306:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 298,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3306:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 301,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3324:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3306:19:10"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3355:9:10",
                      "subExpression": {
                        "id": 305,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "3355:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 307,
                    "nodeType": "ExpressionStatement",
                    "src": "3355:9:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "3301:272:10"
                }
              ]
            },
            "functionSelector": "3fd43098",
            "id": 335,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 233,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 232,
                  "name": "onlyOpened",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 192,
                  "src": "2918:10:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "2918:10:10"
              },
              {
                "arguments": [
                  {
                    "id": 235,
                    "name": "_numberOfEntries",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 230,
                    "src": "2946:16:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 236,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 234,
                  "name": "notZero",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 217,
                  "src": "2938:7:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "2938:25:10"
              }
            ],
            "name": "enterLottery",
            "nameLocation": "2837:12:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 230,
                  "mutability": "mutable",
                  "name": "_numberOfEntries",
                  "nameLocation": "2858:16:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 335,
                  "src": "2850:24:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 229,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2850:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2849:26:10"
            },
            "returnParameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2968:0:10"
            },
            "scope": 561,
            "src": "2828:751:10",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 378,
              "nodeType": "Block",
              "src": "3660:251:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 346,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 337,
                          "src": "3678:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 349,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3695:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 348,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3687:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 347,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3687:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3687:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3678:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420757365722061646472657373",
                        "id": 352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3699:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78359dd56f2c41c23946f5c79919dd06f79520be28e60a3758f48fb62585fbf5",
                          "typeString": "literal_string \"invalid user address\""
                        },
                        "value": "invalid user address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_78359dd56f2c41c23946f5c79919dd06f79520be28e60a3758f48fb62585fbf5",
                          "typeString": "literal_string \"invalid user address\""
                        }
                      ],
                      "id": 345,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3670:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3670:52:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 354,
                  "nodeType": "ExpressionStatement",
                  "src": "3670:52:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 360,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3803:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lottery_$561",
                              "typeString": "contract Lottery"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lottery_$561",
                              "typeString": "contract Lottery"
                            }
                          ],
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3795:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 358,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3795:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3795:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 362,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 337,
                        "src": "3810:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 363,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 339,
                        "src": "3817:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 355,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "3777:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BAPToken_$43",
                          "typeString": "contract BAPToken"
                        }
                      },
                      "id": 357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "3777:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3777:48:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 365,
                  "nodeType": "ExpressionStatement",
                  "src": "3777:48:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 369,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 337,
                        "src": "3850:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 370,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 339,
                        "src": "3857:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 366,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "3835:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BAPToken_$43",
                          "typeString": "contract BAPToken"
                        }
                      },
                      "id": 368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 800,
                      "src": "3835:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3835:30:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "3835:30:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 374,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 337,
                        "src": "3889:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 375,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 339,
                        "src": "3896:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 373,
                      "name": "UserPaid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 112,
                      "src": "3880:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3880:24:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 377,
                  "nodeType": "EmitStatement",
                  "src": "3875:29:10"
                }
              ]
            },
            "id": 379,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 342,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 339,
                    "src": "3651:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 343,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 341,
                  "name": "notZero",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 217,
                  "src": "3643:7:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "3643:16:10"
              }
            ],
            "name": "payUser",
            "nameLocation": "3594:7:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 337,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "3610:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "3602:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 336,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3602:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 339,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3625:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "3617:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 338,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3617:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3601:32:10"
            },
            "returnParameters": {
              "id": 344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3660:0:10"
            },
            "scope": 561,
            "src": "3585:326:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 401,
              "nodeType": "Block",
              "src": "3959:168:10",
              "statements": [
                {
                  "expression": {
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 384,
                      "name": "lotteryState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "3969:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$57",
                        "typeString": "enum Lottery.LOTTERY_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 385,
                        "name": "LOTTERY_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "3984:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$57_$",
                          "typeString": "type(enum Lottery.LOTTERY_STATE)"
                        }
                      },
                      "id": 386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OPENED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55,
                      "src": "3984:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$57",
                        "typeString": "enum Lottery.LOTTERY_STATE"
                      }
                    },
                    "src": "3969:35:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LOTTERY_STATE_$57",
                      "typeString": "enum Lottery.LOTTERY_STATE"
                    }
                  },
                  "id": 388,
                  "nodeType": "ExpressionStatement",
                  "src": "3969:35:10"
                },
                {
                  "expression": {
                    "id": 394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 389,
                      "name": "lotteryDeadlineTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "4014:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 390,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4041:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4041:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 392,
                        "name": "lotteryDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "4059:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4041:33:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4014:60:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 395,
                  "nodeType": "ExpressionStatement",
                  "src": "4014:60:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 397,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4104:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4104:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 396,
                      "name": "LotteryStarted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "4089:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4089:31:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 400,
                  "nodeType": "EmitStatement",
                  "src": "4084:36:10"
                }
              ]
            },
            "functionSelector": "160344e2",
            "id": 402,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 382,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 381,
                  "name": "onlyClosed",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 204,
                  "src": "3948:10:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "3948:10:10"
              }
            ],
            "name": "startLottery",
            "nameLocation": "3926:12:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3938:2:10"
            },
            "returnParameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3959:0:10"
            },
            "scope": 561,
            "src": "3917:210:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 431,
              "nodeType": "Block",
              "src": "4173:293:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 408,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4204:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4204:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 410,
                          "name": "lotteryDeadlineTimestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73,
                          "src": "4223:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4204:43:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206c6f7474657279206973206e6f742066696e697368656420796574",
                        "id": 412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4261:33:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6605f885a4e16d3a30670960fdf2d7ade95b4256c5d90913c8496c1e0e737f79",
                          "typeString": "literal_string \"The lottery is not finished yet\""
                        },
                        "value": "The lottery is not finished yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6605f885a4e16d3a30670960fdf2d7ade95b4256c5d90913c8496c1e0e737f79",
                          "typeString": "literal_string \"The lottery is not finished yet\""
                        }
                      ],
                      "id": 407,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4183:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4183:121:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 414,
                  "nodeType": "ExpressionStatement",
                  "src": "4183:121:10"
                },
                {
                  "expression": {
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 415,
                      "name": "lotteryState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "4314:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$57",
                        "typeString": "enum Lottery.LOTTERY_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 416,
                        "name": "LOTTERY_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "4329:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$57_$",
                          "typeString": "type(enum Lottery.LOTTERY_STATE)"
                        }
                      },
                      "id": 417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PROCESSING",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56,
                      "src": "4329:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$57",
                        "typeString": "enum Lottery.LOTTERY_STATE"
                      }
                    },
                    "src": "4314:39:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LOTTERY_STATE_$57",
                      "typeString": "enum Lottery.LOTTERY_STATE"
                    }
                  },
                  "id": 419,
                  "nodeType": "ExpressionStatement",
                  "src": "4314:39:10"
                },
                {
                  "assignments": [
                    421
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 421,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nameLocation": "4371:9:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 431,
                      "src": "4363:17:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 420,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4363:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 426,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 423,
                        "name": "keyhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "4401:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 424,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "4410:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 422,
                      "name": "requestRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1391,
                      "src": "4383:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,uint256) returns (bytes32)"
                      }
                    },
                    "id": 425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4383:31:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4363:51:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 428,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 421,
                        "src": "4449:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 427,
                      "name": "RequestedRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "4429:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4429:30:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 430,
                  "nodeType": "EmitStatement",
                  "src": "4424:35:10"
                }
              ]
            },
            "functionSelector": "1593a8c7",
            "id": 432,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 405,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 404,
                  "name": "onlyOpened",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 192,
                  "src": "4162:10:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "4162:10:10"
              }
            ],
            "name": "endLottery",
            "nameLocation": "4142:10:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4152:2:10"
            },
            "returnParameters": {
              "id": 406,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4173:0:10"
            },
            "scope": 561,
            "src": "4133:333:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1335
            ],
            "body": {
              "id": 511,
              "nodeType": "Block",
              "src": "4607:1072:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_LOTTERY_STATE_$57",
                          "typeString": "enum Lottery.LOTTERY_STATE"
                        },
                        "id": 447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 444,
                          "name": "lotteryState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "4638:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$57",
                            "typeString": "enum Lottery.LOTTERY_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 445,
                            "name": "LOTTERY_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57,
                            "src": "4654:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$57_$",
                              "typeString": "type(enum Lottery.LOTTERY_STATE)"
                            }
                          },
                          "id": 446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PROCESSING",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56,
                          "src": "4654:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$57",
                            "typeString": "enum Lottery.LOTTERY_STATE"
                          }
                        },
                        "src": "4638:40:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520636f6e7472616374206973206e6f742070726f63657373696e67207468652077696e6e657220796574",
                        "id": 448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4692:47:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3380ff1cf7bbb5233943bdda5dddcad4801271a6dac08f2f1408983f671fad6a",
                          "typeString": "literal_string \"The contract is not processing the winner yet\""
                        },
                        "value": "The contract is not processing the winner yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3380ff1cf7bbb5233943bdda5dddcad4801271a6dac08f2f1408983f671fad6a",
                          "typeString": "literal_string \"The contract is not processing the winner yet\""
                        }
                      ],
                      "id": 443,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4617:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4617:132:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 450,
                  "nodeType": "ExpressionStatement",
                  "src": "4617:132:10"
                },
                {
                  "assignments": [
                    452
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 452,
                      "mutability": "mutable",
                      "name": "entryIdOfWinner",
                      "nameLocation": "4767:15:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 511,
                      "src": "4759:23:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 451,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4759:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 456,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 453,
                      "name": "_randomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 436,
                      "src": "4785:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "id": 454,
                      "name": "entryCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "4799:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4785:26:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4759:52:10"
                },
                {
                  "expression": {
                    "id": 461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 457,
                      "name": "latestWinner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "4821:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 458,
                        "name": "entryIdToParticipant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85,
                        "src": "4836:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 460,
                      "indexExpression": {
                        "id": 459,
                        "name": "entryIdOfWinner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 452,
                        "src": "4857:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4836:37:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4821:52:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 462,
                  "nodeType": "ExpressionStatement",
                  "src": "4821:52:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 464,
                        "name": "poolPrize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "4898:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 465,
                        "name": "latestWinner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "4909:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 463,
                      "name": "transferPrize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 543,
                      "src": "4884:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4884:38:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 467,
                  "nodeType": "ExpressionStatement",
                  "src": "4884:38:10"
                },
                {
                  "expression": {
                    "id": 471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 468,
                      "name": "lotteryState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "5356:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$57",
                        "typeString": "enum Lottery.LOTTERY_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 469,
                        "name": "LOTTERY_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "5371:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$57_$",
                          "typeString": "type(enum Lottery.LOTTERY_STATE)"
                        }
                      },
                      "id": 470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CLOSED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54,
                      "src": "5371:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$57",
                        "typeString": "enum Lottery.LOTTERY_STATE"
                      }
                    },
                    "src": "5356:35:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LOTTERY_STATE_$57",
                      "typeString": "enum Lottery.LOTTERY_STATE"
                    }
                  },
                  "id": 472,
                  "nodeType": "ExpressionStatement",
                  "src": "5356:35:10"
                },
                {
                  "expression": {
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 473,
                      "name": "poolPrize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "5401:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5413:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5401:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 476,
                  "nodeType": "ExpressionStatement",
                  "src": "5401:13:10"
                },
                {
                  "body": {
                    "id": 495,
                    "nodeType": "Block",
                    "src": "5476:76:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 487,
                              "name": "participantEntries",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81,
                              "src": "5490:18:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 491,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 488,
                                "name": "entryIdToParticipant",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85,
                                "src": "5509:20:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                  "typeString": "mapping(uint256 => address)"
                                }
                              },
                              "id": 490,
                              "indexExpression": {
                                "id": 489,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 478,
                                "src": "5530:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5509:27:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5490:47:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5540:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5490:51:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 494,
                        "nodeType": "ExpressionStatement",
                        "src": "5490:51:10"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 481,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 478,
                      "src": "5445:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 482,
                      "name": "entryCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "5453:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5445:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 496,
                  "initializationExpression": {
                    "assignments": [
                      478
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 478,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "5434:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 496,
                        "src": "5429:10:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 477,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5429:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 480,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5442:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5429:14:10"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5467:7:10",
                      "subExpression": {
                        "id": 484,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 478,
                        "src": "5467:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 486,
                    "nodeType": "ExpressionStatement",
                    "src": "5467:7:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "5424:128:10"
                },
                {
                  "expression": {
                    "id": 499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 497,
                      "name": "entryCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "5561:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5576:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5561:16:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 500,
                  "nodeType": "ExpressionStatement",
                  "src": "5561:16:10"
                },
                {
                  "expression": {
                    "id": 503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 501,
                      "name": "randomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "5587:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 502,
                      "name": "_randomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 436,
                      "src": "5600:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5587:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 504,
                  "nodeType": "ExpressionStatement",
                  "src": "5587:24:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 506,
                        "name": "latestWinner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "5642:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 507,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "5656:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "5656:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 505,
                      "name": "LotteryFinished",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100,
                      "src": "5626:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5626:46:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 510,
                  "nodeType": "EmitStatement",
                  "src": "5621:51:10"
                }
              ]
            },
            "id": 512,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 440,
                    "name": "_randomness",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 436,
                    "src": "4590:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 441,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 439,
                  "name": "notZero",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 217,
                  "src": "4582:7:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "4582:20:10"
              }
            ],
            "name": "fulfillRandomness",
            "nameLocation": "4481:17:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 438,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4565:8:10"
            },
            "parameters": {
              "id": 437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 434,
                  "mutability": "mutable",
                  "name": "_requestId",
                  "nameLocation": "4507:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 512,
                  "src": "4499:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 433,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4499:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 436,
                  "mutability": "mutable",
                  "name": "_randomness",
                  "nameLocation": "4527:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 512,
                  "src": "4519:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 435,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4519:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4498:41:10"
            },
            "returnParameters": {
              "id": 442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4607:0:10"
            },
            "scope": 561,
            "src": "4472:1207:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 542,
              "nodeType": "Block",
              "src": "5753:126:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 524,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5789:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lottery_$561",
                              "typeString": "contract Lottery"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Lottery_$561",
                              "typeString": "contract Lottery"
                            }
                          ],
                          "id": 523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5781:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 522,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5781:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5781:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 526,
                        "name": "winner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 516,
                        "src": "5796:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 527,
                          "name": "_winnerPrize",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 514,
                          "src": "5804:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 530,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 528,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5818:2:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 529,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5822:2:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "5818:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            }
                          ],
                          "id": 531,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5817:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "5804:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 519,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "5763:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BAPToken_$43",
                          "typeString": "contract BAPToken"
                        }
                      },
                      "id": 521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "5763:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5763:63:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 534,
                  "nodeType": "ExpressionStatement",
                  "src": "5763:63:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 538,
                        "name": "winner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 516,
                        "src": "5851:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 539,
                        "name": "_winnerPrize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 514,
                        "src": "5859:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 535,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "5836:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BAPToken_$43",
                          "typeString": "contract BAPToken"
                        }
                      },
                      "id": 537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 800,
                      "src": "5836:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5836:36:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 541,
                  "nodeType": "ExpressionStatement",
                  "src": "5836:36:10"
                }
              ]
            },
            "id": 543,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferPrize",
            "nameLocation": "5694:13:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 514,
                  "mutability": "mutable",
                  "name": "_winnerPrize",
                  "nameLocation": "5716:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 543,
                  "src": "5708:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 513,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5708:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 516,
                  "mutability": "mutable",
                  "name": "winner",
                  "nameLocation": "5738:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 543,
                  "src": "5730:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5730:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5707:38:10"
            },
            "returnParameters": {
              "id": 518,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5753:0:10"
            },
            "scope": 561,
            "src": "5685:194:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 559,
              "nodeType": "Block",
              "src": "6221:47:10",
              "statements": [
                {
                  "expression": {
                    "id": 557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 555,
                      "name": "lotteryDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "6231:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 556,
                      "name": "_newDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 545,
                      "src": "6249:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6231:30:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 558,
                  "nodeType": "ExpressionStatement",
                  "src": "6231:30:10"
                }
              ]
            },
            "functionSelector": "b594f086",
            "id": 560,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 548,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 547,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1269,
                  "src": "6157:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "6157:9:10"
              },
              {
                "id": 550,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 549,
                  "name": "onlyClosed",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 204,
                  "src": "6176:10:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "6176:10:10"
              },
              {
                "arguments": [
                  {
                    "id": 552,
                    "name": "_newDuration",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 545,
                    "src": "6203:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 553,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 551,
                  "name": "notZero",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 217,
                  "src": "6195:7:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "6195:21:10"
              }
            ],
            "name": "changeDuration",
            "nameLocation": "6096:14:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 546,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 545,
                  "mutability": "mutable",
                  "name": "_newDuration",
                  "nameLocation": "6119:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 560,
                  "src": "6111:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 544,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6111:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6110:22:10"
            },
            "returnParameters": {
              "id": 554,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6221:0:10"
            },
            "scope": 561,
            "src": "6087:181:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 562,
        "src": "275:5995:10",
        "usedErrors": []
      }
    ],
    "src": "32:6239:10"
  },
  "bytecode": "",
  "bytecodeSha1": "f5d84c11b8295ecc67661e3c1015096b1725fc8a",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "Lottery",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "47": [
            2082,
            2104,
            true
          ]
        }
      },
      "1": {},
      "10": {
        "Context._msgSender": {
          "45": [
            2237,
            2273,
            true
          ]
        },
        "Lottery.endLottery": {
          "43": [
            4204,
            4247,
            true
          ]
        },
        "Lottery.enterLottery": {
          "44": [
            2112,
            2148,
            true
          ]
        },
        "Lottery.fulfillRandomness": {
          "46": [
            4638,
            4678,
            true
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {},
      "5": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "48": [
            9749,
            9777,
            true
          ]
        }
      },
      "6": {},
      "9": {}
    },
    "statements": {
      "0": {
        "Ownable.owner": {
          "1": [
            1133,
            1146
          ]
        },
        "Ownable.renounceOwnership": {
          "18": [
            1764,
            1809
          ],
          "19": [
            1819,
            1838
          ]
        },
        "Ownable.transferOwnership": {
          "23": [
            2074,
            2147
          ],
          "24": [
            2157,
            2200
          ],
          "25": [
            2210,
            2227
          ]
        }
      },
      "1": {},
      "10": {
        "Lottery.<fallback>": {
          "0": [
            2483,
            2491
          ]
        },
        "Lottery.changeDuration": {
          "22": [
            6231,
            6261
          ]
        },
        "Lottery.endLottery": {
          "2": [
            4183,
            4304
          ],
          "3": [
            4314,
            4353
          ],
          "4": [
            4424,
            4459
          ]
        },
        "Lottery.enterLottery": {
          "8": [
            2978,
            3035
          ],
          "9": [
            3054,
            3137
          ],
          "10": [
            3147,
            3231
          ],
          "11": [
            3241,
            3291
          ],
          "12": [
            3380,
            3427
          ],
          "13": [
            3441,
            3473
          ],
          "14": [
            3487,
            3501
          ],
          "15": [
            3515,
            3558
          ],
          "16": [
            3355,
            3364
          ]
        },
        "Lottery.fulfillRandomness": {
          "31": [
            4617,
            4749
          ],
          "32": [
            4821,
            4873
          ],
          "33": [
            4884,
            4922
          ],
          "34": [
            5356,
            5391
          ],
          "35": [
            5401,
            5414
          ],
          "36": [
            5490,
            5541
          ],
          "37": [
            5467,
            5474
          ],
          "38": [
            5561,
            5577
          ],
          "39": [
            5587,
            5611
          ],
          "40": [
            5621,
            5672
          ]
        },
        "Lottery.startLottery": {
          "5": [
            3969,
            4004
          ],
          "6": [
            4014,
            4074
          ],
          "7": [
            4084,
            4120
          ]
        },
        "Lottery.transferPrize": {
          "41": [
            5763,
            5826
          ],
          "42": [
            5836,
            5872
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {
        "Context._msgSender": {
          "17": [
            658,
            675
          ]
        }
      },
      "5": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "20": [
            9741,
            9813
          ],
          "21": [
            9819,
            9859
          ]
        },
        "VRFConsumerBase.requestRandomness": {
          "26": [
            7888,
            7975
          ],
          "28": [
            8718,
            8757
          ],
          "30": [
            8763,
            8802
          ]
        }
      },
      "6": {
        "VRFRequestIDBase.makeRequestId": {
          "29": [
            1583,
            1642
          ]
        },
        "VRFRequestIDBase.makeVRFInputSeed": {
          "27": [
            980,
            1058
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "BAPToken",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/IERC20Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/Ownable",
    "smartcontractkit/chainlink-brownie-contracts@0.2.2/VRFConsumerBase",
    "smartcontractkit/chainlink-brownie-contracts@0.2.2/VRFRequestIDBase"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "275:5995:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2483:8;;;275:5995;;;;;;;;;;;;;;;;;;;;;;;;;;2483:8;;;275:5995;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2483:8;;;275:5995;;;;;;;;;;;;;;;;;;;;;;;;;;2483:8;;;275:5995;;;;;;2483:8;;;739:27;;;;;;;;;;-1:-1:-1;739:27:10;;;;-1:-1:-1;;;;;739:27:10;;;;;;-1:-1:-1;;;;;178:32:12;;;160:51;;148:2;133:18;739:27:10;;;;;;;;4133:333;;;;;;;;;;;;;:::i;:::-;;3917:210;;;;;;;;;;;;;:::i;626:30::-;;;;;;;;;;;;;;;;;;;368:25:12;;;356:2;341:18;626:30:10;222:177:12;505:25:10;;;;;;;;;;;;;;;;2828:751;;;;;;:::i;:::-;;:::i;536:27::-;;;;;;;;;;;;;;;;437:33;;;;;;;;;;-1:-1:-1;437:33:10;;;;-1:-1:-1;;;437:33:10;;;;;;;;;;;;;:::i;711:22::-;;;;;;;;;;;;;;;;1700:145:0;;;;;;;;;;;;;:::i;964:24:10:-;;;;;;;;;;;;;;;;1068:85:0;;;;;;;;;;-1:-1:-1;1140:6:0;;-1:-1:-1;;;;;1140:6:0;1068:85;;9639:225:5;;;;;;;;;;-1:-1:-1;9639:225:5;;;;;:::i;:::-;;:::i;6087:181:10:-;;;;;;;;;;-1:-1:-1;6087:181:10;;;;;:::i;:::-;;:::i;662:39::-;;;;;;;;;;;;;;;;601:18;;;;;;;;;;;;;;;;1994:240:0;;;;;;;;;;-1:-1:-1;1994:240:0;;;;;:::i;:::-;;:::i;937:21:10:-;;;;;;;;;;-1:-1:-1;937:21:10;;;;-1:-1:-1;;;;;937:21:10;;;772:53;;;;;;;;;;-1:-1:-1;772:53:10;;;;;:::i;:::-;;;;;;;;;;;;;;831;;;;;;;;;;-1:-1:-1;831:53:10;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;831:53:10;;;4133:333;2128:20;2112:12;;-1:-1:-1;;;2112:12:10;;;;:36;;;;;;;;:::i;:::-;;2104:71;;;;-1:-1:-1;;;2104:71:10;;2221:2:12;2104:71:10;;;2203:21:12;2260:2;2240:18;;;2233:30;-1:-1:-1;;;2279:18:12;;;2272:52;2341:18;;2104:71:10;;;;;;;;;4223:24:::1;;4204:15;:43;;4183:121;;;::::0;-1:-1:-1;;;4183:121:10;;2572:2:12;4183:121:10::1;::::0;::::1;2554:21:12::0;2611:2;2591:18;;;2584:30;2650:33;2630:18;;;2623:61;2701:18;;4183:121:10::1;2370:355:12::0;4183:121:10::1;4314:12;:39:::0;;-1:-1:-1;;;;4314:39:10::1;-1:-1:-1::0;;;4314:39:10::1;::::0;;4401:7:::1;::::0;4410:3:::1;::::0;-1:-1:-1;;4383:31:10::1;::::0;:17:::1;:31::i;:::-;4363:51;;4429:30;4449:9;4429:30;;;;368:25:12::0;;356:2;341:18;;222:177;4429:30:10::1;;;;;;;;4173:293;4133:333::o:0;3917:210::-;2253:20;2237:12;;-1:-1:-1;;;2237:12:10;;;;:36;;;;;;;;:::i;:::-;;2229:71;;;;-1:-1:-1;;;2229:71:10;;2932:2:12;2229:71:10;;;2914:21:12;2971:2;2951:18;;;2944:30;-1:-1:-1;;;2990:18:12;;;2983:52;3052:18;;2229:71:10;2730:346:12;2229:71:10;3984:20:::1;3969:35:::0;;-1:-1:-1;;;;3969:35:10::1;-1:-1:-1::0;;;3969:35:10::1;::::0;;4059:15:::1;::::0;4041:33:::1;::::0;:15:::1;:33;:::i;:::-;4014:24;:60:::0;4089:31:::1;::::0;4104:15:::1;368:25:12::0;;4089:31:10::1;::::0;356:2:12;341:18;4089:31:10::1;;;;;;;3917:210::o:0;2828:751::-;2128:20;2112:12;;-1:-1:-1;;;2112:12:10;;;;:36;;;;;;;;:::i;:::-;;2104:71;;;;-1:-1:-1;;;2104:71:10;;2221:2:12;2104:71:10;;;2203:21:12;2260:2;2240:18;;;2233:30;-1:-1:-1;;;2279:18:12;;;2272:52;2341:18;;2104:71:10;2019:346:12;2104:71:10;2946:16:::1;2376:7;2387:1;2376:12:::0;2368:54:::1;;;;-1:-1:-1::0;;;2368:54:10::1;;;;;;;:::i;:::-;2986:10:::2;2978:57;;;::::0;-1:-1:-1;;;2978:57:10;;3906:2:12;2978:57:10::2;::::0;::::2;3888:21:12::0;3945:2;3925:18;;;3918:30;-1:-1:-1;;;3964:18:12;;;3957:50;4024:18;;2978:57:10::2;3704:344:12::0;2978:57:10::2;3054:5;::::0;;3100:11;-1:-1:-1;;;;;3054:5:10;;::::2;::::0;:17:::2;::::0;3072:10:::2;::::0;3092:4:::2;::::0;3100:28:::2;::::0;3112:16;;-1:-1:-1;;;3100:11:10;::::2;;;:28;:::i;:::-;:35;::::0;3129:6:::2;3100:35;:::i;:::-;3054:83;::::0;-1:-1:-1;;;;;;3054:83:10::2;::::0;;;;;;-1:-1:-1;;;;;4484:15:12;;;3054:83:10::2;::::0;::::2;4466:34:12::0;4536:15;;;;4516:18;;;4509:43;4568:18;;;4561:34;4401:18;;3054:83:10::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;3147:5:10::2;::::0;;3194:11;-1:-1:-1;;;;;3147:5:10;;::::2;::::0;-1:-1:-1;3147:18:10::2;::::0;-1:-1:-1;3166:10:10::2;::::0;3186:4:::2;::::0;3194:28:::2;::::0;3206:16;;-1:-1:-1;;;3194:11:10;::::2;;;:28;:::i;:::-;:35;::::0;3223:6:::2;3194:35;:::i;:::-;3147:84;::::0;-1:-1:-1;;;;;;3147:84:10::2;::::0;;;;;;-1:-1:-1;;;;;4484:15:12;;;3147:84:10::2;::::0;::::2;4466:34:12::0;4536:15;;;;4516:18;;;4509:43;4568:18;;;4561:34;4401:18;;3147:84:10::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3254:11:10::2;::::0;:28:::2;::::0;3266:16;;-1:-1:-1;;;3254:11:10;::::2;;;:28;:::i;:::-;:37;::::0;3284:6:::2;3254:37;:::i;:::-;3241:9;;:50;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;3306:15:10::2;::::0;-1:-1:-1;3301:272:10::2;3337:16;3327:7;:26;3301:272;;;3401:12;::::0;3380:34:::2;::::0;;;:20:::2;:34;::::0;;;;;;;:47;;-1:-1:-1;;;;;;3380:47:10::2;3417:10;3380:47:::0;;::::2;::::0;;;3441:30;;:18:::2;:30:::0;;;;;:32;;;::::2;::::0;::::2;:::i;:::-;::::0;;;-1:-1:-1;;3487:12:10::2;:14:::0;;;:12:::2;:14;::::0;::::2;:::i;:::-;;;;;;3520:38;3529:10;3556:1;3541:12;;:16;;;;:::i;:::-;3520:38;::::0;;-1:-1:-1;;;;;5350:32:12;;;5332:51;;5414:2;5399:18;;5392:34;;;;5305:18;3520:38:10::2;;;;;;;3355:9:::0;::::2;::::0;::::2;:::i;:::-;;;;3301:272;;;;2185:1:::1;2828:751:::0;:::o;1700:145:0:-;1140:6;;-1:-1:-1;;;;;1140:6:0;665:10:4;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;1790:6:::1;::::0;1769:40:::1;::::0;1806:1:::1;::::0;-1:-1:-1;;;;;1790:6:0::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1819:6;:19:::0;;-1:-1:-1;;;;;;1819:19:0::1;::::0;;1700:145::o;9639:225:5:-;9749:10;-1:-1:-1;;;;;9763:14:5;9749:28;;9741:72;;;;-1:-1:-1;;;9741:72:5;;6000:2:12;9741:72:5;;;5982:21:12;6039:2;6019:18;;;6012:30;6078:33;6058:18;;;6051:61;6129:18;;9741:72:5;5798:355:12;9741:72:5;9819:40;9837:9;9848:10;9819:17;:40::i;:::-;9639:225;;:::o;6087:181:10:-;1140:6:0;;-1:-1:-1;;;;;1140:6:0;665:10:4;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;2253:20:10::1;2237:12;::::0;-1:-1:-1;;;2237:12:10;::::1;;;:36;::::0;::::1;;;;;;:::i;:::-;;2229:71;;;::::0;-1:-1:-1;;;2229:71:10;;2932:2:12;2229:71:10::1;::::0;::::1;2914:21:12::0;2971:2;2951:18;;;2944:30;-1:-1:-1;;;2990:18:12;;;2983:52;3052:18;;2229:71:10::1;2730:346:12::0;2229:71:10::1;6203:12:::2;2376:7;2387:1;2376:12:::0;2368:54:::2;;;;-1:-1:-1::0;;;2368:54:10::2;;;;;;;:::i;:::-;-1:-1:-1::0;6231:15:10::3;:30:::0;6087:181::o;1994:240:0:-;1140:6;;-1:-1:-1;;;;;1140:6:0;665:10:4;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2082:22:0;::::1;2074:73;;;::::0;-1:-1:-1;;;2074:73:0;;6360:2:12;2074:73:0::1;::::0;::::1;6342:21:12::0;6399:2;6379:18;;;6372:30;6438:34;6418:18;;;6411:62;-1:-1:-1;;;6489:18:12;;;6482:36;6535:19;;2074:73:0::1;6158:402:12::0;2074:73:0::1;2183:6;::::0;2162:38:::1;::::0;-1:-1:-1;;;;;2162:38:0;;::::1;::::0;2183:6:::1;::::0;2162:38:::1;::::0;2183:6:::1;::::0;2162:38:::1;2210:6;:17:::0;;-1:-1:-1;;;;;;2210:17:0::1;-1:-1:-1::0;;;;;2210:17:0;;;::::1;::::0;;;::::1;::::0;;1994:240::o;7752:1055:5:-;7856:17;7888:4;-1:-1:-1;;;;;7888:20:5;;7909:14;7925:4;7942:8;6609:1;7931:43;;;;;;;;6739:25:12;;;6795:2;6780:18;;6773:34;6727:2;6712:18;;6565:248;7931:43:5;;;;;;;;;;;;;7888:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8206:15:5;8290:16;;;;;;;;;;;;1005:51:6;;;;;8448:25:12;;;8489:18;;;8482:34;;;8283:4:5;8532:18:12;;;8525:60;8601:18;;;;8594:34;;;1005:51:6;;;;;;;;;;8420:19:12;;;;1005:51:6;;;995:62;;;;;;;;;8737:16:5;;;;;;;:20;;8756:1;8737:20;:::i;:::-;8718:6;:16;;;;;;;;;;;;:39;;;;1600:41:6;;;;;8796:19:12;;;8831:12;;;8824:28;;;1600:41:6;;;;;;;;;8868:12:12;;;;1600:41:6;;;1590:52;;;;;8763:39:5;7752:1055;-1:-1:-1;;;;7752:1055:5:o;4472:1207:10:-;4590:11;2376:7;2387:1;2376:12;2368:54;;;;-1:-1:-1;;;2368:54:10;;;;;;;:::i;:::-;4654:24:::1;4638:12;::::0;-1:-1:-1;;;4638:12:10;::::1;;;:40;::::0;::::1;;;;;;:::i;:::-;;4617:132;;;::::0;-1:-1:-1;;;4617:132:10;;7791:2:12;4617:132:10::1;::::0;::::1;7773:21:12::0;7830:2;7810:18;;;7803:30;7869:34;7849:18;;;7842:62;-1:-1:-1;;;7920:18:12;;;7913:43;7973:19;;4617:132:10::1;7589:409:12::0;4617:132:10::1;4759:23;4799:12;;4785:11;:26;;;;:::i;:::-;4836:37;::::0;;;:20:::1;:37;::::0;;;;;4821:12:::1;:52:::0;;-1:-1:-1;;;;;;4821:52:10::1;-1:-1:-1::0;;;;;4836:37:10;;::::1;4821:52:::0;;::::1;::::0;;4898:9:::1;::::0;4759:52;;-1:-1:-1;4884:38:10::1;::::0;4898:9;4884:13:::1;:38::i;:::-;5356:12;:35:::0;;-1:-1:-1;;;;5356:35:10::1;::::0;;5371:20:::1;5401:9;:13:::0;;;5424:128:::1;5453:12;;5445:5;:20;5424:128;;;5540:1;5509:27:::0;;;:20:::1;:27;::::0;;;;;;;;-1:-1:-1;;;;;5509:27:10::1;5490:47:::0;;:18:::1;:47:::0;;;;;:51;5530:5;5467:7:::1;5530:5:::0;5467:7:::1;:::i;:::-;;;;5424:128;;;-1:-1:-1::0;5576:1:10::1;5561:12;:16:::0;5587:10:::1;:24:::0;;;5642:12:::1;::::0;5626:46:::1;::::0;;-1:-1:-1;;;;;5642:12:10;;::::1;5332:51:12::0;;5656:15:10::1;5414:2:12::0;5399:18;;5392:34;5626:46:10::1;::::0;5305:18:12;5626:46:10::1;;;;;;;4607:1072;4472:1207:::0;;;:::o;5685:194::-;5763:5;;-1:-1:-1;;;;;5763:5:10;:17;5789:4;5796:6;5804:21;:12;5818:6;5804:21;:::i;:::-;5763:63;;-1:-1:-1;;;;;;5763:63:10;;;;;;;-1:-1:-1;;;;;4484:15:12;;;5763:63:10;;;4466:34:12;4536:15;;;;4516:18;;;4509:43;4568:18;;;4561:34;4401:18;;5763:63:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5836:5:10;;:36;;-1:-1:-1;;;5836:36:10;;-1:-1:-1;;;;;5350:32:12;;;5836:36:10;;;5332:51:12;5399:18;;;5392:34;;;5836:5:10;;;;-1:-1:-1;5836:14:10;;-1:-1:-1;5305:18:12;;5836:36:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;404:180:12:-;463:6;516:2;504:9;495:7;491:23;487:32;484:52;;;532:1;529;522:12;484:52;-1:-1:-1;555:23:12;;404:180;-1:-1:-1;404:180:12:o;589:127::-;650:10;645:3;641:20;638:1;631:31;681:4;678:1;671:15;705:4;702:1;695:15;721:344;869:2;854:18;;902:1;891:13;;881:144;;947:10;942:3;938:20;935:1;928:31;982:4;979:1;972:15;1010:4;1007:1;1000:15;881:144;1034:25;;;721:344;:::o;1252:248::-;1320:6;1328;1381:2;1369:9;1360:7;1356:23;1352:32;1349:52;;;1397:1;1394;1387:12;1349:52;-1:-1:-1;;1420:23:12;;;1490:2;1475:18;;;1462:32;;-1:-1:-1;1252:248:12:o;1505:286::-;1564:6;1617:2;1605:9;1596:7;1592:23;1588:32;1585:52;;;1633:1;1630;1623:12;1585:52;1659:23;;-1:-1:-1;;;;;1711:31:12;;1701:42;;1691:70;;1757:1;1754;1747:12;1691:70;1780:5;1505:286;-1:-1:-1;;;1505:286:12:o;3081:127::-;3142:10;3137:3;3133:20;3130:1;3123:31;3173:4;3170:1;3163:15;3197:4;3194:1;3187:15;3213:128;3253:3;3284:1;3280:6;3277:1;3274:13;3271:39;;;3290:18;;:::i;:::-;-1:-1:-1;3326:9:12;;3213:128::o;3346:353::-;3548:2;3530:21;;;3587:2;3567:18;;;3560:30;3626:31;3621:2;3606:18;;3599:59;3690:2;3675:18;;3346:353::o;4053:168::-;4093:7;4159:1;4155;4151:6;4147:14;4144:1;4141:21;4136:1;4129:9;4122:17;4118:45;4115:71;;;4166:18;;:::i;:::-;-1:-1:-1;4206:9:12;;4053:168::o;4606:277::-;4673:6;4726:2;4714:9;4705:7;4701:23;4697:32;4694:52;;;4742:1;4739;4732:12;4694:52;4774:9;4768:16;4827:5;4820:13;4813:21;4806:5;4803:32;4793:60;;4849:1;4846;4839:12;4888:135;4927:3;4948:17;;;4945:43;;4968:18;;:::i;:::-;-1:-1:-1;5015:1:12;5004:13;;4888:135::o;5028:125::-;5068:4;5096:1;5093;5090:8;5087:34;;;5101:18;;:::i;:::-;-1:-1:-1;5138:9:12;;5028:125::o;5437:356::-;5639:2;5621:21;;;5658:18;;;5651:30;5717:34;5712:2;5697:18;;5690:62;5784:2;5769:18;;5437:356::o;6818:766::-;7050:1;7046;7041:3;7037:11;7033:19;7025:6;7021:32;7010:9;7003:51;6984:4;7073:2;7111:6;7106:2;7095:9;7091:18;7084:34;7154:2;7149;7138:9;7134:18;7127:30;7186:6;7180:13;7229:6;7224:2;7213:9;7209:18;7202:34;7254:1;7264:141;7278:6;7275:1;7272:13;7264:141;;;7374:14;;;7370:23;;7364:30;7339:17;;;7358:3;7335:27;7328:67;7293:10;;7264:141;;;7423:6;7420:1;7417:13;7414:92;;;7494:1;7488:3;7479:6;7468:9;7464:22;7460:32;7453:43;7414:92;-1:-1:-1;7567:2:12;7546:15;-1:-1:-1;;7542:29:12;7527:45;;;;7574:3;7523:55;;6818:766;-1:-1:-1;;;;;6818:766:12:o;8003:209::-;8035:1;8061;8051:132;;8105:10;8100:3;8096:20;8093:1;8086:31;8140:4;8137:1;8130:15;8168:4;8165:1;8158:15;8051:132;-1:-1:-1;8197:9:12;;8003:209::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    275,
    6270
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x123 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x835A1FAE GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDDCA3F43 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xFCAC59C3 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0xFE0837D1 EQ PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x835A1FAE EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x94985DDD EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0xB594F086 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xD84C72C5 EQ PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FD43098 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x3FD43098 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x62DA8313 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x6939864B EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x69EBE78E EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6EF53E0 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x1593A8C7 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x160344E2 EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x2D97902F EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x36013189 EQ PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x12A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x14F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x181 PUSH2 0x397 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x181 PUSH2 0x4B6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x163 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0xF7B JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x21C SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0xFAA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x181 PUSH2 0x8C5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x181 PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0xFD2 JUMP JUMPDEST PUSH2 0x939 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x181 PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0xF7B JUMP JUMPDEST PUSH2 0x9BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x181 PUSH2 0x30F CALLDATASIZE PUSH1 0x4 PUSH2 0xFF4 JUMP JUMPDEST PUSH2 0xA76 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x14F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH2 0x34F CALLDATASIZE PUSH1 0x4 PUSH2 0xFF4 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x37C CALLDATASIZE PUSH1 0x4 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3B6 JUMPI PUSH2 0x3B6 PUSH2 0xF94 JUMP JUMPDEST EQ PUSH2 0x401 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x131BDD1D195C9E481B5D5CDD081899481BDC195B9959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD TIMESTAMP LT ISZERO PUSH2 0x453 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206C6F7474657279206973206E6F742066696E69736865642079657400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA1 SHL OR SWAP1 SSTORE PUSH1 0x7 SLOAD PUSH1 0x4 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x478 SWAP2 PUSH2 0xB61 JUMP JUMPDEST SWAP1 POP PUSH32 0xE5F5B44D72D4143C278EB745C4ACC0695C4A5BC616BE5BEECF46ABE29661780E DUP2 PUSH1 0x40 MLOAD PUSH2 0x4AB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x4D6 JUMPI PUSH2 0x4D6 PUSH2 0xF94 JUMP JUMPDEST EQ PUSH2 0x51C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x131BDD1D195C9E481B5D5CDD0818994818DB1BDCD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH2 0x53C SWAP1 TIMESTAMP PUSH2 0x103A JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE PUSH32 0x3D01C4BA0165A3F9C01CA4916EFD5EFD92DD9AC07569FF74D7047C7CDE668349 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x593 JUMPI PUSH2 0x593 PUSH2 0xF94 JUMP JUMPDEST EQ PUSH2 0x5D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x131BDD1D195C9E481B5D5CDD081899481BDC195B9959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F8 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x0 SUB PUSH2 0x5FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F8 SWAP1 PUSH2 0x1052 JUMP JUMPDEST CALLER PUSH2 0x63E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x696E76616C696420757365722061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xC9FCEC9 SWAP1 CALLER SWAP1 ADDRESS SWAP1 PUSH2 0x676 SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x1089 JUMP JUMPDEST PUSH2 0x688 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6EB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0xB SLOAD PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0x23B872DD SWAP2 POP CALLER SWAP1 ADDRESS SWAP1 PUSH2 0x727 SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x1089 JUMP JUMPDEST PUSH2 0x739 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x78D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7B1 SWAP2 SWAP1 PUSH2 0x10A8 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x7D1 SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x1089 JUMP JUMPDEST PUSH2 0x7E3 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1089 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7F4 SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x8C0 JUMPI PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP4 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x841 DUP4 PUSH2 0x10CA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x856 DUP4 PUSH2 0x10CA JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0x9D5CF8D6FC62210BAB9630B8D613C1B63D9CFE0E0D2D70DDA538D69C7E4F37BA CALLER PUSH1 0x1 PUSH1 0x3 SLOAD PUSH2 0x88C SWAP2 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH2 0x8B8 DUP2 PUSH2 0x10CA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7FD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F8 SWAP1 PUSH2 0x10FA JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x9B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F8 JUMP JUMPDEST PUSH2 0x9BB DUP3 DUP3 PUSH2 0xCDB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F8 SWAP1 PUSH2 0x10FA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA09 JUMPI PUSH2 0xA09 PUSH2 0xF94 JUMP JUMPDEST EQ PUSH2 0xA4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x131BDD1D195C9E481B5D5CDD0818994818DB1BDCD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F8 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x0 SUB PUSH2 0xA70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F8 SWAP1 PUSH2 0x1052 JUMP JUMPDEST POP PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F8 SWAP1 PUSH2 0x10FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4000AEA0 PUSH32 0x0 DUP5 DUP7 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBD1 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBFE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x112F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC1D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC41 SWAP2 SWAP1 PUSH2 0x10A8 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD DUP1 DUP5 ADD DUP9 SWAP1 MSTORE DUP1 DUP4 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 DUP7 DUP5 MSTORE SWAP3 SWAP1 SWAP2 MSTORE PUSH2 0xC9B SWAP1 PUSH1 0x1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP1 MLOAD DUP1 DUP4 ADD DUP8 SWAP1 MSTORE DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP3 SUB DUP4 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH1 0x0 SUB PUSH2 0xCFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F8 SWAP1 PUSH2 0x1052 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD1C JUMPI PUSH2 0xD1C PUSH2 0xF94 JUMP JUMPDEST EQ PUSH2 0xD7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520636F6E7472616374206973206E6F742070726F63657373696E672074 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1A19481DDA5B9B995C881E595D PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD DUP4 PUSH2 0xD8F SWAP2 SWAP1 PUSH2 0x119B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH1 0xC SLOAD SWAP2 SWAP3 POP PUSH2 0xDCC SWAP2 SWAP1 PUSH2 0xE78 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0xE22 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SSTORE DUP1 PUSH2 0xE1A DUP2 PUSH2 0x10CA JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDE1 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x3 SSTORE PUSH1 0x2 DUP4 SWAP1 SSTORE PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE TIMESTAMP PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x64FFCA72C341AAB4874123AFB736AFBD6FAD01E6EAF584CFE0F320A144D3A576 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC9FCEC9 ADDRESS DUP4 PUSH2 0xE9D DUP7 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF00 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP3 POP PUSH4 0xA9059CBB SWAP2 POP PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF57 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8C0 SWAP2 SWAP1 PUSH2 0x10A8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0xFCC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1006 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x101D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x104D JUMPI PUSH2 0x104D PUSH2 0x1024 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x5468697320706172616D657465722063616E6E6F74206265207A65726F000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x10A3 JUMPI PUSH2 0x10A3 PUSH2 0x1024 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x101D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x10DC JUMPI PUSH2 0x10DC PUSH2 0x1024 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x10F5 JUMPI PUSH2 0x10F5 PUSH2 0x1024 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP5 DUP2 DUP5 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP5 ADD MSTORE DUP4 MLOAD DUP1 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1171 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x80 ADD MSTORE DUP3 ADD PUSH2 0x1155 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1183 JUMPI PUSH1 0x0 PUSH1 0x80 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x80 ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11B8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xAB CREATE2 0x2C LOG3 PUSH14 0x1D547BFC0B317DB172CA98A1604E CALLDATASIZE OR EQ KECCAK256 STOP RETURNDATASIZE 0xB1 PUSH4 0x14456530 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        275,
        6270
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "8": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "LT",
      "path": "10"
    },
    "9": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x123"
    },
    "12": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "13": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "16": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "SHR",
      "path": "10"
    },
    "19": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "DUP1",
      "path": "10"
    },
    "20": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x835A1FAE"
    },
    "25": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "GT",
      "path": "10"
    },
    "26": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA0"
    },
    "29": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "30": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "DUP1",
      "path": "10"
    },
    "31": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xDDCA3F43"
    },
    "36": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "GT",
      "path": "10"
    },
    "37": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x64"
    },
    "40": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "41": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "DUP1",
      "path": "10"
    },
    "42": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xDDCA3F43"
    },
    "47": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "EQ",
      "path": "10"
    },
    "48": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2DE"
    },
    "51": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "52": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "DUP1",
      "path": "10"
    },
    "53": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xF2FDE38B"
    },
    "58": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "EQ",
      "path": "10"
    },
    "59": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2F4"
    },
    "62": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "63": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "DUP1",
      "path": "10"
    },
    "64": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFC0C546A"
    },
    "69": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "EQ",
      "path": "10"
    },
    "70": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x314"
    },
    "73": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "74": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "DUP1",
      "path": "10"
    },
    "75": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFCAC59C3"
    },
    "80": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "EQ",
      "path": "10"
    },
    "81": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x334"
    },
    "84": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "85": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "DUP1",
      "path": "10"
    },
    "86": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFE0837D1"
    },
    "91": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "EQ",
      "path": "10"
    },
    "92": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x361"
    },
    "95": {
      "fn": null,
      "offset": [
        275,
        6270
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "96": {
      "fn": "Lottery.<fallback>",
      "offset": [
        2483,
        2491
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 0,
      "value": "0x0"
    },
    "98": {
      "fn": "Lottery.<fallback>",
      "offset": [
        2483,
        2491
      ],
      "op": "DUP1",
      "path": "10"
    },
    "99": {
      "fn": "Lottery.<fallback>",
      "offset": [
        2483,
        2491
      ],
      "op": "REVERT",
      "path": "10"
    },
    "100": {
      "offset": [
        275,
        6270
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "101": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "DUP1",
      "path": "10"
    },
    "102": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x835A1FAE"
    },
    "107": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "EQ",
      "path": "10"
    },
    "108": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x254"
    },
    "111": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "112": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "DUP1",
      "path": "10"
    },
    "113": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x8DA5CB5B"
    },
    "118": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "EQ",
      "path": "10"
    },
    "119": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26A"
    },
    "122": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "123": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "DUP1",
      "path": "10"
    },
    "124": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x94985DDD"
    },
    "129": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "EQ",
      "path": "10"
    },
    "130": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x288"
    },
    "133": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "134": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "DUP1",
      "path": "10"
    },
    "135": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xB594F086"
    },
    "140": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "EQ",
      "path": "10"
    },
    "141": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A8"
    },
    "144": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "145": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "DUP1",
      "path": "10"
    },
    "146": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xD84C72C5"
    },
    "151": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "EQ",
      "path": "10"
    },
    "152": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2C8"
    },
    "155": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "156": {
      "fn": "Lottery.<fallback>",
      "offset": [
        2483,
        2491
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "158": {
      "fn": "Lottery.<fallback>",
      "offset": [
        2483,
        2491
      ],
      "op": "DUP1",
      "path": "10"
    },
    "159": {
      "fn": "Lottery.<fallback>",
      "offset": [
        2483,
        2491
      ],
      "op": "REVERT",
      "path": "10"
    },
    "160": {
      "offset": [
        275,
        6270
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "161": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "DUP1",
      "path": "10"
    },
    "162": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x3FD43098"
    },
    "167": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "GT",
      "path": "10"
    },
    "168": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE7"
    },
    "171": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "172": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "DUP1",
      "path": "10"
    },
    "173": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x3FD43098"
    },
    "178": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "EQ",
      "path": "10"
    },
    "179": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1D2"
    },
    "182": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "183": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "DUP1",
      "path": "10"
    },
    "184": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x62DA8313"
    },
    "189": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "EQ",
      "path": "10"
    },
    "190": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1E5"
    },
    "193": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "194": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "DUP1",
      "path": "10"
    },
    "195": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x6939864B"
    },
    "200": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "EQ",
      "path": "10"
    },
    "201": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1FB"
    },
    "204": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "205": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "DUP1",
      "path": "10"
    },
    "206": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x69EBE78E"
    },
    "211": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "EQ",
      "path": "10"
    },
    "212": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x229"
    },
    "215": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "216": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "DUP1",
      "path": "10"
    },
    "217": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x715018A6"
    },
    "222": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "EQ",
      "path": "10"
    },
    "223": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x23F"
    },
    "226": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "227": {
      "fn": "Lottery.<fallback>",
      "offset": [
        2483,
        2491
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "229": {
      "fn": "Lottery.<fallback>",
      "offset": [
        2483,
        2491
      ],
      "op": "DUP1",
      "path": "10"
    },
    "230": {
      "fn": "Lottery.<fallback>",
      "offset": [
        2483,
        2491
      ],
      "op": "REVERT",
      "path": "10"
    },
    "231": {
      "offset": [
        275,
        6270
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "232": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "DUP1",
      "path": "10"
    },
    "233": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x6EF53E0"
    },
    "238": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "EQ",
      "path": "10"
    },
    "239": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12F"
    },
    "242": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "243": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "DUP1",
      "path": "10"
    },
    "244": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x1593A8C7"
    },
    "249": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "EQ",
      "path": "10"
    },
    "250": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16C"
    },
    "253": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "254": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "DUP1",
      "path": "10"
    },
    "255": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x160344E2"
    },
    "260": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "EQ",
      "path": "10"
    },
    "261": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x183"
    },
    "264": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "265": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "DUP1",
      "path": "10"
    },
    "266": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x2D97902F"
    },
    "271": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "EQ",
      "path": "10"
    },
    "272": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x198"
    },
    "275": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "276": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "DUP1",
      "path": "10"
    },
    "277": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x36013189"
    },
    "282": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "EQ",
      "path": "10"
    },
    "283": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1BC"
    },
    "286": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "287": {
      "fn": "Lottery.<fallback>",
      "offset": [
        2483,
        2491
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "289": {
      "fn": "Lottery.<fallback>",
      "offset": [
        2483,
        2491
      ],
      "op": "DUP1",
      "path": "10"
    },
    "290": {
      "fn": "Lottery.<fallback>",
      "offset": [
        2483,
        2491
      ],
      "op": "REVERT",
      "path": "10"
    },
    "291": {
      "offset": [
        275,
        6270
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "292": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "293": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12A"
    },
    "296": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "297": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "STOP",
      "path": "10"
    },
    "298": {
      "fn": "Lottery.<fallback>",
      "offset": [
        275,
        6270
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "299": {
      "fn": "Lottery.<fallback>",
      "offset": [
        2483,
        2491
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "301": {
      "fn": "Lottery.<fallback>",
      "offset": [
        2483,
        2491
      ],
      "op": "DUP1",
      "path": "10"
    },
    "302": {
      "fn": "Lottery.<fallback>",
      "offset": [
        2483,
        2491
      ],
      "op": "REVERT",
      "path": "10"
    },
    "303": {
      "offset": [
        739,
        766
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "304": {
      "fn": "Lottery.<fallback>",
      "offset": [
        739,
        766
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "305": {
      "fn": "Lottery.<fallback>",
      "offset": [
        739,
        766
      ],
      "op": "DUP1",
      "path": "10"
    },
    "306": {
      "fn": "Lottery.<fallback>",
      "offset": [
        739,
        766
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "307": {
      "fn": "Lottery.<fallback>",
      "offset": [
        739,
        766
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x13B"
    },
    "310": {
      "fn": "Lottery.<fallback>",
      "offset": [
        739,
        766
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "311": {
      "fn": "Lottery.<fallback>",
      "offset": [
        739,
        766
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "313": {
      "fn": "Lottery.<fallback>",
      "offset": [
        739,
        766
      ],
      "op": "DUP1",
      "path": "10"
    },
    "314": {
      "fn": "Lottery.<fallback>",
      "offset": [
        739,
        766
      ],
      "op": "REVERT",
      "path": "10"
    },
    "315": {
      "fn": "Lottery.<fallback>",
      "offset": [
        739,
        766
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "316": {
      "op": "POP"
    },
    "317": {
      "offset": [
        739,
        766
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x8"
    },
    "319": {
      "fn": "Lottery.<fallback>",
      "offset": [
        739,
        766
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "320": {
      "fn": "Lottery.<fallback>",
      "offset": [
        739,
        766
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14F"
    },
    "323": {
      "fn": "Lottery.<fallback>",
      "offset": [
        739,
        766
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "328": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "330": {
      "op": "SHL"
    },
    "331": {
      "op": "SUB"
    },
    "332": {
      "offset": [
        739,
        766
      ],
      "op": "AND",
      "path": "10"
    },
    "333": {
      "fn": "Lottery.<fallback>",
      "offset": [
        739,
        766
      ],
      "op": "DUP2",
      "path": "10"
    },
    "334": {
      "fn": "Lottery.<fallback>",
      "offset": [
        739,
        766
      ],
      "op": "JUMP",
      "path": "10"
    },
    "335": {
      "fn": "Lottery.<fallback>",
      "offset": [
        739,
        766
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "336": {
      "fn": "Lottery.<fallback>",
      "offset": [
        739,
        766
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "338": {
      "fn": "Lottery.<fallback>",
      "offset": [
        739,
        766
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "343": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "345": {
      "op": "SHL"
    },
    "346": {
      "op": "SUB"
    },
    "347": {
      "op": "SWAP1"
    },
    "348": {
      "op": "SWAP2"
    },
    "349": {
      "op": "AND"
    },
    "350": {
      "op": "DUP2"
    },
    "351": {
      "op": "MSTORE"
    },
    "352": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "354": {
      "op": "ADD"
    },
    "355": {
      "offset": [
        739,
        766
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "356": {
      "fn": "Lottery.<fallback>",
      "offset": [
        739,
        766
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "358": {
      "fn": "Lottery.<fallback>",
      "offset": [
        739,
        766
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "359": {
      "fn": "Lottery.<fallback>",
      "offset": [
        739,
        766
      ],
      "op": "DUP1",
      "path": "10"
    },
    "360": {
      "fn": "Lottery.<fallback>",
      "offset": [
        739,
        766
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "361": {
      "fn": "Lottery.<fallback>",
      "offset": [
        739,
        766
      ],
      "op": "SUB",
      "path": "10"
    },
    "362": {
      "fn": "Lottery.<fallback>",
      "offset": [
        739,
        766
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "363": {
      "fn": "Lottery.<fallback>",
      "offset": [
        739,
        766
      ],
      "op": "RETURN",
      "path": "10"
    },
    "364": {
      "fn": "Lottery.endLottery",
      "offset": [
        4133,
        4466
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "365": {
      "fn": "Lottery.endLottery",
      "offset": [
        4133,
        4466
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "366": {
      "fn": "Lottery.endLottery",
      "offset": [
        4133,
        4466
      ],
      "op": "DUP1",
      "path": "10"
    },
    "367": {
      "fn": "Lottery.endLottery",
      "offset": [
        4133,
        4466
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "368": {
      "fn": "Lottery.endLottery",
      "offset": [
        4133,
        4466
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x178"
    },
    "371": {
      "fn": "Lottery.endLottery",
      "offset": [
        4133,
        4466
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "372": {
      "fn": "Lottery.endLottery",
      "offset": [
        4133,
        4466
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "374": {
      "fn": "Lottery.endLottery",
      "offset": [
        4133,
        4466
      ],
      "op": "DUP1",
      "path": "10"
    },
    "375": {
      "fn": "Lottery.endLottery",
      "offset": [
        4133,
        4466
      ],
      "op": "REVERT",
      "path": "10"
    },
    "376": {
      "fn": "Lottery.endLottery",
      "offset": [
        4133,
        4466
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "377": {
      "fn": "Lottery.endLottery",
      "offset": [
        4133,
        4466
      ],
      "op": "POP",
      "path": "10"
    },
    "378": {
      "fn": "Lottery.endLottery",
      "offset": [
        4133,
        4466
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x181"
    },
    "381": {
      "fn": "Lottery.endLottery",
      "offset": [
        4133,
        4466
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x397"
    },
    "384": {
      "fn": "Lottery.endLottery",
      "jump": "i",
      "offset": [
        4133,
        4466
      ],
      "op": "JUMP",
      "path": "10"
    },
    "385": {
      "fn": "Lottery.endLottery",
      "offset": [
        4133,
        4466
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "386": {
      "fn": "Lottery.endLottery",
      "offset": [
        4133,
        4466
      ],
      "op": "STOP",
      "path": "10"
    },
    "387": {
      "fn": "Lottery.startLottery",
      "offset": [
        3917,
        4127
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "388": {
      "fn": "Lottery.startLottery",
      "offset": [
        3917,
        4127
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "389": {
      "fn": "Lottery.startLottery",
      "offset": [
        3917,
        4127
      ],
      "op": "DUP1",
      "path": "10"
    },
    "390": {
      "fn": "Lottery.startLottery",
      "offset": [
        3917,
        4127
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "391": {
      "fn": "Lottery.startLottery",
      "offset": [
        3917,
        4127
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x18F"
    },
    "394": {
      "fn": "Lottery.startLottery",
      "offset": [
        3917,
        4127
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "395": {
      "fn": "Lottery.startLottery",
      "offset": [
        3917,
        4127
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "397": {
      "fn": "Lottery.startLottery",
      "offset": [
        3917,
        4127
      ],
      "op": "DUP1",
      "path": "10"
    },
    "398": {
      "fn": "Lottery.startLottery",
      "offset": [
        3917,
        4127
      ],
      "op": "REVERT",
      "path": "10"
    },
    "399": {
      "fn": "Lottery.startLottery",
      "offset": [
        3917,
        4127
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "400": {
      "fn": "Lottery.startLottery",
      "offset": [
        3917,
        4127
      ],
      "op": "POP",
      "path": "10"
    },
    "401": {
      "fn": "Lottery.startLottery",
      "offset": [
        3917,
        4127
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x181"
    },
    "404": {
      "fn": "Lottery.startLottery",
      "offset": [
        3917,
        4127
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4B6"
    },
    "407": {
      "fn": "Lottery.startLottery",
      "jump": "i",
      "offset": [
        3917,
        4127
      ],
      "op": "JUMP",
      "path": "10"
    },
    "408": {
      "offset": [
        626,
        656
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "409": {
      "fn": "Lottery.startLottery",
      "offset": [
        626,
        656
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "410": {
      "fn": "Lottery.startLottery",
      "offset": [
        626,
        656
      ],
      "op": "DUP1",
      "path": "10"
    },
    "411": {
      "fn": "Lottery.startLottery",
      "offset": [
        626,
        656
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "412": {
      "fn": "Lottery.startLottery",
      "offset": [
        626,
        656
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1A4"
    },
    "415": {
      "fn": "Lottery.startLottery",
      "offset": [
        626,
        656
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "416": {
      "fn": "Lottery.startLottery",
      "offset": [
        626,
        656
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "418": {
      "fn": "Lottery.startLottery",
      "offset": [
        626,
        656
      ],
      "op": "DUP1",
      "path": "10"
    },
    "419": {
      "fn": "Lottery.startLottery",
      "offset": [
        626,
        656
      ],
      "op": "REVERT",
      "path": "10"
    },
    "420": {
      "fn": "Lottery.startLottery",
      "offset": [
        626,
        656
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "421": {
      "fn": "Lottery.startLottery",
      "offset": [
        626,
        656
      ],
      "op": "POP",
      "path": "10"
    },
    "422": {
      "fn": "Lottery.startLottery",
      "offset": [
        626,
        656
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1AE"
    },
    "425": {
      "fn": "Lottery.startLottery",
      "offset": [
        626,
        656
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "427": {
      "fn": "Lottery.startLottery",
      "offset": [
        626,
        656
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "428": {
      "fn": "Lottery.startLottery",
      "offset": [
        626,
        656
      ],
      "op": "DUP2",
      "path": "10"
    },
    "429": {
      "fn": "Lottery.startLottery",
      "offset": [
        626,
        656
      ],
      "op": "JUMP",
      "path": "10"
    },
    "430": {
      "fn": "Lottery.startLottery",
      "offset": [
        626,
        656
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "431": {
      "fn": "Lottery.startLottery",
      "offset": [
        626,
        656
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "433": {
      "fn": "Lottery.startLottery",
      "offset": [
        626,
        656
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "434": {
      "op": "SWAP1"
    },
    "435": {
      "op": "DUP2"
    },
    "436": {
      "op": "MSTORE"
    },
    "437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "439": {
      "op": "ADD"
    },
    "440": {
      "offset": [
        626,
        656
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x163"
    },
    "443": {
      "op": "JUMP"
    },
    "444": {
      "offset": [
        505,
        530
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "445": {
      "fn": "Lottery.startLottery",
      "offset": [
        505,
        530
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "446": {
      "fn": "Lottery.startLottery",
      "offset": [
        505,
        530
      ],
      "op": "DUP1",
      "path": "10"
    },
    "447": {
      "fn": "Lottery.startLottery",
      "offset": [
        505,
        530
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "448": {
      "fn": "Lottery.startLottery",
      "offset": [
        505,
        530
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1C8"
    },
    "451": {
      "fn": "Lottery.startLottery",
      "offset": [
        505,
        530
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "452": {
      "fn": "Lottery.startLottery",
      "offset": [
        505,
        530
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "454": {
      "fn": "Lottery.startLottery",
      "offset": [
        505,
        530
      ],
      "op": "DUP1",
      "path": "10"
    },
    "455": {
      "fn": "Lottery.startLottery",
      "offset": [
        505,
        530
      ],
      "op": "REVERT",
      "path": "10"
    },
    "456": {
      "fn": "Lottery.startLottery",
      "offset": [
        505,
        530
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "457": {
      "fn": "Lottery.startLottery",
      "offset": [
        505,
        530
      ],
      "op": "POP",
      "path": "10"
    },
    "458": {
      "fn": "Lottery.startLottery",
      "offset": [
        505,
        530
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1AE"
    },
    "461": {
      "fn": "Lottery.startLottery",
      "offset": [
        505,
        530
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "463": {
      "fn": "Lottery.startLottery",
      "offset": [
        505,
        530
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "464": {
      "fn": "Lottery.startLottery",
      "offset": [
        505,
        530
      ],
      "op": "DUP2",
      "path": "10"
    },
    "465": {
      "fn": "Lottery.startLottery",
      "offset": [
        505,
        530
      ],
      "op": "JUMP",
      "path": "10"
    },
    "466": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2828,
        3579
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "467": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2828,
        3579
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x181"
    },
    "470": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2828,
        3579
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1E0"
    },
    "473": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2828,
        3579
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "474": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2828,
        3579
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "476": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2828,
        3579
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF7B"
    },
    "479": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        2828,
        3579
      ],
      "op": "JUMP",
      "path": "10"
    },
    "480": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2828,
        3579
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "481": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2828,
        3579
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x574"
    },
    "484": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        2828,
        3579
      ],
      "op": "JUMP",
      "path": "10"
    },
    "485": {
      "offset": [
        536,
        563
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "486": {
      "fn": "Lottery.enterLottery",
      "offset": [
        536,
        563
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "487": {
      "fn": "Lottery.enterLottery",
      "offset": [
        536,
        563
      ],
      "op": "DUP1",
      "path": "10"
    },
    "488": {
      "fn": "Lottery.enterLottery",
      "offset": [
        536,
        563
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "489": {
      "fn": "Lottery.enterLottery",
      "offset": [
        536,
        563
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1F1"
    },
    "492": {
      "fn": "Lottery.enterLottery",
      "offset": [
        536,
        563
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "493": {
      "fn": "Lottery.enterLottery",
      "offset": [
        536,
        563
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "495": {
      "fn": "Lottery.enterLottery",
      "offset": [
        536,
        563
      ],
      "op": "DUP1",
      "path": "10"
    },
    "496": {
      "fn": "Lottery.enterLottery",
      "offset": [
        536,
        563
      ],
      "op": "REVERT",
      "path": "10"
    },
    "497": {
      "fn": "Lottery.enterLottery",
      "offset": [
        536,
        563
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "498": {
      "fn": "Lottery.enterLottery",
      "offset": [
        536,
        563
      ],
      "op": "POP",
      "path": "10"
    },
    "499": {
      "fn": "Lottery.enterLottery",
      "offset": [
        536,
        563
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1AE"
    },
    "502": {
      "fn": "Lottery.enterLottery",
      "offset": [
        536,
        563
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "504": {
      "fn": "Lottery.enterLottery",
      "offset": [
        536,
        563
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "505": {
      "fn": "Lottery.enterLottery",
      "offset": [
        536,
        563
      ],
      "op": "DUP2",
      "path": "10"
    },
    "506": {
      "fn": "Lottery.enterLottery",
      "offset": [
        536,
        563
      ],
      "op": "JUMP",
      "path": "10"
    },
    "507": {
      "offset": [
        437,
        470
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "508": {
      "fn": "Lottery.enterLottery",
      "offset": [
        437,
        470
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "509": {
      "fn": "Lottery.enterLottery",
      "offset": [
        437,
        470
      ],
      "op": "DUP1",
      "path": "10"
    },
    "510": {
      "fn": "Lottery.enterLottery",
      "offset": [
        437,
        470
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "511": {
      "fn": "Lottery.enterLottery",
      "offset": [
        437,
        470
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x207"
    },
    "514": {
      "fn": "Lottery.enterLottery",
      "offset": [
        437,
        470
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "515": {
      "fn": "Lottery.enterLottery",
      "offset": [
        437,
        470
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "517": {
      "fn": "Lottery.enterLottery",
      "offset": [
        437,
        470
      ],
      "op": "DUP1",
      "path": "10"
    },
    "518": {
      "fn": "Lottery.enterLottery",
      "offset": [
        437,
        470
      ],
      "op": "REVERT",
      "path": "10"
    },
    "519": {
      "fn": "Lottery.enterLottery",
      "offset": [
        437,
        470
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "520": {
      "op": "POP"
    },
    "521": {
      "offset": [
        437,
        470
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "523": {
      "fn": "Lottery.enterLottery",
      "offset": [
        437,
        470
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "524": {
      "fn": "Lottery.enterLottery",
      "offset": [
        437,
        470
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x21C"
    },
    "527": {
      "fn": "Lottery.enterLottery",
      "offset": [
        437,
        470
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "530": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "532": {
      "op": "SHL"
    },
    "533": {
      "offset": [
        437,
        470
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "534": {
      "fn": "Lottery.enterLottery",
      "offset": [
        437,
        470
      ],
      "op": "DIV",
      "path": "10"
    },
    "535": {
      "fn": "Lottery.enterLottery",
      "offset": [
        437,
        470
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "537": {
      "fn": "Lottery.enterLottery",
      "offset": [
        437,
        470
      ],
      "op": "AND",
      "path": "10"
    },
    "538": {
      "fn": "Lottery.enterLottery",
      "offset": [
        437,
        470
      ],
      "op": "DUP2",
      "path": "10"
    },
    "539": {
      "fn": "Lottery.enterLottery",
      "offset": [
        437,
        470
      ],
      "op": "JUMP",
      "path": "10"
    },
    "540": {
      "fn": "Lottery.enterLottery",
      "offset": [
        437,
        470
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "541": {
      "fn": "Lottery.enterLottery",
      "offset": [
        437,
        470
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "543": {
      "fn": "Lottery.enterLottery",
      "offset": [
        437,
        470
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "544": {
      "fn": "Lottery.enterLottery",
      "offset": [
        437,
        470
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x163"
    },
    "547": {
      "fn": "Lottery.enterLottery",
      "offset": [
        437,
        470
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "548": {
      "fn": "Lottery.enterLottery",
      "offset": [
        437,
        470
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "549": {
      "fn": "Lottery.enterLottery",
      "offset": [
        437,
        470
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFAA"
    },
    "552": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        437,
        470
      ],
      "op": "JUMP",
      "path": "10"
    },
    "553": {
      "offset": [
        711,
        733
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "554": {
      "fn": "Lottery.enterLottery",
      "offset": [
        711,
        733
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "555": {
      "fn": "Lottery.enterLottery",
      "offset": [
        711,
        733
      ],
      "op": "DUP1",
      "path": "10"
    },
    "556": {
      "fn": "Lottery.enterLottery",
      "offset": [
        711,
        733
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "557": {
      "fn": "Lottery.enterLottery",
      "offset": [
        711,
        733
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x235"
    },
    "560": {
      "fn": "Lottery.enterLottery",
      "offset": [
        711,
        733
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "561": {
      "fn": "Lottery.enterLottery",
      "offset": [
        711,
        733
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "563": {
      "fn": "Lottery.enterLottery",
      "offset": [
        711,
        733
      ],
      "op": "DUP1",
      "path": "10"
    },
    "564": {
      "fn": "Lottery.enterLottery",
      "offset": [
        711,
        733
      ],
      "op": "REVERT",
      "path": "10"
    },
    "565": {
      "fn": "Lottery.enterLottery",
      "offset": [
        711,
        733
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "566": {
      "fn": "Lottery.enterLottery",
      "offset": [
        711,
        733
      ],
      "op": "POP",
      "path": "10"
    },
    "567": {
      "fn": "Lottery.enterLottery",
      "offset": [
        711,
        733
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1AE"
    },
    "570": {
      "fn": "Lottery.enterLottery",
      "offset": [
        711,
        733
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "572": {
      "fn": "Lottery.enterLottery",
      "offset": [
        711,
        733
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "573": {
      "fn": "Lottery.enterLottery",
      "offset": [
        711,
        733
      ],
      "op": "DUP2",
      "path": "10"
    },
    "574": {
      "fn": "Lottery.enterLottery",
      "offset": [
        711,
        733
      ],
      "op": "JUMP",
      "path": "10"
    },
    "575": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "576": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "577": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "DUP1",
      "path": "0"
    },
    "578": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "579": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24B"
    },
    "582": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "583": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "585": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "DUP1",
      "path": "0"
    },
    "586": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "REVERT",
      "path": "0"
    },
    "587": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "588": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "POP",
      "path": "0"
    },
    "589": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x181"
    },
    "592": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C5"
    },
    "595": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1700,
        1845
      ],
      "op": "JUMP",
      "path": "0"
    },
    "596": {
      "offset": [
        964,
        988
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "597": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        964,
        988
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "598": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        964,
        988
      ],
      "op": "DUP1",
      "path": "10"
    },
    "599": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        964,
        988
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "600": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        964,
        988
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x260"
    },
    "603": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        964,
        988
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "604": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        964,
        988
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "606": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        964,
        988
      ],
      "op": "DUP1",
      "path": "10"
    },
    "607": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        964,
        988
      ],
      "op": "REVERT",
      "path": "10"
    },
    "608": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        964,
        988
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "609": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        964,
        988
      ],
      "op": "POP",
      "path": "10"
    },
    "610": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        964,
        988
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1AE"
    },
    "613": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        964,
        988
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xC"
    },
    "615": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        964,
        988
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "616": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        964,
        988
      ],
      "op": "DUP2",
      "path": "10"
    },
    "617": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        964,
        988
      ],
      "op": "JUMP",
      "path": "10"
    },
    "618": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "619": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "620": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "DUP1",
      "path": "0"
    },
    "621": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "622": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x276"
    },
    "625": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "626": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "628": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "DUP1",
      "path": "0"
    },
    "629": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "REVERT",
      "path": "0"
    },
    "630": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "631": {
      "op": "POP"
    },
    "632": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x1"
    },
    "634": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "639": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "641": {
      "op": "SHL"
    },
    "642": {
      "op": "SUB"
    },
    "643": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "644": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F"
    },
    "647": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "JUMP",
      "path": "0"
    },
    "648": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "649": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "650": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "DUP1",
      "path": "5"
    },
    "651": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "652": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x294"
    },
    "655": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "656": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "658": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "DUP1",
      "path": "5"
    },
    "659": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "REVERT",
      "path": "5"
    },
    "660": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "661": {
      "op": "POP"
    },
    "662": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x181"
    },
    "665": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2A3"
    },
    "668": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "669": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "671": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFD2"
    },
    "674": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMP",
      "path": "5"
    },
    "675": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "676": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x939"
    },
    "679": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMP",
      "path": "5"
    },
    "680": {
      "fn": "Lottery.changeDuration",
      "offset": [
        6087,
        6268
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "681": {
      "fn": "Lottery.changeDuration",
      "offset": [
        6087,
        6268
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "682": {
      "fn": "Lottery.changeDuration",
      "offset": [
        6087,
        6268
      ],
      "op": "DUP1",
      "path": "10"
    },
    "683": {
      "fn": "Lottery.changeDuration",
      "offset": [
        6087,
        6268
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "684": {
      "fn": "Lottery.changeDuration",
      "offset": [
        6087,
        6268
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2B4"
    },
    "687": {
      "fn": "Lottery.changeDuration",
      "offset": [
        6087,
        6268
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "688": {
      "fn": "Lottery.changeDuration",
      "offset": [
        6087,
        6268
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "690": {
      "fn": "Lottery.changeDuration",
      "offset": [
        6087,
        6268
      ],
      "op": "DUP1",
      "path": "10"
    },
    "691": {
      "fn": "Lottery.changeDuration",
      "offset": [
        6087,
        6268
      ],
      "op": "REVERT",
      "path": "10"
    },
    "692": {
      "fn": "Lottery.changeDuration",
      "offset": [
        6087,
        6268
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "693": {
      "op": "POP"
    },
    "694": {
      "fn": "Lottery.changeDuration",
      "offset": [
        6087,
        6268
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x181"
    },
    "697": {
      "fn": "Lottery.changeDuration",
      "offset": [
        6087,
        6268
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2C3"
    },
    "700": {
      "fn": "Lottery.changeDuration",
      "offset": [
        6087,
        6268
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "701": {
      "fn": "Lottery.changeDuration",
      "offset": [
        6087,
        6268
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "703": {
      "fn": "Lottery.changeDuration",
      "offset": [
        6087,
        6268
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF7B"
    },
    "706": {
      "fn": "Lottery.changeDuration",
      "jump": "i",
      "offset": [
        6087,
        6268
      ],
      "op": "JUMP",
      "path": "10"
    },
    "707": {
      "fn": "Lottery.changeDuration",
      "offset": [
        6087,
        6268
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "708": {
      "fn": "Lottery.changeDuration",
      "offset": [
        6087,
        6268
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x9BF"
    },
    "711": {
      "fn": "Lottery.changeDuration",
      "jump": "i",
      "offset": [
        6087,
        6268
      ],
      "op": "JUMP",
      "path": "10"
    },
    "712": {
      "offset": [
        662,
        701
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "713": {
      "fn": "Lottery.changeDuration",
      "offset": [
        662,
        701
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "714": {
      "fn": "Lottery.changeDuration",
      "offset": [
        662,
        701
      ],
      "op": "DUP1",
      "path": "10"
    },
    "715": {
      "fn": "Lottery.changeDuration",
      "offset": [
        662,
        701
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "716": {
      "fn": "Lottery.changeDuration",
      "offset": [
        662,
        701
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2D4"
    },
    "719": {
      "fn": "Lottery.changeDuration",
      "offset": [
        662,
        701
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "720": {
      "fn": "Lottery.changeDuration",
      "offset": [
        662,
        701
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "722": {
      "fn": "Lottery.changeDuration",
      "offset": [
        662,
        701
      ],
      "op": "DUP1",
      "path": "10"
    },
    "723": {
      "fn": "Lottery.changeDuration",
      "offset": [
        662,
        701
      ],
      "op": "REVERT",
      "path": "10"
    },
    "724": {
      "fn": "Lottery.changeDuration",
      "offset": [
        662,
        701
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "725": {
      "fn": "Lottery.changeDuration",
      "offset": [
        662,
        701
      ],
      "op": "POP",
      "path": "10"
    },
    "726": {
      "fn": "Lottery.changeDuration",
      "offset": [
        662,
        701
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1AE"
    },
    "729": {
      "fn": "Lottery.changeDuration",
      "offset": [
        662,
        701
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "731": {
      "fn": "Lottery.changeDuration",
      "offset": [
        662,
        701
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "732": {
      "fn": "Lottery.changeDuration",
      "offset": [
        662,
        701
      ],
      "op": "DUP2",
      "path": "10"
    },
    "733": {
      "fn": "Lottery.changeDuration",
      "offset": [
        662,
        701
      ],
      "op": "JUMP",
      "path": "10"
    },
    "734": {
      "offset": [
        601,
        619
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "735": {
      "fn": "Lottery.changeDuration",
      "offset": [
        601,
        619
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "736": {
      "fn": "Lottery.changeDuration",
      "offset": [
        601,
        619
      ],
      "op": "DUP1",
      "path": "10"
    },
    "737": {
      "fn": "Lottery.changeDuration",
      "offset": [
        601,
        619
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "738": {
      "fn": "Lottery.changeDuration",
      "offset": [
        601,
        619
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2EA"
    },
    "741": {
      "fn": "Lottery.changeDuration",
      "offset": [
        601,
        619
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "742": {
      "fn": "Lottery.changeDuration",
      "offset": [
        601,
        619
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "744": {
      "fn": "Lottery.changeDuration",
      "offset": [
        601,
        619
      ],
      "op": "DUP1",
      "path": "10"
    },
    "745": {
      "fn": "Lottery.changeDuration",
      "offset": [
        601,
        619
      ],
      "op": "REVERT",
      "path": "10"
    },
    "746": {
      "fn": "Lottery.changeDuration",
      "offset": [
        601,
        619
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "747": {
      "fn": "Lottery.changeDuration",
      "offset": [
        601,
        619
      ],
      "op": "POP",
      "path": "10"
    },
    "748": {
      "fn": "Lottery.changeDuration",
      "offset": [
        601,
        619
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1AE"
    },
    "751": {
      "fn": "Lottery.changeDuration",
      "offset": [
        601,
        619
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "753": {
      "fn": "Lottery.changeDuration",
      "offset": [
        601,
        619
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "754": {
      "fn": "Lottery.changeDuration",
      "offset": [
        601,
        619
      ],
      "op": "DUP2",
      "path": "10"
    },
    "755": {
      "fn": "Lottery.changeDuration",
      "offset": [
        601,
        619
      ],
      "op": "JUMP",
      "path": "10"
    },
    "756": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "757": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "758": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "DUP1",
      "path": "0"
    },
    "759": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "760": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x300"
    },
    "763": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "764": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "766": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "DUP1",
      "path": "0"
    },
    "767": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "REVERT",
      "path": "0"
    },
    "768": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "769": {
      "op": "POP"
    },
    "770": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x181"
    },
    "773": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x30F"
    },
    "776": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "777": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "779": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFF4"
    },
    "782": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMP",
      "path": "0"
    },
    "783": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "784": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA76"
    },
    "787": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMP",
      "path": "0"
    },
    "788": {
      "offset": [
        937,
        958
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "789": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        937,
        958
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "790": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        937,
        958
      ],
      "op": "DUP1",
      "path": "10"
    },
    "791": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        937,
        958
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "792": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        937,
        958
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x320"
    },
    "795": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        937,
        958
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "796": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        937,
        958
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "798": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        937,
        958
      ],
      "op": "DUP1",
      "path": "10"
    },
    "799": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        937,
        958
      ],
      "op": "REVERT",
      "path": "10"
    },
    "800": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        937,
        958
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "801": {
      "op": "POP"
    },
    "802": {
      "offset": [
        937,
        958
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xB"
    },
    "804": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        937,
        958
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "805": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        937,
        958
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14F"
    },
    "808": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        937,
        958
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "813": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "815": {
      "op": "SHL"
    },
    "816": {
      "op": "SUB"
    },
    "817": {
      "offset": [
        937,
        958
      ],
      "op": "AND",
      "path": "10"
    },
    "818": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        937,
        958
      ],
      "op": "DUP2",
      "path": "10"
    },
    "819": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        937,
        958
      ],
      "op": "JUMP",
      "path": "10"
    },
    "820": {
      "offset": [
        772,
        825
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "821": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        772,
        825
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "822": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        772,
        825
      ],
      "op": "DUP1",
      "path": "10"
    },
    "823": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        772,
        825
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "824": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        772,
        825
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x340"
    },
    "827": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        772,
        825
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "828": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        772,
        825
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "830": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        772,
        825
      ],
      "op": "DUP1",
      "path": "10"
    },
    "831": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        772,
        825
      ],
      "op": "REVERT",
      "path": "10"
    },
    "832": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        772,
        825
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "833": {
      "op": "POP"
    },
    "834": {
      "offset": [
        772,
        825
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1AE"
    },
    "837": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        772,
        825
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x34F"
    },
    "840": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        772,
        825
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "841": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        772,
        825
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "843": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        772,
        825
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFF4"
    },
    "846": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        772,
        825
      ],
      "op": "JUMP",
      "path": "10"
    },
    "847": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        772,
        825
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "848": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        772,
        825
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x9"
    },
    "850": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        772,
        825
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "852": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        772,
        825
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "853": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        772,
        825
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "855": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        772,
        825
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "856": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        772,
        825
      ],
      "op": "DUP2",
      "path": "10"
    },
    "857": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        772,
        825
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "858": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        772,
        825
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "860": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        772,
        825
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "861": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        772,
        825
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "862": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        772,
        825
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "863": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        772,
        825
      ],
      "op": "DUP2",
      "path": "10"
    },
    "864": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        772,
        825
      ],
      "op": "JUMP",
      "path": "10"
    },
    "865": {
      "offset": [
        831,
        884
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "866": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        831,
        884
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "867": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        831,
        884
      ],
      "op": "DUP1",
      "path": "10"
    },
    "868": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        831,
        884
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "869": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        831,
        884
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x36D"
    },
    "872": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        831,
        884
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "873": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        831,
        884
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "875": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        831,
        884
      ],
      "op": "DUP1",
      "path": "10"
    },
    "876": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        831,
        884
      ],
      "op": "REVERT",
      "path": "10"
    },
    "877": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        831,
        884
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "878": {
      "op": "POP"
    },
    "879": {
      "offset": [
        831,
        884
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14F"
    },
    "882": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        831,
        884
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x37C"
    },
    "885": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        831,
        884
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "886": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        831,
        884
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "888": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        831,
        884
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF7B"
    },
    "891": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        831,
        884
      ],
      "op": "JUMP",
      "path": "10"
    },
    "892": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        831,
        884
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "893": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        831,
        884
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "895": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        831,
        884
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "897": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        831,
        884
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "898": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        831,
        884
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "900": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        831,
        884
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "901": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        831,
        884
      ],
      "op": "DUP2",
      "path": "10"
    },
    "902": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        831,
        884
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "903": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        831,
        884
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "905": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        831,
        884
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "906": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        831,
        884
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "907": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        831,
        884
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "914": {
      "op": "SHL"
    },
    "915": {
      "op": "SUB"
    },
    "916": {
      "offset": [
        831,
        884
      ],
      "op": "AND",
      "path": "10"
    },
    "917": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        831,
        884
      ],
      "op": "DUP2",
      "path": "10"
    },
    "918": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        831,
        884
      ],
      "op": "JUMP",
      "path": "10"
    },
    "919": {
      "fn": "Lottery.endLottery",
      "offset": [
        4133,
        4466
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "920": {
      "offset": [
        2128,
        2148
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "922": {
      "offset": [
        2112,
        2124
      ],
      "op": "DUP1",
      "path": "10"
    },
    "923": {
      "fn": "Lottery.endLottery",
      "offset": [
        2112,
        2124
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "926": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "928": {
      "op": "SHL"
    },
    "929": {
      "offset": [
        2112,
        2124
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "930": {
      "fn": "Lottery.endLottery",
      "offset": [
        2112,
        2124
      ],
      "op": "DIV",
      "path": "10"
    },
    "931": {
      "fn": "Lottery.endLottery",
      "offset": [
        2112,
        2124
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "933": {
      "fn": "Lottery.endLottery",
      "offset": [
        2112,
        2124
      ],
      "op": "AND",
      "path": "10"
    },
    "934": {
      "offset": [
        2112,
        2148
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "936": {
      "fn": "Lottery.endLottery",
      "offset": [
        2112,
        2148
      ],
      "op": "DUP2",
      "path": "10"
    },
    "937": {
      "fn": "Lottery.endLottery",
      "offset": [
        2112,
        2148
      ],
      "op": "GT",
      "path": "10"
    },
    "938": {
      "fn": "Lottery.endLottery",
      "offset": [
        2112,
        2148
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "939": {
      "fn": "Lottery.endLottery",
      "offset": [
        2112,
        2148
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3B6"
    },
    "942": {
      "fn": "Lottery.endLottery",
      "offset": [
        2112,
        2148
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "943": {
      "fn": "Lottery.endLottery",
      "offset": [
        2112,
        2148
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3B6"
    },
    "946": {
      "fn": "Lottery.endLottery",
      "offset": [
        2112,
        2148
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF94"
    },
    "949": {
      "fn": "Lottery.endLottery",
      "jump": "i",
      "offset": [
        2112,
        2148
      ],
      "op": "JUMP",
      "path": "10"
    },
    "950": {
      "fn": "Lottery.endLottery",
      "offset": [
        2112,
        2148
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "951": {
      "fn": "Lottery.endLottery",
      "offset": [
        2112,
        2148
      ],
      "op": "EQ",
      "path": "10"
    },
    "952": {
      "offset": [
        2104,
        2175
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x401"
    },
    "955": {
      "offset": [
        2104,
        2175
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "956": {
      "fn": "Lottery.endLottery",
      "offset": [
        2104,
        2175
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "958": {
      "fn": "Lottery.endLottery",
      "offset": [
        2104,
        2175
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "959": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "963": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "965": {
      "op": "SHL"
    },
    "966": {
      "offset": [
        2104,
        2175
      ],
      "op": "DUP2",
      "path": "10"
    },
    "967": {
      "fn": "Lottery.endLottery",
      "offset": [
        2104,
        2175
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "968": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "970": {
      "offset": [
        2104,
        2175
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "972": {
      "fn": "Lottery.endLottery",
      "offset": [
        2104,
        2175
      ],
      "op": "DUP3",
      "path": "10"
    },
    "973": {
      "fn": "Lottery.endLottery",
      "offset": [
        2104,
        2175
      ],
      "op": "ADD",
      "path": "10"
    },
    "974": {
      "op": "MSTORE"
    },
    "975": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "977": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "979": {
      "op": "DUP3"
    },
    "980": {
      "op": "ADD"
    },
    "981": {
      "op": "MSTORE"
    },
    "982": {
      "op": "PUSH22",
      "value": "0x131BDD1D195C9E481B5D5CDD081899481BDC195B9959"
    },
    "1005": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "1007": {
      "op": "SHL"
    },
    "1008": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1010": {
      "op": "DUP3"
    },
    "1011": {
      "op": "ADD"
    },
    "1012": {
      "op": "MSTORE"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1015": {
      "op": "ADD"
    },
    "1016": {
      "offset": [
        2104,
        2175
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1017": {
      "fn": "Lottery.endLottery",
      "offset": [
        2104,
        2175
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1019": {
      "fn": "Lottery.endLottery",
      "offset": [
        2104,
        2175
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1020": {
      "fn": "Lottery.endLottery",
      "offset": [
        2104,
        2175
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1021": {
      "fn": "Lottery.endLottery",
      "offset": [
        2104,
        2175
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1022": {
      "fn": "Lottery.endLottery",
      "offset": [
        2104,
        2175
      ],
      "op": "SUB",
      "path": "10"
    },
    "1023": {
      "fn": "Lottery.endLottery",
      "offset": [
        2104,
        2175
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1024": {
      "fn": "Lottery.endLottery",
      "offset": [
        2104,
        2175
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "10"
    },
    "1025": {
      "fn": "Lottery.endLottery",
      "offset": [
        2104,
        2175
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1026": {
      "fn": "Lottery.endLottery",
      "offset": [
        4223,
        4247
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 2,
      "value": "0x6"
    },
    "1028": {
      "fn": "Lottery.endLottery",
      "offset": [
        4223,
        4247
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1029": {
      "fn": "Lottery.endLottery",
      "offset": [
        4204,
        4219
      ],
      "op": "TIMESTAMP",
      "path": "10"
    },
    "1030": {
      "fn": "Lottery.endLottery",
      "offset": [
        4204,
        4247
      ],
      "op": "LT",
      "path": "10"
    },
    "1031": {
      "branch": 43,
      "fn": "Lottery.endLottery",
      "offset": [
        4204,
        4247
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1032": {
      "fn": "Lottery.endLottery",
      "offset": [
        4183,
        4304
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x453"
    },
    "1035": {
      "branch": 43,
      "fn": "Lottery.endLottery",
      "offset": [
        4183,
        4304
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1036": {
      "fn": "Lottery.endLottery",
      "offset": [
        4183,
        4304
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1038": {
      "fn": "Lottery.endLottery",
      "offset": [
        4183,
        4304
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1039": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1045": {
      "op": "SHL"
    },
    "1046": {
      "fn": "Lottery.endLottery",
      "offset": [
        4183,
        4304
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1047": {
      "fn": "Lottery.endLottery",
      "offset": [
        4183,
        4304
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1050": {
      "fn": "Lottery.endLottery",
      "offset": [
        4183,
        4304
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1052": {
      "fn": "Lottery.endLottery",
      "offset": [
        4183,
        4304
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1053": {
      "fn": "Lottery.endLottery",
      "offset": [
        4183,
        4304
      ],
      "op": "ADD",
      "path": "10"
    },
    "1054": {
      "op": "MSTORE"
    },
    "1055": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1059": {
      "op": "DUP3"
    },
    "1060": {
      "op": "ADD"
    },
    "1061": {
      "op": "MSTORE"
    },
    "1062": {
      "op": "PUSH32",
      "value": "0x546865206C6F7474657279206973206E6F742066696E69736865642079657400"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1097": {
      "op": "DUP3"
    },
    "1098": {
      "op": "ADD"
    },
    "1099": {
      "op": "MSTORE"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1102": {
      "op": "ADD"
    },
    "1103": {
      "fn": "Lottery.endLottery",
      "offset": [
        4183,
        4304
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3F8"
    },
    "1106": {
      "op": "JUMP"
    },
    "1107": {
      "fn": "Lottery.endLottery",
      "offset": [
        4183,
        4304
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1108": {
      "fn": "Lottery.endLottery",
      "offset": [
        4314,
        4326
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 3,
      "value": "0x1"
    },
    "1110": {
      "fn": "Lottery.endLottery",
      "offset": [
        4314,
        4353
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1111": {
      "fn": "Lottery.endLottery",
      "offset": [
        4314,
        4353
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1112": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1114": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1116": {
      "op": "SHL"
    },
    "1117": {
      "op": "NOT"
    },
    "1118": {
      "fn": "Lottery.endLottery",
      "offset": [
        4314,
        4353
      ],
      "op": "AND",
      "path": "10"
    },
    "1119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1121": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "1123": {
      "op": "SHL"
    },
    "1124": {
      "fn": "Lottery.endLottery",
      "offset": [
        4314,
        4353
      ],
      "op": "OR",
      "path": "10"
    },
    "1125": {
      "fn": "Lottery.endLottery",
      "offset": [
        4314,
        4353
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1126": {
      "fn": "Lottery.endLottery",
      "offset": [
        4314,
        4353
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1127": {
      "fn": "Lottery.endLottery",
      "offset": [
        4401,
        4408
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "1129": {
      "fn": "Lottery.endLottery",
      "offset": [
        4401,
        4408
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1130": {
      "fn": "Lottery.endLottery",
      "offset": [
        4410,
        4413
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1132": {
      "fn": "Lottery.endLottery",
      "offset": [
        4410,
        4413
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1133": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1135": {
      "op": "SWAP2"
    },
    "1136": {
      "fn": "Lottery.endLottery",
      "offset": [
        4383,
        4414
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x478"
    },
    "1139": {
      "fn": "Lottery.endLottery",
      "offset": [
        4383,
        4414
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1140": {
      "fn": "Lottery.endLottery",
      "offset": [
        4383,
        4400
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB61"
    },
    "1143": {
      "fn": "Lottery.endLottery",
      "jump": "i",
      "offset": [
        4383,
        4414
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1144": {
      "fn": "Lottery.endLottery",
      "offset": [
        4383,
        4414
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1145": {
      "fn": "Lottery.endLottery",
      "offset": [
        4363,
        4414
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1146": {
      "fn": "Lottery.endLottery",
      "offset": [
        4363,
        4414
      ],
      "op": "POP",
      "path": "10"
    },
    "1147": {
      "fn": "Lottery.endLottery",
      "offset": [
        4429,
        4459
      ],
      "op": "PUSH32",
      "path": "10",
      "statement": 4,
      "value": "0xE5F5B44D72D4143C278EB745C4ACC0695C4A5BC616BE5BEECF46ABE29661780E"
    },
    "1180": {
      "fn": "Lottery.endLottery",
      "offset": [
        4449,
        4458
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1181": {
      "fn": "Lottery.endLottery",
      "offset": [
        4429,
        4459
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1183": {
      "fn": "Lottery.endLottery",
      "offset": [
        4429,
        4459
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1184": {
      "fn": "Lottery.endLottery",
      "offset": [
        4429,
        4459
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4AB"
    },
    "1187": {
      "fn": "Lottery.endLottery",
      "offset": [
        4429,
        4459
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1188": {
      "op": "DUP2"
    },
    "1189": {
      "op": "MSTORE"
    },
    "1190": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1192": {
      "op": "ADD"
    },
    "1193": {
      "op": "SWAP1"
    },
    "1194": {
      "op": "JUMP"
    },
    "1195": {
      "fn": "Lottery.endLottery",
      "offset": [
        4429,
        4459
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1196": {
      "fn": "Lottery.endLottery",
      "offset": [
        4429,
        4459
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1198": {
      "fn": "Lottery.endLottery",
      "offset": [
        4429,
        4459
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1199": {
      "fn": "Lottery.endLottery",
      "offset": [
        4429,
        4459
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1200": {
      "fn": "Lottery.endLottery",
      "offset": [
        4429,
        4459
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1201": {
      "fn": "Lottery.endLottery",
      "offset": [
        4429,
        4459
      ],
      "op": "SUB",
      "path": "10"
    },
    "1202": {
      "fn": "Lottery.endLottery",
      "offset": [
        4429,
        4459
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1203": {
      "fn": "Lottery.endLottery",
      "offset": [
        4429,
        4459
      ],
      "op": "LOG1",
      "path": "10"
    },
    "1204": {
      "fn": "Lottery.endLottery",
      "offset": [
        4173,
        4466
      ],
      "op": "POP",
      "path": "10"
    },
    "1205": {
      "fn": "Lottery.endLottery",
      "jump": "o",
      "offset": [
        4133,
        4466
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1206": {
      "fn": "Lottery.startLottery",
      "offset": [
        3917,
        4127
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1207": {
      "offset": [
        2253,
        2273
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1209": {
      "offset": [
        2237,
        2249
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1211": {
      "fn": "Lottery.startLottery",
      "offset": [
        2237,
        2249
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1216": {
      "op": "SHL"
    },
    "1217": {
      "offset": [
        2237,
        2249
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1218": {
      "fn": "Lottery.startLottery",
      "offset": [
        2237,
        2249
      ],
      "op": "DIV",
      "path": "10"
    },
    "1219": {
      "fn": "Lottery.startLottery",
      "offset": [
        2237,
        2249
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "1221": {
      "fn": "Lottery.startLottery",
      "offset": [
        2237,
        2249
      ],
      "op": "AND",
      "path": "10"
    },
    "1222": {
      "offset": [
        2237,
        2273
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "1224": {
      "fn": "Lottery.startLottery",
      "offset": [
        2237,
        2273
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1225": {
      "fn": "Lottery.startLottery",
      "offset": [
        2237,
        2273
      ],
      "op": "GT",
      "path": "10"
    },
    "1226": {
      "fn": "Lottery.startLottery",
      "offset": [
        2237,
        2273
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1227": {
      "fn": "Lottery.startLottery",
      "offset": [
        2237,
        2273
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4D6"
    },
    "1230": {
      "fn": "Lottery.startLottery",
      "offset": [
        2237,
        2273
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1231": {
      "fn": "Lottery.startLottery",
      "offset": [
        2237,
        2273
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4D6"
    },
    "1234": {
      "fn": "Lottery.startLottery",
      "offset": [
        2237,
        2273
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF94"
    },
    "1237": {
      "fn": "Lottery.startLottery",
      "jump": "i",
      "offset": [
        2237,
        2273
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1238": {
      "fn": "Lottery.startLottery",
      "offset": [
        2237,
        2273
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1239": {
      "fn": "Lottery.startLottery",
      "offset": [
        2237,
        2273
      ],
      "op": "EQ",
      "path": "10"
    },
    "1240": {
      "offset": [
        2229,
        2300
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x51C"
    },
    "1243": {
      "offset": [
        2229,
        2300
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1244": {
      "fn": "Lottery.startLottery",
      "offset": [
        2229,
        2300
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1246": {
      "fn": "Lottery.startLottery",
      "offset": [
        2229,
        2300
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1247": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1251": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1253": {
      "op": "SHL"
    },
    "1254": {
      "offset": [
        2229,
        2300
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1255": {
      "fn": "Lottery.startLottery",
      "offset": [
        2229,
        2300
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1258": {
      "offset": [
        2229,
        2300
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1260": {
      "fn": "Lottery.startLottery",
      "offset": [
        2229,
        2300
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1261": {
      "fn": "Lottery.startLottery",
      "offset": [
        2229,
        2300
      ],
      "op": "ADD",
      "path": "10"
    },
    "1262": {
      "op": "MSTORE"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "1265": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1267": {
      "op": "DUP3"
    },
    "1268": {
      "op": "ADD"
    },
    "1269": {
      "op": "MSTORE"
    },
    "1270": {
      "op": "PUSH22",
      "value": "0x131BDD1D195C9E481B5D5CDD0818994818DB1BDCD959"
    },
    "1293": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "1295": {
      "op": "SHL"
    },
    "1296": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1298": {
      "op": "DUP3"
    },
    "1299": {
      "op": "ADD"
    },
    "1300": {
      "op": "MSTORE"
    },
    "1301": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1303": {
      "op": "ADD"
    },
    "1304": {
      "offset": [
        2229,
        2300
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3F8"
    },
    "1307": {
      "op": "JUMP"
    },
    "1308": {
      "offset": [
        2229,
        2300
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1309": {
      "fn": "Lottery.startLottery",
      "offset": [
        3984,
        4004
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 5,
      "value": "0x1"
    },
    "1311": {
      "fn": "Lottery.startLottery",
      "offset": [
        3969,
        4004
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1312": {
      "fn": "Lottery.startLottery",
      "offset": [
        3969,
        4004
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1313": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1317": {
      "op": "SHL"
    },
    "1318": {
      "op": "NOT"
    },
    "1319": {
      "fn": "Lottery.startLottery",
      "offset": [
        3969,
        4004
      ],
      "op": "AND",
      "path": "10"
    },
    "1320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1322": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1324": {
      "op": "SHL"
    },
    "1325": {
      "fn": "Lottery.startLottery",
      "offset": [
        3969,
        4004
      ],
      "op": "OR",
      "path": "10"
    },
    "1326": {
      "fn": "Lottery.startLottery",
      "offset": [
        3969,
        4004
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1327": {
      "fn": "Lottery.startLottery",
      "offset": [
        3969,
        4004
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1328": {
      "fn": "Lottery.startLottery",
      "offset": [
        4059,
        4074
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 6,
      "value": "0x5"
    },
    "1330": {
      "fn": "Lottery.startLottery",
      "offset": [
        4059,
        4074
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1331": {
      "fn": "Lottery.startLottery",
      "offset": [
        4041,
        4074
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x53C"
    },
    "1334": {
      "fn": "Lottery.startLottery",
      "offset": [
        4041,
        4074
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1335": {
      "fn": "Lottery.startLottery",
      "offset": [
        4041,
        4056
      ],
      "op": "TIMESTAMP",
      "path": "10"
    },
    "1336": {
      "fn": "Lottery.startLottery",
      "offset": [
        4041,
        4074
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x103A"
    },
    "1339": {
      "fn": "Lottery.startLottery",
      "jump": "i",
      "offset": [
        4041,
        4074
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1340": {
      "fn": "Lottery.startLottery",
      "offset": [
        4041,
        4074
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1341": {
      "fn": "Lottery.startLottery",
      "offset": [
        4014,
        4038
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "1343": {
      "fn": "Lottery.startLottery",
      "offset": [
        4014,
        4074
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1344": {
      "fn": "Lottery.startLottery",
      "offset": [
        4089,
        4120
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 7,
      "value": "0x40"
    },
    "1346": {
      "fn": "Lottery.startLottery",
      "offset": [
        4089,
        4120
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1347": {
      "fn": "Lottery.startLottery",
      "offset": [
        4104,
        4119
      ],
      "op": "TIMESTAMP",
      "path": "10"
    },
    "1348": {
      "op": "DUP2"
    },
    "1349": {
      "op": "MSTORE"
    },
    "1350": {
      "fn": "Lottery.startLottery",
      "offset": [
        4089,
        4120
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x3D01C4BA0165A3F9C01CA4916EFD5EFD92DD9AC07569FF74D7047C7CDE668349"
    },
    "1383": {
      "fn": "Lottery.startLottery",
      "offset": [
        4089,
        4120
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1386": {
      "op": "ADD"
    },
    "1387": {
      "fn": "Lottery.startLottery",
      "offset": [
        4089,
        4120
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1389": {
      "fn": "Lottery.startLottery",
      "offset": [
        4089,
        4120
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1390": {
      "fn": "Lottery.startLottery",
      "offset": [
        4089,
        4120
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1391": {
      "fn": "Lottery.startLottery",
      "offset": [
        4089,
        4120
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1392": {
      "fn": "Lottery.startLottery",
      "offset": [
        4089,
        4120
      ],
      "op": "SUB",
      "path": "10"
    },
    "1393": {
      "fn": "Lottery.startLottery",
      "offset": [
        4089,
        4120
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1394": {
      "fn": "Lottery.startLottery",
      "offset": [
        4089,
        4120
      ],
      "op": "LOG1",
      "path": "10"
    },
    "1395": {
      "fn": "Lottery.startLottery",
      "jump": "o",
      "offset": [
        3917,
        4127
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1396": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2828,
        3579
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1397": {
      "offset": [
        2128,
        2148
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1399": {
      "offset": [
        2112,
        2124
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1400": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2112,
        2124
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1405": {
      "op": "SHL"
    },
    "1406": {
      "offset": [
        2112,
        2124
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1407": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2112,
        2124
      ],
      "op": "DIV",
      "path": "10"
    },
    "1408": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2112,
        2124
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "1410": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2112,
        2124
      ],
      "op": "AND",
      "path": "10"
    },
    "1411": {
      "offset": [
        2112,
        2148
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "1413": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2112,
        2148
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1414": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2112,
        2148
      ],
      "op": "GT",
      "path": "10"
    },
    "1415": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2112,
        2148
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1416": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2112,
        2148
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x593"
    },
    "1419": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2112,
        2148
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1420": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2112,
        2148
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x593"
    },
    "1423": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2112,
        2148
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF94"
    },
    "1426": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        2112,
        2148
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1427": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2112,
        2148
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1428": {
      "branch": 44,
      "fn": "Lottery.enterLottery",
      "offset": [
        2112,
        2148
      ],
      "op": "EQ",
      "path": "10"
    },
    "1429": {
      "offset": [
        2104,
        2175
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5D9"
    },
    "1432": {
      "branch": 44,
      "offset": [
        2104,
        2175
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1433": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2104,
        2175
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1435": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2104,
        2175
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1436": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1442": {
      "op": "SHL"
    },
    "1443": {
      "offset": [
        2104,
        2175
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1444": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2104,
        2175
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1445": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1447": {
      "offset": [
        2104,
        2175
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1449": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2104,
        2175
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1450": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2104,
        2175
      ],
      "op": "ADD",
      "path": "10"
    },
    "1451": {
      "op": "MSTORE"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1456": {
      "op": "DUP3"
    },
    "1457": {
      "op": "ADD"
    },
    "1458": {
      "op": "MSTORE"
    },
    "1459": {
      "op": "PUSH22",
      "value": "0x131BDD1D195C9E481B5D5CDD081899481BDC195B9959"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "1484": {
      "op": "SHL"
    },
    "1485": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1487": {
      "op": "DUP3"
    },
    "1488": {
      "op": "ADD"
    },
    "1489": {
      "op": "MSTORE"
    },
    "1490": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1492": {
      "op": "ADD"
    },
    "1493": {
      "offset": [
        2104,
        2175
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3F8"
    },
    "1496": {
      "op": "JUMP"
    },
    "1497": {
      "offset": [
        2104,
        2175
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1498": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2946,
        2962
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1499": {
      "offset": [
        2376,
        2383
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1500": {
      "offset": [
        2387,
        2388
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1502": {
      "offset": [
        2376,
        2388
      ],
      "op": "SUB",
      "path": "10"
    },
    "1503": {
      "offset": [
        2368,
        2422
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5FA"
    },
    "1506": {
      "offset": [
        2368,
        2422
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1507": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2368,
        2422
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1509": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2368,
        2422
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1510": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1514": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1516": {
      "op": "SHL"
    },
    "1517": {
      "offset": [
        2368,
        2422
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1518": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2368,
        2422
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1519": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2368,
        2422
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1521": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2368,
        2422
      ],
      "op": "ADD",
      "path": "10"
    },
    "1522": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2368,
        2422
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3F8"
    },
    "1525": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2368,
        2422
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1526": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2368,
        2422
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1052"
    },
    "1529": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        2368,
        2422
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1530": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2368,
        2422
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1531": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2986,
        2996
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 8
    },
    "1532": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2978,
        3035
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x63E"
    },
    "1535": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2978,
        3035
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1536": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2978,
        3035
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1538": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2978,
        3035
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1539": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1545": {
      "op": "SHL"
    },
    "1546": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2978,
        3035
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1547": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2978,
        3035
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1548": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1550": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2978,
        3035
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1552": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2978,
        3035
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1553": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2978,
        3035
      ],
      "op": "ADD",
      "path": "10"
    },
    "1554": {
      "op": "MSTORE"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1559": {
      "op": "DUP3"
    },
    "1560": {
      "op": "ADD"
    },
    "1561": {
      "op": "MSTORE"
    },
    "1562": {
      "op": "PUSH20",
      "value": "0x696E76616C696420757365722061646472657373"
    },
    "1583": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1585": {
      "op": "SHL"
    },
    "1586": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1588": {
      "op": "DUP3"
    },
    "1589": {
      "op": "ADD"
    },
    "1590": {
      "op": "MSTORE"
    },
    "1591": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1593": {
      "op": "ADD"
    },
    "1594": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2978,
        3035
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3F8"
    },
    "1597": {
      "op": "JUMP"
    },
    "1598": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2978,
        3035
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1599": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3059
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 9,
      "value": "0xB"
    },
    "1601": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3059
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1602": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3059
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1604": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3100,
        3111
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1611": {
      "op": "SHL"
    },
    "1612": {
      "op": "SUB"
    },
    "1613": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3059
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1614": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3059
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1615": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3059
      ],
      "op": "AND",
      "path": "10"
    },
    "1616": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3059
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1617": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3071
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xC9FCEC9"
    },
    "1622": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3071
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1623": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3072,
        3082
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1624": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3072,
        3082
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1625": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3092,
        3096
      ],
      "op": "ADDRESS",
      "path": "10"
    },
    "1626": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3092,
        3096
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1627": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3100,
        3128
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x676"
    },
    "1630": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3100,
        3128
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1631": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3112,
        3128
      ],
      "op": "DUP8",
      "path": "10"
    },
    "1632": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3112,
        3128
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1637": {
      "op": "SHL"
    },
    "1638": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3100,
        3111
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1639": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3100,
        3111
      ],
      "op": "DIV",
      "path": "10"
    },
    "1640": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3100,
        3111
      ],
      "op": "PUSH8",
      "path": "10",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1649": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3100,
        3111
      ],
      "op": "AND",
      "path": "10"
    },
    "1650": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3100,
        3128
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1089"
    },
    "1653": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        3100,
        3128
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1654": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3100,
        3128
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1655": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3100,
        3135
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x688"
    },
    "1658": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3100,
        3135
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1659": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3129,
        3135
      ],
      "op": "PUSH8",
      "path": "10",
      "value": "0xDE0B6B3A7640000"
    },
    "1668": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3100,
        3135
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1089"
    },
    "1671": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        3100,
        3135
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1672": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3100,
        3135
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1673": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1675": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1680": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1682": {
      "op": "SHL"
    },
    "1683": {
      "op": "SUB"
    },
    "1684": {
      "op": "NOT"
    },
    "1685": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "1687": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "DUP7",
      "path": "10"
    },
    "1688": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1689": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "SHL",
      "path": "10"
    },
    "1690": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "AND",
      "path": "10"
    },
    "1691": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1692": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1699": {
      "op": "SHL"
    },
    "1700": {
      "op": "SUB"
    },
    "1701": {
      "op": "SWAP4"
    },
    "1702": {
      "op": "DUP5"
    },
    "1703": {
      "op": "AND"
    },
    "1704": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1706": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1707": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "ADD",
      "path": "10"
    },
    "1708": {
      "op": "MSTORE"
    },
    "1709": {
      "op": "SWAP3"
    },
    "1710": {
      "op": "SWAP1"
    },
    "1711": {
      "op": "SWAP2"
    },
    "1712": {
      "op": "AND"
    },
    "1713": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1715": {
      "op": "DUP4"
    },
    "1716": {
      "op": "ADD"
    },
    "1717": {
      "op": "MSTORE"
    },
    "1718": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1720": {
      "op": "DUP3"
    },
    "1721": {
      "op": "ADD"
    },
    "1722": {
      "op": "MSTORE"
    },
    "1723": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1725": {
      "op": "ADD"
    },
    "1726": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1728": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1730": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1731": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1732": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1733": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "SUB",
      "path": "10"
    },
    "1734": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1735": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1737": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "DUP8",
      "path": "10"
    },
    "1738": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1739": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "1740": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1741": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1742": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1743": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6D7"
    },
    "1746": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1747": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1749": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1750": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1751": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1752": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "POP",
      "path": "10"
    },
    "1753": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "GAS",
      "path": "10"
    },
    "1754": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "CALL",
      "path": "10"
    },
    "1755": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1756": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1757": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1758": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6EB"
    },
    "1761": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1762": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1763": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1765": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1766": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "1767": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1768": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1770": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1771": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3054,
        3137
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1772": {
      "op": "POP"
    },
    "1773": {
      "op": "POP"
    },
    "1774": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3152
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 10,
      "value": "0xB"
    },
    "1776": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3152
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1777": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3152
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1779": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3194,
        3205
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1784": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1786": {
      "op": "SHL"
    },
    "1787": {
      "op": "SUB"
    },
    "1788": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3152
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1789": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3152
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1790": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3152
      ],
      "op": "AND",
      "path": "10"
    },
    "1791": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3152
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1792": {
      "op": "POP"
    },
    "1793": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3165
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x23B872DD"
    },
    "1798": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3165
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1799": {
      "op": "POP"
    },
    "1800": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3166,
        3176
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1801": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3166,
        3176
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1802": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3186,
        3190
      ],
      "op": "ADDRESS",
      "path": "10"
    },
    "1803": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3186,
        3190
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1804": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3194,
        3222
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x727"
    },
    "1807": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3194,
        3222
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1808": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3206,
        3222
      ],
      "op": "DUP8",
      "path": "10"
    },
    "1809": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3206,
        3222
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1812": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1814": {
      "op": "SHL"
    },
    "1815": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3194,
        3205
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1816": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3194,
        3205
      ],
      "op": "DIV",
      "path": "10"
    },
    "1817": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3194,
        3205
      ],
      "op": "PUSH8",
      "path": "10",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1826": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3194,
        3205
      ],
      "op": "AND",
      "path": "10"
    },
    "1827": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3194,
        3222
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1089"
    },
    "1830": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        3194,
        3222
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1831": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3194,
        3222
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1832": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3194,
        3229
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x739"
    },
    "1835": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3194,
        3229
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1836": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3223,
        3229
      ],
      "op": "PUSH8",
      "path": "10",
      "value": "0xDE0B6B3A7640000"
    },
    "1845": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3194,
        3229
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1089"
    },
    "1848": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        3194,
        3229
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1849": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3194,
        3229
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1850": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1852": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1857": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1859": {
      "op": "SHL"
    },
    "1860": {
      "op": "SUB"
    },
    "1861": {
      "op": "NOT"
    },
    "1862": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "1864": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "DUP7",
      "path": "10"
    },
    "1865": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1866": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "SHL",
      "path": "10"
    },
    "1867": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "AND",
      "path": "10"
    },
    "1868": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1869": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1876": {
      "op": "SHL"
    },
    "1877": {
      "op": "SUB"
    },
    "1878": {
      "op": "SWAP4"
    },
    "1879": {
      "op": "DUP5"
    },
    "1880": {
      "op": "AND"
    },
    "1881": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1883": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1884": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "ADD",
      "path": "10"
    },
    "1885": {
      "op": "MSTORE"
    },
    "1886": {
      "op": "SWAP3"
    },
    "1887": {
      "op": "SWAP1"
    },
    "1888": {
      "op": "SWAP2"
    },
    "1889": {
      "op": "AND"
    },
    "1890": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1892": {
      "op": "DUP4"
    },
    "1893": {
      "op": "ADD"
    },
    "1894": {
      "op": "MSTORE"
    },
    "1895": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1897": {
      "op": "DUP3"
    },
    "1898": {
      "op": "ADD"
    },
    "1899": {
      "op": "MSTORE"
    },
    "1900": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1902": {
      "op": "ADD"
    },
    "1903": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1905": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1907": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1908": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1909": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1910": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "SUB",
      "path": "10"
    },
    "1911": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1912": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1914": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "DUP8",
      "path": "10"
    },
    "1915": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "GAS",
      "path": "10"
    },
    "1916": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "CALL",
      "path": "10"
    },
    "1917": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1918": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1919": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1920": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x78D"
    },
    "1923": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1924": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1925": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1927": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1928": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "1929": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1930": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1932": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1933": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1934": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "POP",
      "path": "10"
    },
    "1935": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "POP",
      "path": "10"
    },
    "1936": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "POP",
      "path": "10"
    },
    "1937": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "POP",
      "path": "10"
    },
    "1938": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1940": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1941": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1942": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "1944": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "NOT",
      "path": "10"
    },
    "1945": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "1947": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1948": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "ADD",
      "path": "10"
    },
    "1949": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "AND",
      "path": "10"
    },
    "1950": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1951": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "ADD",
      "path": "10"
    },
    "1952": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1953": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1955": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1956": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "POP",
      "path": "10"
    },
    "1957": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1958": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "ADD",
      "path": "10"
    },
    "1959": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1960": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7B1"
    },
    "1963": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1964": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1965": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10A8"
    },
    "1968": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        3147,
        3231
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1969": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3147,
        3231
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1970": {
      "op": "POP"
    },
    "1971": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3254,
        3265
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 11,
      "value": "0x1"
    },
    "1973": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3254,
        3265
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1974": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3254,
        3282
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7D1"
    },
    "1977": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3254,
        3282
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1978": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3266,
        3282
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1979": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3266,
        3282
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1982": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1984": {
      "op": "SHL"
    },
    "1985": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3254,
        3265
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1986": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3254,
        3265
      ],
      "op": "DIV",
      "path": "10"
    },
    "1987": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3254,
        3265
      ],
      "op": "PUSH8",
      "path": "10",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1996": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3254,
        3265
      ],
      "op": "AND",
      "path": "10"
    },
    "1997": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3254,
        3282
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1089"
    },
    "2000": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        3254,
        3282
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2001": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3254,
        3282
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2002": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3254,
        3291
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7E3"
    },
    "2005": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3254,
        3291
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2006": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3284,
        3290
      ],
      "op": "PUSH8",
      "path": "10",
      "value": "0xDE0B6B3A7640000"
    },
    "2015": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3254,
        3291
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1089"
    },
    "2018": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        3254,
        3291
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2019": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3254,
        3291
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2020": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3241,
        3250
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xC"
    },
    "2022": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3241,
        3250
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2024": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3241,
        3291
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2025": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3241,
        3291
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2026": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3241,
        3291
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2027": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3241,
        3291
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7F4"
    },
    "2030": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3241,
        3291
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2031": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3241,
        3291
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2032": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3241,
        3291
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x103A"
    },
    "2035": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        3241,
        3291
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2036": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3241,
        3291
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2037": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3241,
        3291
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2038": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3241,
        3291
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2039": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3241,
        3291
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2040": {
      "op": "POP"
    },
    "2041": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3306,
        3321
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2043": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3306,
        3321
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2044": {
      "op": "POP"
    },
    "2045": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3301,
        3573
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2046": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3337,
        3353
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2047": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3327,
        3334
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2048": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3327,
        3353
      ],
      "op": "LT",
      "path": "10"
    },
    "2049": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3301,
        3573
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2050": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3301,
        3573
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8C0"
    },
    "2053": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3301,
        3573
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2054": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3401,
        3413
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 12,
      "value": "0x3"
    },
    "2056": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3401,
        3413
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2057": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3380,
        3414
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2059": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3380,
        3414
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2060": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3380,
        3414
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2061": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3380,
        3414
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2062": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3380,
        3400
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "2064": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3380,
        3414
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2066": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3380,
        3414
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2067": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3380,
        3414
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2068": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3380,
        3414
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2069": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3380,
        3414
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2071": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3380,
        3414
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2072": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3380,
        3414
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2073": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3380,
        3414
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2074": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3380,
        3427
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2075": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3380,
        3427
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2080": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2082": {
      "op": "SHL"
    },
    "2083": {
      "op": "SUB"
    },
    "2084": {
      "op": "NOT"
    },
    "2085": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3380,
        3427
      ],
      "op": "AND",
      "path": "10"
    },
    "2086": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3417,
        3427
      ],
      "op": "CALLER",
      "path": "10"
    },
    "2087": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3380,
        3427
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2088": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3380,
        3427
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2089": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3380,
        3427
      ],
      "op": "OR",
      "path": "10"
    },
    "2090": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3380,
        3427
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2091": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3380,
        3427
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2092": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3380,
        3427
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2093": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3441,
        3471
      ],
      "op": "DUP4",
      "path": "10",
      "statement": 13
    },
    "2094": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3441,
        3471
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2095": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3441,
        3459
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x9"
    },
    "2097": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3441,
        3471
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2098": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3441,
        3471
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2099": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3441,
        3471
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2100": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3441,
        3471
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2101": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3441,
        3471
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2102": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3441,
        3473
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2103": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3441,
        3473
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2104": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3441,
        3473
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2105": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3441,
        3473
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x841"
    },
    "2108": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3441,
        3473
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2109": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3441,
        3473
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10CA"
    },
    "2112": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        3441,
        3473
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2113": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3441,
        3473
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2114": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3441,
        3473
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2115": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3441,
        3473
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2116": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3441,
        3473
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2117": {
      "op": "POP"
    },
    "2118": {
      "op": "POP"
    },
    "2119": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3487,
        3499
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 14,
      "value": "0x3"
    },
    "2121": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3487,
        3501
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2122": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3487,
        3501
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2123": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3487,
        3501
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2124": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3487,
        3499
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2126": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3487,
        3501
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x856"
    },
    "2129": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3487,
        3501
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2130": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3487,
        3501
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10CA"
    },
    "2133": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        3487,
        3501
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2134": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3487,
        3501
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2135": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3487,
        3501
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2136": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3487,
        3501
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2137": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3487,
        3501
      ],
      "op": "POP",
      "path": "10"
    },
    "2138": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3487,
        3501
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2139": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3487,
        3501
      ],
      "op": "POP",
      "path": "10"
    },
    "2140": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3520,
        3558
      ],
      "op": "PUSH32",
      "path": "10",
      "statement": 15,
      "value": "0x9D5CF8D6FC62210BAB9630B8D613C1B63D9CFE0E0D2D70DDA538D69C7E4F37BA"
    },
    "2173": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3529,
        3539
      ],
      "op": "CALLER",
      "path": "10"
    },
    "2174": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3556,
        3557
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "2176": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3541,
        3553
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "2178": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3541,
        3553
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2179": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3541,
        3557
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x88C"
    },
    "2182": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3541,
        3557
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2183": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3541,
        3557
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2184": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3541,
        3557
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10E3"
    },
    "2187": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        3541,
        3557
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2188": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3541,
        3557
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2189": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3520,
        3558
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2191": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3520,
        3558
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2192": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3520,
        3558
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2197": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2199": {
      "op": "SHL"
    },
    "2200": {
      "op": "SUB"
    },
    "2201": {
      "op": "SWAP1"
    },
    "2202": {
      "op": "SWAP4"
    },
    "2203": {
      "op": "AND"
    },
    "2204": {
      "op": "DUP4"
    },
    "2205": {
      "op": "MSTORE"
    },
    "2206": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2208": {
      "op": "DUP4"
    },
    "2209": {
      "op": "ADD"
    },
    "2210": {
      "op": "SWAP2"
    },
    "2211": {
      "op": "SWAP1"
    },
    "2212": {
      "op": "SWAP2"
    },
    "2213": {
      "op": "MSTORE"
    },
    "2214": {
      "op": "ADD"
    },
    "2215": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3520,
        3558
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2217": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3520,
        3558
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2218": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3520,
        3558
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2219": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3520,
        3558
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2220": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3520,
        3558
      ],
      "op": "SUB",
      "path": "10"
    },
    "2221": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3520,
        3558
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2222": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3520,
        3558
      ],
      "op": "LOG1",
      "path": "10"
    },
    "2223": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3355,
        3364
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 16
    },
    "2224": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3355,
        3364
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8B8"
    },
    "2227": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3355,
        3364
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2228": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3355,
        3364
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10CA"
    },
    "2231": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        3355,
        3364
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2232": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3355,
        3364
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2233": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3355,
        3364
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2234": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3355,
        3364
      ],
      "op": "POP",
      "path": "10"
    },
    "2235": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3355,
        3364
      ],
      "op": "POP",
      "path": "10"
    },
    "2236": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3301,
        3573
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7FD"
    },
    "2239": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3301,
        3573
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2240": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3301,
        3573
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2241": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3301,
        3573
      ],
      "op": "POP",
      "path": "10"
    },
    "2242": {
      "offset": [
        2185,
        2186
      ],
      "op": "POP",
      "path": "10"
    },
    "2243": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2828,
        3579
      ],
      "op": "POP",
      "path": "10"
    },
    "2244": {
      "fn": "Lottery.enterLottery",
      "jump": "o",
      "offset": [
        2828,
        3579
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2245": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2246": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2248": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2253": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2255": {
      "op": "SHL"
    },
    "2256": {
      "op": "SUB"
    },
    "2257": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "2258": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 17
    },
    "2259": {
      "offset": [
        1280,
        1303
      ],
      "op": "EQ",
      "path": "0"
    },
    "2260": {
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8EF"
    },
    "2263": {
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2264": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2266": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2267": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2271": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2273": {
      "op": "SHL"
    },
    "2274": {
      "offset": [
        1272,
        1340
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2275": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2276": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2278": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "ADD",
      "path": "0"
    },
    "2279": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F8"
    },
    "2282": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2283": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10FA"
    },
    "2286": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2287": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2288": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1790,
        1796
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x1"
    },
    "2290": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1790,
        1796
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2291": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1769,
        1809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2293": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1769,
        1809
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2294": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1806,
        1807
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2296": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1806,
        1807
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2303": {
      "op": "SHL"
    },
    "2304": {
      "op": "SUB"
    },
    "2305": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1790,
        1796
      ],
      "op": "AND",
      "path": "0"
    },
    "2306": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1790,
        1796
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2307": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1769,
        1809
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2340": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1769,
        1809
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2341": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1806,
        1807
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2342": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1806,
        1807
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2343": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1769,
        1809
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2344": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1819,
        1825
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 19,
      "value": "0x1"
    },
    "2346": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1819,
        1838
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2347": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1819,
        1838
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2354": {
      "op": "SHL"
    },
    "2355": {
      "op": "SUB"
    },
    "2356": {
      "op": "NOT"
    },
    "2357": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1819,
        1838
      ],
      "op": "AND",
      "path": "0"
    },
    "2358": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1819,
        1838
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2359": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1819,
        1838
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2360": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1700,
        1845
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2361": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2362": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9749,
        9759
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 20
    },
    "2363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2367": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2369": {
      "op": "SHL"
    },
    "2370": {
      "op": "SUB"
    },
    "2371": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9763,
        9777
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x0"
    },
    "2404": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9749,
        9777
      ],
      "op": "AND",
      "path": "5"
    },
    "2405": {
      "branch": 48,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9749,
        9777
      ],
      "op": "EQ",
      "path": "5"
    },
    "2406": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9B1"
    },
    "2409": {
      "branch": 48,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2410": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2412": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2413": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2419": {
      "op": "SHL"
    },
    "2420": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2421": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2422": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2424": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2426": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2427": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "ADD",
      "path": "5"
    },
    "2428": {
      "op": "MSTORE"
    },
    "2429": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2431": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2433": {
      "op": "DUP3"
    },
    "2434": {
      "op": "ADD"
    },
    "2435": {
      "op": "MSTORE"
    },
    "2436": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00"
    },
    "2469": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2471": {
      "op": "DUP3"
    },
    "2472": {
      "op": "ADD"
    },
    "2473": {
      "op": "MSTORE"
    },
    "2474": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2476": {
      "op": "ADD"
    },
    "2477": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3F8"
    },
    "2480": {
      "op": "JUMP"
    },
    "2481": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2482": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9819,
        9859
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 21,
      "value": "0x9BB"
    },
    "2485": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9837,
        9846
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2486": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9848,
        9858
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2487": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9819,
        9836
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCDB"
    },
    "2490": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9819,
        9859
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2491": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9819,
        9859
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2492": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "POP",
      "path": "5"
    },
    "2493": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "POP",
      "path": "5"
    },
    "2494": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "o",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2495": {
      "fn": "Lottery.changeDuration",
      "offset": [
        6087,
        6268
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2496": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2498": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2503": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2505": {
      "op": "SHL"
    },
    "2506": {
      "op": "SUB"
    },
    "2507": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "2508": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2509": {
      "offset": [
        1280,
        1303
      ],
      "op": "EQ",
      "path": "0"
    },
    "2510": {
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E9"
    },
    "2513": {
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2514": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2516": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2517": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2521": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2523": {
      "op": "SHL"
    },
    "2524": {
      "offset": [
        1272,
        1340
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2525": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2526": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2528": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "ADD",
      "path": "0"
    },
    "2529": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F8"
    },
    "2532": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2533": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10FA"
    },
    "2536": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2537": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2538": {
      "offset": [
        2253,
        2273
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2540": {
      "offset": [
        2237,
        2249
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "2542": {
      "fn": "Context._msgSender",
      "offset": [
        2237,
        2249
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2545": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2547": {
      "op": "SHL"
    },
    "2548": {
      "offset": [
        2237,
        2249
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2549": {
      "fn": "Context._msgSender",
      "offset": [
        2237,
        2249
      ],
      "op": "DIV",
      "path": "10"
    },
    "2550": {
      "fn": "Context._msgSender",
      "offset": [
        2237,
        2249
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "2552": {
      "fn": "Context._msgSender",
      "offset": [
        2237,
        2249
      ],
      "op": "AND",
      "path": "10"
    },
    "2553": {
      "offset": [
        2237,
        2273
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "2555": {
      "fn": "Context._msgSender",
      "offset": [
        2237,
        2273
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2556": {
      "fn": "Context._msgSender",
      "offset": [
        2237,
        2273
      ],
      "op": "GT",
      "path": "10"
    },
    "2557": {
      "fn": "Context._msgSender",
      "offset": [
        2237,
        2273
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2558": {
      "fn": "Context._msgSender",
      "offset": [
        2237,
        2273
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA09"
    },
    "2561": {
      "fn": "Context._msgSender",
      "offset": [
        2237,
        2273
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2562": {
      "fn": "Context._msgSender",
      "offset": [
        2237,
        2273
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA09"
    },
    "2565": {
      "fn": "Context._msgSender",
      "offset": [
        2237,
        2273
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF94"
    },
    "2568": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        2237,
        2273
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2569": {
      "fn": "Context._msgSender",
      "offset": [
        2237,
        2273
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2570": {
      "branch": 45,
      "fn": "Context._msgSender",
      "offset": [
        2237,
        2273
      ],
      "op": "EQ",
      "path": "10"
    },
    "2571": {
      "offset": [
        2229,
        2300
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4F"
    },
    "2574": {
      "branch": 45,
      "offset": [
        2229,
        2300
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2575": {
      "fn": "Context._msgSender",
      "offset": [
        2229,
        2300
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2577": {
      "fn": "Context._msgSender",
      "offset": [
        2229,
        2300
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2578": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2582": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2584": {
      "op": "SHL"
    },
    "2585": {
      "offset": [
        2229,
        2300
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2586": {
      "fn": "Context._msgSender",
      "offset": [
        2229,
        2300
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2587": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2589": {
      "offset": [
        2229,
        2300
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2591": {
      "fn": "Context._msgSender",
      "offset": [
        2229,
        2300
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2592": {
      "fn": "Context._msgSender",
      "offset": [
        2229,
        2300
      ],
      "op": "ADD",
      "path": "10"
    },
    "2593": {
      "op": "MSTORE"
    },
    "2594": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "2596": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2598": {
      "op": "DUP3"
    },
    "2599": {
      "op": "ADD"
    },
    "2600": {
      "op": "MSTORE"
    },
    "2601": {
      "op": "PUSH22",
      "value": "0x131BDD1D195C9E481B5D5CDD0818994818DB1BDCD959"
    },
    "2624": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "2626": {
      "op": "SHL"
    },
    "2627": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2629": {
      "op": "DUP3"
    },
    "2630": {
      "op": "ADD"
    },
    "2631": {
      "op": "MSTORE"
    },
    "2632": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2634": {
      "op": "ADD"
    },
    "2635": {
      "offset": [
        2229,
        2300
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3F8"
    },
    "2638": {
      "op": "JUMP"
    },
    "2639": {
      "offset": [
        2229,
        2300
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2640": {
      "fn": "Lottery.changeDuration",
      "offset": [
        6203,
        6215
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2641": {
      "offset": [
        2376,
        2383
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2642": {
      "offset": [
        2387,
        2388
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2644": {
      "offset": [
        2376,
        2388
      ],
      "op": "SUB",
      "path": "10"
    },
    "2645": {
      "offset": [
        2368,
        2422
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA70"
    },
    "2648": {
      "offset": [
        2368,
        2422
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2649": {
      "fn": "Lottery.changeDuration",
      "offset": [
        2368,
        2422
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2651": {
      "fn": "Lottery.changeDuration",
      "offset": [
        2368,
        2422
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2652": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2656": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2658": {
      "op": "SHL"
    },
    "2659": {
      "offset": [
        2368,
        2422
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2660": {
      "fn": "Lottery.changeDuration",
      "offset": [
        2368,
        2422
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2661": {
      "fn": "Lottery.changeDuration",
      "offset": [
        2368,
        2422
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2663": {
      "fn": "Lottery.changeDuration",
      "offset": [
        2368,
        2422
      ],
      "op": "ADD",
      "path": "10"
    },
    "2664": {
      "fn": "Lottery.changeDuration",
      "offset": [
        2368,
        2422
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3F8"
    },
    "2667": {
      "fn": "Lottery.changeDuration",
      "offset": [
        2368,
        2422
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2668": {
      "fn": "Lottery.changeDuration",
      "offset": [
        2368,
        2422
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1052"
    },
    "2671": {
      "fn": "Lottery.changeDuration",
      "jump": "i",
      "offset": [
        2368,
        2422
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2672": {
      "fn": "Lottery.changeDuration",
      "offset": [
        2368,
        2422
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2673": {
      "op": "POP"
    },
    "2674": {
      "fn": "Lottery.changeDuration",
      "offset": [
        6231,
        6246
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 22,
      "value": "0x5"
    },
    "2676": {
      "fn": "Lottery.changeDuration",
      "offset": [
        6231,
        6261
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2677": {
      "fn": "Lottery.changeDuration",
      "jump": "o",
      "offset": [
        6087,
        6268
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2678": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2679": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2681": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2688": {
      "op": "SHL"
    },
    "2689": {
      "op": "SUB"
    },
    "2690": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "2691": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2692": {
      "offset": [
        1280,
        1303
      ],
      "op": "EQ",
      "path": "0"
    },
    "2693": {
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA0"
    },
    "2696": {
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2697": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2699": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2700": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2704": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2706": {
      "op": "SHL"
    },
    "2707": {
      "offset": [
        1272,
        1340
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2708": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2709": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2711": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "ADD",
      "path": "0"
    },
    "2712": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F8"
    },
    "2715": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2716": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10FA"
    },
    "2719": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2720": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2725": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2727": {
      "op": "SHL"
    },
    "2728": {
      "op": "SUB"
    },
    "2729": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2082,
        2104
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 23
    },
    "2730": {
      "branch": 47,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2082,
        2104
      ],
      "op": "AND",
      "path": "0"
    },
    "2731": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB05"
    },
    "2734": {
      "branch": 47,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2735": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2737": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2738": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2742": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2744": {
      "op": "SHL"
    },
    "2745": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2746": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2747": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2749": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2751": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2752": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "ADD",
      "path": "0"
    },
    "2753": {
      "op": "MSTORE"
    },
    "2754": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2756": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2758": {
      "op": "DUP3"
    },
    "2759": {
      "op": "ADD"
    },
    "2760": {
      "op": "MSTORE"
    },
    "2761": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2794": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2796": {
      "op": "DUP3"
    },
    "2797": {
      "op": "ADD"
    },
    "2798": {
      "op": "MSTORE"
    },
    "2799": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2806": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2808": {
      "op": "SHL"
    },
    "2809": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2811": {
      "op": "DUP3"
    },
    "2812": {
      "op": "ADD"
    },
    "2813": {
      "op": "MSTORE"
    },
    "2814": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2816": {
      "op": "ADD"
    },
    "2817": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F8"
    },
    "2820": {
      "op": "JUMP"
    },
    "2821": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2822": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 24,
      "value": "0x1"
    },
    "2824": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2825": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2827": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2832": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2834": {
      "op": "SHL"
    },
    "2835": {
      "op": "SUB"
    },
    "2836": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2837": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2838": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "AND",
      "path": "0"
    },
    "2839": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2840": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "AND",
      "path": "0"
    },
    "2841": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2842": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2875": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2876": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2878": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2879": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2880": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2216
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 25,
      "value": "0x1"
    },
    "2882": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2883": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2888": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2890": {
      "op": "SHL"
    },
    "2891": {
      "op": "SUB"
    },
    "2892": {
      "op": "NOT"
    },
    "2893": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "AND",
      "path": "0"
    },
    "2894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2900": {
      "op": "SHL"
    },
    "2901": {
      "op": "SUB"
    },
    "2902": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2903": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2904": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2905": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "AND",
      "path": "0"
    },
    "2906": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2907": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2908": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2909": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "OR",
      "path": "0"
    },
    "2910": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2911": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2912": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2913": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7752,
        8807
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2914": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7856,
        7873
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2916": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7892
      ],
      "op": "PUSH32",
      "path": "5",
      "statement": 26,
      "value": "0x0"
    },
    "2949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2955": {
      "op": "SHL"
    },
    "2956": {
      "op": "SUB"
    },
    "2957": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7908
      ],
      "op": "AND",
      "path": "5"
    },
    "2958": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7908
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x4000AEA0"
    },
    "2963": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7909,
        7923
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x0"
    },
    "2996": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7925,
        7929
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2997": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7942,
        7950
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2998": {
      "offset": [
        6609,
        6610
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3000": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3002": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3003": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3005": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "ADD",
      "path": "5"
    },
    "3006": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBD1"
    },
    "3009": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3010": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3011": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3012": {
      "op": "SWAP2"
    },
    "3013": {
      "op": "DUP3"
    },
    "3014": {
      "op": "MSTORE"
    },
    "3015": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3017": {
      "op": "DUP3"
    },
    "3018": {
      "op": "ADD"
    },
    "3019": {
      "op": "MSTORE"
    },
    "3020": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3022": {
      "op": "ADD"
    },
    "3023": {
      "op": "SWAP1"
    },
    "3024": {
      "op": "JUMP"
    },
    "3025": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3026": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3028": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3029": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3031": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3032": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3033": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SUB",
      "path": "5"
    },
    "3034": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SUB",
      "path": "5"
    },
    "3035": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3036": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3037": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3038": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3040": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3041": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3043": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3044": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3045": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "3050": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "AND",
      "path": "5"
    },
    "3051": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "3053": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SHL",
      "path": "5"
    },
    "3054": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3055": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3056": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3058": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ADD",
      "path": "5"
    },
    "3059": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBFE"
    },
    "3062": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3063": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3064": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3065": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3066": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x112F"
    },
    "3069": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3070": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3071": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3073": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3075": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3076": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3077": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3078": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SUB",
      "path": "5"
    },
    "3079": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3080": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3082": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP8",
      "path": "5"
    },
    "3083": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "GAS",
      "path": "5"
    },
    "3084": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "CALL",
      "path": "5"
    },
    "3085": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3086": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3087": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3088": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC1D"
    },
    "3091": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3092": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "3093": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3095": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3096": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "3097": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "3098": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3100": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3101": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3102": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "5"
    },
    "3103": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "5"
    },
    "3104": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "5"
    },
    "3105": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "5"
    },
    "3106": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3108": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3109": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "3110": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "3112": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "NOT",
      "path": "5"
    },
    "3113": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "3115": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3116": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ADD",
      "path": "5"
    },
    "3117": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "AND",
      "path": "5"
    },
    "3118": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3119": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ADD",
      "path": "5"
    },
    "3120": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3121": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3123": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3124": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "5"
    },
    "3125": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3126": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ADD",
      "path": "5"
    },
    "3127": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3128": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC41"
    },
    "3131": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3132": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3133": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10A8"
    },
    "3136": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3137": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3138": {
      "op": "POP"
    },
    "3139": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8206,
        8221
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3141": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3142": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3143": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3144": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3146": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3147": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3148": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3149": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3151": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3152": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3153": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3154": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3155": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 27
    },
    "3156": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3157": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3158": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3159": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "ADD",
      "path": "6"
    },
    "3160": {
      "op": "DUP9"
    },
    "3161": {
      "op": "SWAP1"
    },
    "3162": {
      "op": "MSTORE"
    },
    "3163": {
      "op": "DUP1"
    },
    "3164": {
      "op": "DUP4"
    },
    "3165": {
      "op": "ADD"
    },
    "3166": {
      "op": "DUP6"
    },
    "3167": {
      "op": "SWAP1"
    },
    "3168": {
      "op": "MSTORE"
    },
    "3169": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8283,
        8287
      ],
      "op": "ADDRESS",
      "path": "5"
    },
    "3170": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3172": {
      "op": "DUP3"
    },
    "3173": {
      "op": "ADD"
    },
    "3174": {
      "op": "MSTORE"
    },
    "3175": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3177": {
      "op": "DUP1"
    },
    "3178": {
      "op": "DUP3"
    },
    "3179": {
      "op": "ADD"
    },
    "3180": {
      "op": "DUP4"
    },
    "3181": {
      "op": "SWAP1"
    },
    "3182": {
      "op": "MSTORE"
    },
    "3183": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3184": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3185": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3186": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3187": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SUB",
      "path": "6"
    },
    "3188": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3189": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3190": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "ADD",
      "path": "6"
    },
    "3191": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3192": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3193": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3195": {
      "op": "SWAP1"
    },
    "3196": {
      "op": "SWAP2"
    },
    "3197": {
      "op": "ADD"
    },
    "3198": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3199": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3200": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3201": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3202": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3203": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3204": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3205": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "ADD",
      "path": "6"
    },
    "3206": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3207": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3208": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3209": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3210": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "DUP7",
      "path": "5",
      "statement": 28
    },
    "3211": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3212": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3213": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3214": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3215": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3216": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3217": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8757
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC9B"
    },
    "3220": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8757
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3221": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8756,
        8757
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3223": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8757
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x103A"
    },
    "3226": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        8737,
        8757
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3227": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8757
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3228": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8724
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3230": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3231": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3232": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3233": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3235": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3236": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3237": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3238": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3240": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3241": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3242": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3243": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3244": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8757
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3245": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8757
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3246": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8757
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3247": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8757
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3248": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 29
    },
    "3249": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3250": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3251": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3252": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "ADD",
      "path": "6"
    },
    "3253": {
      "op": "DUP8"
    },
    "3254": {
      "op": "SWAP1"
    },
    "3255": {
      "op": "MSTORE"
    },
    "3256": {
      "op": "DUP1"
    },
    "3257": {
      "op": "DUP3"
    },
    "3258": {
      "op": "ADD"
    },
    "3259": {
      "op": "DUP5"
    },
    "3260": {
      "op": "SWAP1"
    },
    "3261": {
      "op": "MSTORE"
    },
    "3262": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3263": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3264": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3265": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3266": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "SUB",
      "path": "6"
    },
    "3267": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3268": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "ADD",
      "path": "6"
    },
    "3269": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3270": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3271": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3273": {
      "op": "SWAP1"
    },
    "3274": {
      "op": "SWAP2"
    },
    "3275": {
      "op": "ADD"
    },
    "3276": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3277": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3278": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3279": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3280": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3281": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3282": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "ADD",
      "path": "6"
    },
    "3283": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3284": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8763,
        8802
      ],
      "op": "SWAP5",
      "path": "5",
      "statement": 30
    },
    "3285": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7752,
        8807
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3286": {
      "op": "POP"
    },
    "3287": {
      "op": "POP"
    },
    "3288": {
      "op": "POP"
    },
    "3289": {
      "op": "POP"
    },
    "3290": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "o",
      "offset": [
        7752,
        8807
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3291": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4472,
        5679
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3292": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4590,
        4601
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3293": {
      "offset": [
        2376,
        2383
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3294": {
      "offset": [
        2387,
        2388
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3296": {
      "offset": [
        2376,
        2388
      ],
      "op": "SUB",
      "path": "10"
    },
    "3297": {
      "offset": [
        2368,
        2422
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCFC"
    },
    "3300": {
      "offset": [
        2368,
        2422
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3301": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2368,
        2422
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3303": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2368,
        2422
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3304": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3308": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3310": {
      "op": "SHL"
    },
    "3311": {
      "offset": [
        2368,
        2422
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3312": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2368,
        2422
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3313": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2368,
        2422
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3315": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2368,
        2422
      ],
      "op": "ADD",
      "path": "10"
    },
    "3316": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2368,
        2422
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3F8"
    },
    "3319": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2368,
        2422
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3320": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2368,
        2422
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1052"
    },
    "3323": {
      "fn": "Lottery.fulfillRandomness",
      "jump": "i",
      "offset": [
        2368,
        2422
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3324": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2368,
        2422
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3325": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4654,
        4678
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 31,
      "value": "0x2"
    },
    "3327": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4638,
        4650
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "3329": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4638,
        4650
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3332": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3334": {
      "op": "SHL"
    },
    "3335": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4638,
        4650
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3336": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4638,
        4650
      ],
      "op": "DIV",
      "path": "10"
    },
    "3337": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4638,
        4650
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "3339": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4638,
        4650
      ],
      "op": "AND",
      "path": "10"
    },
    "3340": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4638,
        4678
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "3342": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4638,
        4678
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3343": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4638,
        4678
      ],
      "op": "GT",
      "path": "10"
    },
    "3344": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4638,
        4678
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3345": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4638,
        4678
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD1C"
    },
    "3348": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4638,
        4678
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3349": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4638,
        4678
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD1C"
    },
    "3352": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4638,
        4678
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF94"
    },
    "3355": {
      "fn": "Lottery.fulfillRandomness",
      "jump": "i",
      "offset": [
        4638,
        4678
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3356": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4638,
        4678
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3357": {
      "branch": 46,
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4638,
        4678
      ],
      "op": "EQ",
      "path": "10"
    },
    "3358": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4617,
        4749
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD7F"
    },
    "3361": {
      "branch": 46,
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4617,
        4749
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3362": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4617,
        4749
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3364": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4617,
        4749
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3365": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3369": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3371": {
      "op": "SHL"
    },
    "3372": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4617,
        4749
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3373": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4617,
        4749
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3374": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3376": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4617,
        4749
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3378": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4617,
        4749
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3379": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4617,
        4749
      ],
      "op": "ADD",
      "path": "10"
    },
    "3380": {
      "op": "MSTORE"
    },
    "3381": {
      "op": "PUSH1",
      "value": "0x2D"
    },
    "3383": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3385": {
      "op": "DUP3"
    },
    "3386": {
      "op": "ADD"
    },
    "3387": {
      "op": "MSTORE"
    },
    "3388": {
      "op": "PUSH32",
      "value": "0x54686520636F6E7472616374206973206E6F742070726F63657373696E672074"
    },
    "3421": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3423": {
      "op": "DUP3"
    },
    "3424": {
      "op": "ADD"
    },
    "3425": {
      "op": "MSTORE"
    },
    "3426": {
      "op": "PUSH13",
      "value": "0x1A19481DDA5B9B995C881E595D"
    },
    "3440": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "3442": {
      "op": "SHL"
    },
    "3443": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3445": {
      "op": "DUP3"
    },
    "3446": {
      "op": "ADD"
    },
    "3447": {
      "op": "MSTORE"
    },
    "3448": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3450": {
      "op": "ADD"
    },
    "3451": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4617,
        4749
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3F8"
    },
    "3454": {
      "op": "JUMP"
    },
    "3455": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4617,
        4749
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3456": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4759,
        4782
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3458": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4799,
        4811
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "3460": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4799,
        4811
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3461": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4785,
        4796
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3462": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4785,
        4811
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD8F"
    },
    "3465": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4785,
        4811
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3466": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4785,
        4811
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3467": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4785,
        4811
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x119B"
    },
    "3470": {
      "fn": "Lottery.fulfillRandomness",
      "jump": "i",
      "offset": [
        4785,
        4811
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3471": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4785,
        4811
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3472": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4836,
        4873
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 32,
      "value": "0x0"
    },
    "3474": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4836,
        4873
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3475": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4836,
        4873
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3476": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4836,
        4873
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3477": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4836,
        4856
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "3479": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4836,
        4873
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3481": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4836,
        4873
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3482": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4836,
        4873
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3484": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4836,
        4873
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3485": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4836,
        4873
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3486": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4836,
        4873
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3487": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4821,
        4833
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x8"
    },
    "3489": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4821,
        4873
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3490": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4821,
        4873
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3495": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3497": {
      "op": "SHL"
    },
    "3498": {
      "op": "SUB"
    },
    "3499": {
      "op": "NOT"
    },
    "3500": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4821,
        4873
      ],
      "op": "AND",
      "path": "10"
    },
    "3501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3505": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3507": {
      "op": "SHL"
    },
    "3508": {
      "op": "SUB"
    },
    "3509": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4836,
        4873
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3510": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4836,
        4873
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3511": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4836,
        4873
      ],
      "op": "AND",
      "path": "10"
    },
    "3512": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4821,
        4873
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3513": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4821,
        4873
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3514": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4821,
        4873
      ],
      "op": "OR",
      "path": "10"
    },
    "3515": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4821,
        4873
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3516": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4821,
        4873
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3517": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4898,
        4907
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 33,
      "value": "0xC"
    },
    "3519": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4898,
        4907
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3520": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4759,
        4811
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3521": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4759,
        4811
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3522": {
      "op": "POP"
    },
    "3523": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4884,
        4922
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDCC"
    },
    "3526": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4884,
        4922
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3527": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4898,
        4907
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3528": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4884,
        4897
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE78"
    },
    "3531": {
      "fn": "Lottery.fulfillRandomness",
      "jump": "i",
      "offset": [
        4884,
        4922
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3532": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4884,
        4922
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3533": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5356,
        5368
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 34,
      "value": "0x1"
    },
    "3535": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5356,
        5391
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3536": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5356,
        5391
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3537": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3539": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3541": {
      "op": "SHL"
    },
    "3542": {
      "op": "NOT"
    },
    "3543": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5356,
        5391
      ],
      "op": "AND",
      "path": "10"
    },
    "3544": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5356,
        5391
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3545": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5356,
        5391
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3546": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5371,
        5391
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3548": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5401,
        5410
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 35,
      "value": "0xC"
    },
    "3550": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5401,
        5414
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3551": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5401,
        5414
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3552": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5401,
        5414
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3553": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5424,
        5552
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3554": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5453,
        5465
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "3556": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5453,
        5465
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3557": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5445,
        5450
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3558": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5445,
        5465
      ],
      "op": "LT",
      "path": "10"
    },
    "3559": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5424,
        5552
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3560": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5424,
        5552
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE22"
    },
    "3563": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5424,
        5552
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3564": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5540,
        5541
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 36,
      "value": "0x0"
    },
    "3566": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5509,
        5536
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3567": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5509,
        5536
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3568": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5509,
        5536
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3569": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5509,
        5529
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "3571": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5509,
        5536
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3573": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5509,
        5536
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3574": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5509,
        5536
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3575": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5509,
        5536
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3576": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5509,
        5536
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3578": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5509,
        5536
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3579": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5509,
        5536
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3580": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5509,
        5536
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3581": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5509,
        5536
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3586": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3588": {
      "op": "SHL"
    },
    "3589": {
      "op": "SUB"
    },
    "3590": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5509,
        5536
      ],
      "op": "AND",
      "path": "10"
    },
    "3591": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5490,
        5537
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3592": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5490,
        5537
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3593": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5490,
        5508
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x9"
    },
    "3595": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5490,
        5537
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3596": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5490,
        5537
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3597": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5490,
        5537
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3598": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5490,
        5537
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3599": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5490,
        5537
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3600": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5490,
        5541
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3601": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5530,
        5535
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3602": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5467,
        5474
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 37,
      "value": "0xE1A"
    },
    "3605": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5530,
        5535
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3606": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5467,
        5474
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10CA"
    },
    "3609": {
      "fn": "Lottery.fulfillRandomness",
      "jump": "i",
      "offset": [
        5467,
        5474
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3610": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5467,
        5474
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3611": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5467,
        5474
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3612": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5467,
        5474
      ],
      "op": "POP",
      "path": "10"
    },
    "3613": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5467,
        5474
      ],
      "op": "POP",
      "path": "10"
    },
    "3614": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5424,
        5552
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDE1"
    },
    "3617": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5424,
        5552
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3618": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5424,
        5552
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3619": {
      "op": "POP"
    },
    "3620": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5576,
        5577
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 38,
      "value": "0x0"
    },
    "3622": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5561,
        5573
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "3624": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5561,
        5577
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3625": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5587,
        5597
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 39,
      "value": "0x2"
    },
    "3627": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5587,
        5611
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3628": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5587,
        5611
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3629": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5587,
        5611
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3630": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5642,
        5654
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 40,
      "value": "0x8"
    },
    "3632": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5642,
        5654
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3633": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5626,
        5672
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3635": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5626,
        5672
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3636": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5626,
        5672
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3641": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3643": {
      "op": "SHL"
    },
    "3644": {
      "op": "SUB"
    },
    "3645": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5642,
        5654
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3646": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5642,
        5654
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3647": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5642,
        5654
      ],
      "op": "AND",
      "path": "10"
    },
    "3648": {
      "op": "DUP3"
    },
    "3649": {
      "op": "MSTORE"
    },
    "3650": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5656,
        5671
      ],
      "op": "TIMESTAMP",
      "path": "10"
    },
    "3651": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3653": {
      "op": "DUP4"
    },
    "3654": {
      "op": "ADD"
    },
    "3655": {
      "op": "MSTORE"
    },
    "3656": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5626,
        5672
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x64FFCA72C341AAB4874123AFB736AFBD6FAD01E6EAF584CFE0F320A144D3A576"
    },
    "3689": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5626,
        5672
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3690": {
      "op": "ADD"
    },
    "3691": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5626,
        5672
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3693": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5626,
        5672
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3694": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5626,
        5672
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3695": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5626,
        5672
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3696": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5626,
        5672
      ],
      "op": "SUB",
      "path": "10"
    },
    "3697": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5626,
        5672
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3698": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5626,
        5672
      ],
      "op": "LOG1",
      "path": "10"
    },
    "3699": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4607,
        5679
      ],
      "op": "POP",
      "path": "10"
    },
    "3700": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4472,
        5679
      ],
      "op": "POP",
      "path": "10"
    },
    "3701": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4472,
        5679
      ],
      "op": "POP",
      "path": "10"
    },
    "3702": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4472,
        5679
      ],
      "op": "POP",
      "path": "10"
    },
    "3703": {
      "fn": "Lottery.fulfillRandomness",
      "jump": "o",
      "offset": [
        4472,
        5679
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3704": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5685,
        5879
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3705": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5768
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 41,
      "value": "0xB"
    },
    "3707": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5768
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3712": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3714": {
      "op": "SHL"
    },
    "3715": {
      "op": "SUB"
    },
    "3716": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5768
      ],
      "op": "AND",
      "path": "10"
    },
    "3717": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5780
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xC9FCEC9"
    },
    "3722": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5789,
        5793
      ],
      "op": "ADDRESS",
      "path": "10"
    },
    "3723": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5796,
        5802
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3724": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5804,
        5825
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE9D"
    },
    "3727": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5804,
        5816
      ],
      "op": "DUP7",
      "path": "10"
    },
    "3728": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5818,
        5824
      ],
      "op": "PUSH8",
      "path": "10",
      "value": "0xDE0B6B3A7640000"
    },
    "3737": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5804,
        5825
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1089"
    },
    "3740": {
      "fn": "Lottery.transferPrize",
      "jump": "i",
      "offset": [
        5804,
        5825
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3741": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5804,
        5825
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3742": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3744": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3749": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3751": {
      "op": "SHL"
    },
    "3752": {
      "op": "SUB"
    },
    "3753": {
      "op": "NOT"
    },
    "3754": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "3756": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "DUP7",
      "path": "10"
    },
    "3757": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3758": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "SHL",
      "path": "10"
    },
    "3759": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "AND",
      "path": "10"
    },
    "3760": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3761": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3766": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3768": {
      "op": "SHL"
    },
    "3769": {
      "op": "SUB"
    },
    "3770": {
      "op": "SWAP4"
    },
    "3771": {
      "op": "DUP5"
    },
    "3772": {
      "op": "AND"
    },
    "3773": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3775": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3776": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "ADD",
      "path": "10"
    },
    "3777": {
      "op": "MSTORE"
    },
    "3778": {
      "op": "SWAP3"
    },
    "3779": {
      "op": "SWAP1"
    },
    "3780": {
      "op": "SWAP2"
    },
    "3781": {
      "op": "AND"
    },
    "3782": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3784": {
      "op": "DUP4"
    },
    "3785": {
      "op": "ADD"
    },
    "3786": {
      "op": "MSTORE"
    },
    "3787": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3789": {
      "op": "DUP3"
    },
    "3790": {
      "op": "ADD"
    },
    "3791": {
      "op": "MSTORE"
    },
    "3792": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3794": {
      "op": "ADD"
    },
    "3795": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3797": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3799": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3800": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3801": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3802": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "SUB",
      "path": "10"
    },
    "3803": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3804": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3806": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "DUP8",
      "path": "10"
    },
    "3807": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3808": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "3809": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3810": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3811": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3812": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xEEC"
    },
    "3815": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3816": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3818": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3819": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "REVERT",
      "path": "10"
    },
    "3820": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3821": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "POP",
      "path": "10"
    },
    "3822": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "GAS",
      "path": "10"
    },
    "3823": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "CALL",
      "path": "10"
    },
    "3824": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3825": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3826": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3827": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF00"
    },
    "3830": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3831": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3832": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3834": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3835": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "3836": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3837": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3839": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "REVERT",
      "path": "10"
    },
    "3840": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5763,
        5826
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3841": {
      "op": "POP"
    },
    "3842": {
      "op": "POP"
    },
    "3843": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5841
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 42,
      "value": "0xB"
    },
    "3845": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5841
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3846": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3848": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3849": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3854": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3856": {
      "op": "SHL"
    },
    "3857": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3858": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3863": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3865": {
      "op": "SHL"
    },
    "3866": {
      "op": "SUB"
    },
    "3867": {
      "op": "DUP6"
    },
    "3868": {
      "op": "DUP2"
    },
    "3869": {
      "op": "AND"
    },
    "3870": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3872": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3873": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "ADD",
      "path": "10"
    },
    "3874": {
      "op": "MSTORE"
    },
    "3875": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3877": {
      "op": "DUP3"
    },
    "3878": {
      "op": "ADD"
    },
    "3879": {
      "op": "DUP8"
    },
    "3880": {
      "op": "SWAP1"
    },
    "3881": {
      "op": "MSTORE"
    },
    "3882": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5841
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3883": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5841
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3884": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5841
      ],
      "op": "AND",
      "path": "10"
    },
    "3885": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5841
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3886": {
      "op": "POP"
    },
    "3887": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5850
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xA9059CBB"
    },
    "3892": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5850
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3893": {
      "op": "POP"
    },
    "3894": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3896": {
      "op": "ADD"
    },
    "3897": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3899": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3901": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3902": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3903": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3904": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "SUB",
      "path": "10"
    },
    "3905": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3906": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3908": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "DUP8",
      "path": "10"
    },
    "3909": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "GAS",
      "path": "10"
    },
    "3910": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "CALL",
      "path": "10"
    },
    "3911": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3912": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3913": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3914": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF57"
    },
    "3917": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3918": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3919": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3921": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3922": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "3923": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3924": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3926": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "REVERT",
      "path": "10"
    },
    "3927": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3928": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "POP",
      "path": "10"
    },
    "3929": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "POP",
      "path": "10"
    },
    "3930": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "POP",
      "path": "10"
    },
    "3931": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "POP",
      "path": "10"
    },
    "3932": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3934": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3935": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3936": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "3938": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "NOT",
      "path": "10"
    },
    "3939": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "3941": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3942": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "ADD",
      "path": "10"
    },
    "3943": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "AND",
      "path": "10"
    },
    "3944": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3945": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "ADD",
      "path": "10"
    },
    "3946": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3947": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3949": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3950": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "POP",
      "path": "10"
    },
    "3951": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3952": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "ADD",
      "path": "10"
    },
    "3953": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3954": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8C0"
    },
    "3957": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3958": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3959": {
      "fn": "Lottery.transferPrize",
      "offset": [
        5836,
        5872
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10A8"
    },
    "3962": {
      "fn": "Lottery.transferPrize",
      "jump": "i",
      "offset": [
        5836,
        5872
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3963": {
      "op": "JUMPDEST"
    },
    "3964": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3966": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3968": {
      "op": "DUP3"
    },
    "3969": {
      "op": "DUP5"
    },
    "3970": {
      "op": "SUB"
    },
    "3971": {
      "op": "SLT"
    },
    "3972": {
      "op": "ISZERO"
    },
    "3973": {
      "op": "PUSH2",
      "value": "0xF8D"
    },
    "3976": {
      "op": "JUMPI"
    },
    "3977": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3979": {
      "op": "DUP1"
    },
    "3980": {
      "op": "REVERT"
    },
    "3981": {
      "op": "JUMPDEST"
    },
    "3982": {
      "op": "POP"
    },
    "3983": {
      "op": "CALLDATALOAD"
    },
    "3984": {
      "op": "SWAP2"
    },
    "3985": {
      "op": "SWAP1"
    },
    "3986": {
      "op": "POP"
    },
    "3987": {
      "jump": "o",
      "op": "JUMP"
    },
    "3988": {
      "op": "JUMPDEST"
    },
    "3989": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3994": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3996": {
      "op": "SHL"
    },
    "3997": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3999": {
      "op": "MSTORE"
    },
    "4000": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "4002": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4004": {
      "op": "MSTORE"
    },
    "4005": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4007": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4009": {
      "op": "REVERT"
    },
    "4010": {
      "op": "JUMPDEST"
    },
    "4011": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4013": {
      "op": "DUP2"
    },
    "4014": {
      "op": "ADD"
    },
    "4015": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4017": {
      "op": "DUP4"
    },
    "4018": {
      "op": "LT"
    },
    "4019": {
      "op": "PUSH2",
      "value": "0xFCC"
    },
    "4022": {
      "op": "JUMPI"
    },
    "4023": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4028": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4030": {
      "op": "SHL"
    },
    "4031": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4033": {
      "op": "MSTORE"
    },
    "4034": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "4036": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4038": {
      "op": "MSTORE"
    },
    "4039": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4041": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4043": {
      "op": "REVERT"
    },
    "4044": {
      "op": "JUMPDEST"
    },
    "4045": {
      "op": "SWAP2"
    },
    "4046": {
      "op": "SWAP1"
    },
    "4047": {
      "op": "MSTORE"
    },
    "4048": {
      "op": "SWAP1"
    },
    "4049": {
      "jump": "o",
      "op": "JUMP"
    },
    "4050": {
      "op": "JUMPDEST"
    },
    "4051": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4053": {
      "op": "DUP1"
    },
    "4054": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4056": {
      "op": "DUP4"
    },
    "4057": {
      "op": "DUP6"
    },
    "4058": {
      "op": "SUB"
    },
    "4059": {
      "op": "SLT"
    },
    "4060": {
      "op": "ISZERO"
    },
    "4061": {
      "op": "PUSH2",
      "value": "0xFE5"
    },
    "4064": {
      "op": "JUMPI"
    },
    "4065": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4067": {
      "op": "DUP1"
    },
    "4068": {
      "op": "REVERT"
    },
    "4069": {
      "op": "JUMPDEST"
    },
    "4070": {
      "op": "POP"
    },
    "4071": {
      "op": "POP"
    },
    "4072": {
      "op": "DUP1"
    },
    "4073": {
      "op": "CALLDATALOAD"
    },
    "4074": {
      "op": "SWAP3"
    },
    "4075": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4077": {
      "op": "SWAP1"
    },
    "4078": {
      "op": "SWAP2"
    },
    "4079": {
      "op": "ADD"
    },
    "4080": {
      "op": "CALLDATALOAD"
    },
    "4081": {
      "op": "SWAP2"
    },
    "4082": {
      "op": "POP"
    },
    "4083": {
      "jump": "o",
      "op": "JUMP"
    },
    "4084": {
      "op": "JUMPDEST"
    },
    "4085": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4087": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4089": {
      "op": "DUP3"
    },
    "4090": {
      "op": "DUP5"
    },
    "4091": {
      "op": "SUB"
    },
    "4092": {
      "op": "SLT"
    },
    "4093": {
      "op": "ISZERO"
    },
    "4094": {
      "op": "PUSH2",
      "value": "0x1006"
    },
    "4097": {
      "op": "JUMPI"
    },
    "4098": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4100": {
      "op": "DUP1"
    },
    "4101": {
      "op": "REVERT"
    },
    "4102": {
      "op": "JUMPDEST"
    },
    "4103": {
      "op": "DUP2"
    },
    "4104": {
      "op": "CALLDATALOAD"
    },
    "4105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4111": {
      "op": "SHL"
    },
    "4112": {
      "op": "SUB"
    },
    "4113": {
      "op": "DUP2"
    },
    "4114": {
      "op": "AND"
    },
    "4115": {
      "op": "DUP2"
    },
    "4116": {
      "op": "EQ"
    },
    "4117": {
      "op": "PUSH2",
      "value": "0x101D"
    },
    "4120": {
      "op": "JUMPI"
    },
    "4121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4123": {
      "op": "DUP1"
    },
    "4124": {
      "op": "REVERT"
    },
    "4125": {
      "op": "JUMPDEST"
    },
    "4126": {
      "op": "SWAP4"
    },
    "4127": {
      "op": "SWAP3"
    },
    "4128": {
      "op": "POP"
    },
    "4129": {
      "op": "POP"
    },
    "4130": {
      "op": "POP"
    },
    "4131": {
      "jump": "o",
      "op": "JUMP"
    },
    "4132": {
      "op": "JUMPDEST"
    },
    "4133": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4138": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4140": {
      "op": "SHL"
    },
    "4141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4143": {
      "op": "MSTORE"
    },
    "4144": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4146": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4148": {
      "op": "MSTORE"
    },
    "4149": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4151": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4153": {
      "op": "REVERT"
    },
    "4154": {
      "op": "JUMPDEST"
    },
    "4155": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4157": {
      "op": "DUP3"
    },
    "4158": {
      "op": "NOT"
    },
    "4159": {
      "op": "DUP3"
    },
    "4160": {
      "op": "GT"
    },
    "4161": {
      "op": "ISZERO"
    },
    "4162": {
      "op": "PUSH2",
      "value": "0x104D"
    },
    "4165": {
      "op": "JUMPI"
    },
    "4166": {
      "op": "PUSH2",
      "value": "0x104D"
    },
    "4169": {
      "op": "PUSH2",
      "value": "0x1024"
    },
    "4172": {
      "jump": "i",
      "op": "JUMP"
    },
    "4173": {
      "op": "JUMPDEST"
    },
    "4174": {
      "op": "POP"
    },
    "4175": {
      "op": "ADD"
    },
    "4176": {
      "op": "SWAP1"
    },
    "4177": {
      "jump": "o",
      "op": "JUMP"
    },
    "4178": {
      "op": "JUMPDEST"
    },
    "4179": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4181": {
      "op": "DUP1"
    },
    "4182": {
      "op": "DUP3"
    },
    "4183": {
      "op": "MSTORE"
    },
    "4184": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "4186": {
      "op": "SWAP1"
    },
    "4187": {
      "op": "DUP3"
    },
    "4188": {
      "op": "ADD"
    },
    "4189": {
      "op": "MSTORE"
    },
    "4190": {
      "op": "PUSH32",
      "value": "0x5468697320706172616D657465722063616E6E6F74206265207A65726F000000"
    },
    "4223": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4225": {
      "op": "DUP3"
    },
    "4226": {
      "op": "ADD"
    },
    "4227": {
      "op": "MSTORE"
    },
    "4228": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4230": {
      "op": "ADD"
    },
    "4231": {
      "op": "SWAP1"
    },
    "4232": {
      "jump": "o",
      "op": "JUMP"
    },
    "4233": {
      "op": "JUMPDEST"
    },
    "4234": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4236": {
      "op": "DUP2"
    },
    "4237": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4239": {
      "op": "NOT"
    },
    "4240": {
      "op": "DIV"
    },
    "4241": {
      "op": "DUP4"
    },
    "4242": {
      "op": "GT"
    },
    "4243": {
      "op": "DUP3"
    },
    "4244": {
      "op": "ISZERO"
    },
    "4245": {
      "op": "ISZERO"
    },
    "4246": {
      "op": "AND"
    },
    "4247": {
      "op": "ISZERO"
    },
    "4248": {
      "op": "PUSH2",
      "value": "0x10A3"
    },
    "4251": {
      "op": "JUMPI"
    },
    "4252": {
      "op": "PUSH2",
      "value": "0x10A3"
    },
    "4255": {
      "op": "PUSH2",
      "value": "0x1024"
    },
    "4258": {
      "jump": "i",
      "op": "JUMP"
    },
    "4259": {
      "op": "JUMPDEST"
    },
    "4260": {
      "op": "POP"
    },
    "4261": {
      "op": "MUL"
    },
    "4262": {
      "op": "SWAP1"
    },
    "4263": {
      "jump": "o",
      "op": "JUMP"
    },
    "4264": {
      "op": "JUMPDEST"
    },
    "4265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4267": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4269": {
      "op": "DUP3"
    },
    "4270": {
      "op": "DUP5"
    },
    "4271": {
      "op": "SUB"
    },
    "4272": {
      "op": "SLT"
    },
    "4273": {
      "op": "ISZERO"
    },
    "4274": {
      "op": "PUSH2",
      "value": "0x10BA"
    },
    "4277": {
      "op": "JUMPI"
    },
    "4278": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4280": {
      "op": "DUP1"
    },
    "4281": {
      "op": "REVERT"
    },
    "4282": {
      "op": "JUMPDEST"
    },
    "4283": {
      "op": "DUP2"
    },
    "4284": {
      "op": "MLOAD"
    },
    "4285": {
      "op": "DUP1"
    },
    "4286": {
      "op": "ISZERO"
    },
    "4287": {
      "op": "ISZERO"
    },
    "4288": {
      "op": "DUP2"
    },
    "4289": {
      "op": "EQ"
    },
    "4290": {
      "op": "PUSH2",
      "value": "0x101D"
    },
    "4293": {
      "op": "JUMPI"
    },
    "4294": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4296": {
      "op": "DUP1"
    },
    "4297": {
      "op": "REVERT"
    },
    "4298": {
      "op": "JUMPDEST"
    },
    "4299": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4303": {
      "op": "DUP3"
    },
    "4304": {
      "op": "ADD"
    },
    "4305": {
      "op": "PUSH2",
      "value": "0x10DC"
    },
    "4308": {
      "op": "JUMPI"
    },
    "4309": {
      "op": "PUSH2",
      "value": "0x10DC"
    },
    "4312": {
      "op": "PUSH2",
      "value": "0x1024"
    },
    "4315": {
      "jump": "i",
      "op": "JUMP"
    },
    "4316": {
      "op": "JUMPDEST"
    },
    "4317": {
      "op": "POP"
    },
    "4318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4320": {
      "op": "ADD"
    },
    "4321": {
      "op": "SWAP1"
    },
    "4322": {
      "jump": "o",
      "op": "JUMP"
    },
    "4323": {
      "op": "JUMPDEST"
    },
    "4324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4326": {
      "op": "DUP3"
    },
    "4327": {
      "op": "DUP3"
    },
    "4328": {
      "op": "LT"
    },
    "4329": {
      "op": "ISZERO"
    },
    "4330": {
      "op": "PUSH2",
      "value": "0x10F5"
    },
    "4333": {
      "op": "JUMPI"
    },
    "4334": {
      "op": "PUSH2",
      "value": "0x10F5"
    },
    "4337": {
      "op": "PUSH2",
      "value": "0x1024"
    },
    "4340": {
      "jump": "i",
      "op": "JUMP"
    },
    "4341": {
      "op": "JUMPDEST"
    },
    "4342": {
      "op": "POP"
    },
    "4343": {
      "op": "SUB"
    },
    "4344": {
      "op": "SWAP1"
    },
    "4345": {
      "jump": "o",
      "op": "JUMP"
    },
    "4346": {
      "op": "JUMPDEST"
    },
    "4347": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4349": {
      "op": "DUP1"
    },
    "4350": {
      "op": "DUP3"
    },
    "4351": {
      "op": "MSTORE"
    },
    "4352": {
      "op": "DUP2"
    },
    "4353": {
      "op": "DUP2"
    },
    "4354": {
      "op": "ADD"
    },
    "4355": {
      "op": "MSTORE"
    },
    "4356": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "4389": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4391": {
      "op": "DUP3"
    },
    "4392": {
      "op": "ADD"
    },
    "4393": {
      "op": "MSTORE"
    },
    "4394": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4396": {
      "op": "ADD"
    },
    "4397": {
      "op": "SWAP1"
    },
    "4398": {
      "jump": "o",
      "op": "JUMP"
    },
    "4399": {
      "op": "JUMPDEST"
    },
    "4400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4402": {
      "op": "DUP1"
    },
    "4403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4405": {
      "op": "SHL"
    },
    "4406": {
      "op": "SUB"
    },
    "4407": {
      "op": "DUP5"
    },
    "4408": {
      "op": "AND"
    },
    "4409": {
      "op": "DUP2"
    },
    "4410": {
      "op": "MSTORE"
    },
    "4411": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4413": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4415": {
      "op": "DUP5"
    },
    "4416": {
      "op": "DUP2"
    },
    "4417": {
      "op": "DUP5"
    },
    "4418": {
      "op": "ADD"
    },
    "4419": {
      "op": "MSTORE"
    },
    "4420": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4422": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4424": {
      "op": "DUP5"
    },
    "4425": {
      "op": "ADD"
    },
    "4426": {
      "op": "MSTORE"
    },
    "4427": {
      "op": "DUP4"
    },
    "4428": {
      "op": "MLOAD"
    },
    "4429": {
      "op": "DUP1"
    },
    "4430": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4432": {
      "op": "DUP6"
    },
    "4433": {
      "op": "ADD"
    },
    "4434": {
      "op": "MSTORE"
    },
    "4435": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4437": {
      "op": "JUMPDEST"
    },
    "4438": {
      "op": "DUP2"
    },
    "4439": {
      "op": "DUP2"
    },
    "4440": {
      "op": "LT"
    },
    "4441": {
      "op": "ISZERO"
    },
    "4442": {
      "op": "PUSH2",
      "value": "0x1171"
    },
    "4445": {
      "op": "JUMPI"
    },
    "4446": {
      "op": "DUP6"
    },
    "4447": {
      "op": "DUP2"
    },
    "4448": {
      "op": "ADD"
    },
    "4449": {
      "op": "DUP4"
    },
    "4450": {
      "op": "ADD"
    },
    "4451": {
      "op": "MLOAD"
    },
    "4452": {
      "op": "DUP6"
    },
    "4453": {
      "op": "DUP3"
    },
    "4454": {
      "op": "ADD"
    },
    "4455": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4457": {
      "op": "ADD"
    },
    "4458": {
      "op": "MSTORE"
    },
    "4459": {
      "op": "DUP3"
    },
    "4460": {
      "op": "ADD"
    },
    "4461": {
      "op": "PUSH2",
      "value": "0x1155"
    },
    "4464": {
      "op": "JUMP"
    },
    "4465": {
      "op": "JUMPDEST"
    },
    "4466": {
      "op": "DUP2"
    },
    "4467": {
      "op": "DUP2"
    },
    "4468": {
      "op": "GT"
    },
    "4469": {
      "op": "ISZERO"
    },
    "4470": {
      "op": "PUSH2",
      "value": "0x1183"
    },
    "4473": {
      "op": "JUMPI"
    },
    "4474": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4476": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4478": {
      "op": "DUP4"
    },
    "4479": {
      "op": "DUP8"
    },
    "4480": {
      "op": "ADD"
    },
    "4481": {
      "op": "ADD"
    },
    "4482": {
      "op": "MSTORE"
    },
    "4483": {
      "op": "JUMPDEST"
    },
    "4484": {
      "op": "POP"
    },
    "4485": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4487": {
      "op": "ADD"
    },
    "4488": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4490": {
      "op": "NOT"
    },
    "4491": {
      "op": "AND"
    },
    "4492": {
      "op": "SWAP3"
    },
    "4493": {
      "op": "SWAP1"
    },
    "4494": {
      "op": "SWAP3"
    },
    "4495": {
      "op": "ADD"
    },
    "4496": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4498": {
      "op": "ADD"
    },
    "4499": {
      "op": "SWAP6"
    },
    "4500": {
      "op": "SWAP5"
    },
    "4501": {
      "op": "POP"
    },
    "4502": {
      "op": "POP"
    },
    "4503": {
      "op": "POP"
    },
    "4504": {
      "op": "POP"
    },
    "4505": {
      "op": "POP"
    },
    "4506": {
      "jump": "o",
      "op": "JUMP"
    },
    "4507": {
      "op": "JUMPDEST"
    },
    "4508": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4510": {
      "op": "DUP3"
    },
    "4511": {
      "op": "PUSH2",
      "value": "0x11B8"
    },
    "4514": {
      "op": "JUMPI"
    },
    "4515": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4520": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4522": {
      "op": "SHL"
    },
    "4523": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4525": {
      "op": "MSTORE"
    },
    "4526": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4528": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4530": {
      "op": "MSTORE"
    },
    "4531": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4535": {
      "op": "REVERT"
    },
    "4536": {
      "op": "JUMPDEST"
    },
    "4537": {
      "op": "POP"
    },
    "4538": {
      "op": "MOD"
    },
    "4539": {
      "op": "SWAP1"
    },
    "4540": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "f6c698cdbea44aaff5eca1ca1187c404b9b539e8",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\nimport './BAPToken.sol';\n\n\ncontract Lottery is VRFConsumerBase, Ownable\n  \n    {\n    // Lottery states\n    enum LOTTERY_STATE {\n        CLOSED,\n        OPENED,\n        PROCESSING\n    }\n    LOTTERY_STATE public lotteryState;\n    uint64 ticketPrice = 50;\n    uint256 public randomness;\n    uint256 public entryCounter;\n    // uint256 public entryFee;\n    uint256 public fee; \n    uint256 public lotteryDuration;\n    uint256 public lotteryDeadlineTimestamp;    \n    bytes32 public keyhash;\n    address public latestWinner;\n    mapping(address => uint256) public participantEntries;\n    mapping(uint256=>address) public entryIdToParticipant;\n    // AggregatorV3Interface public priceFeed;\n    BAPToken public token;\n    uint256 public poolPrize;\n\n    // events\n    event LotteryStarted(uint256 timeStamp);\n    event LotteryFinished(address winner, uint256 timeStamp);\n    event NewEntry(address participant, uint256 entryId);\n    event UserPaid(address user, uint256 amount);\n    event RequestedRandomness(bytes32 requestId);\n\n    constructor(\n        // address _priceFeedAddress,\n        address _vrfCoordinator,\n        address _linkTokenAddress,\n        // uint256 _entryFee,\n \n        uint256 _fee,\n        bytes32 _keyhash,\n        BAPToken _token\n    ) VRFConsumerBase(_vrfCoordinator, _linkTokenAddress) {\n        // priceFeed = AggregatorV3Interface(_priceFeedAddress);\n        // amount players must pay in order to enter the lottery\n        // entryFee = _entryFee;\n        fee = _fee;\n        keyhash = _keyhash;\n        lotteryState = LOTTERY_STATE.CLOSED;\n        // 1 hours\n        lotteryDuration = 300;\n        token = _token;\n        token.setApproval(msg.sender, address(this), 1000000);\n        token.transferFrom(msg.sender, address(this), 1000000);\n\n        // owner = msg.sender;\n    }\n    // modifiers\n    modifier onlyOpened {\n        require(lotteryState == LOTTERY_STATE.OPENED, \"Lottery must be opened\");\n        _;\n    }\n\n    modifier onlyClosed {\n        require(lotteryState == LOTTERY_STATE.CLOSED, \"Lottery must be closed\");\n        _;\n    }\n\n    modifier notZero(uint256 _number) {\n        require(_number != 0, \"This parameter cannot be zero\");\n        _;\n    }\n\n    fallback() payable external{\n        revert();\n    }\n\n    receive() external payable{\n\n    }\n\n    // function getEntryFee() public view returns (uint256) {\n    //     (, int256 price, , , ) = priceFeed.latestRoundData();\n    //     uint256 ethPrice = uint256(price) * 10**10;\n    //     uint256 precision = 10**18;\n    //     return (entryFee * precision) / ethPrice;\n    // }\n\n    function enterLottery(uint256 _numberOfEntries) \n        public \n        payable \n        onlyOpened \n        notZero(_numberOfEntries)\n    {\n        require(msg.sender != address(0), \"invalid user address\");\n        \n        token.setApproval(msg.sender, address(this), (ticketPrice*_numberOfEntries*10**18));\n        token.transferFrom(msg.sender, address(this), (ticketPrice*_numberOfEntries*10**18));\n        poolPrize += ticketPrice*_numberOfEntries*(10**18);\n        for (uint256 counter = 0; counter < _numberOfEntries; counter++) {\n            entryIdToParticipant[entryCounter] = msg.sender;\n            participantEntries[msg.sender]++;\n            entryCounter++;\n            emit NewEntry(msg.sender, entryCounter - 1);    \n        }\n    }\n\n    function payUser(address _user, uint256 _amount) internal notZero(_amount) {\n        require(_user != address(0), \"invalid user address\");\n        // payable(_user).transfer(_amount);\n        token.setApproval(address(this), _user, _amount);\n        token.transfer(_user, _amount);\n        emit UserPaid(_user, _amount);\n    }\n\n    function startLottery() public onlyClosed {\n        lotteryState = LOTTERY_STATE.OPENED;\n        lotteryDeadlineTimestamp = block.timestamp + lotteryDuration;\n        emit LotteryStarted(block.timestamp);\n    }\n\n    function endLottery() public onlyOpened {\n        require(\n            block.timestamp >= lotteryDeadlineTimestamp,\n            \"The lottery is not finished yet\"\n        );\n        lotteryState = LOTTERY_STATE.PROCESSING;\n        bytes32 requestId = requestRandomness(keyhash, fee);\n        emit RequestedRandomness(requestId);\n    }\n\n    function fulfillRandomness(bytes32 _requestId, uint256 _randomness)\n        internal\n        override\n        notZero(_randomness)\n    {\n        require(\n            lotteryState == LOTTERY_STATE.PROCESSING,\n            \"The contract is not processing the winner yet\"\n        );\n        uint256 entryIdOfWinner = _randomness % entryCounter;\n        latestWinner = entryIdToParticipant[entryIdOfWinner];\n\n        transferPrize(poolPrize, latestWinner);\n        \n        // The winner recieves 90% of the contract balance\n        // The other 10% goes to the owner\n        // uint256 contractBalance = address(this).balance;\n        // uint256 amountToPayWinner = (contractBalance * 90) / 100;\n        // uint256 amountToPayOwner = (contractBalance * 10) / 100;\n        // payUser(latestWinner, contractBalance);\n        // payUser(owner(), amountToPayOwner);\n        // Reset \n        lotteryState = LOTTERY_STATE.CLOSED;\n        poolPrize = 0;\n        for (uint index = 0; index < entryCounter; index++) {\n            participantEntries[entryIdToParticipant[index]] = 0;\n        }\n        entryCounter = 0;\n        randomness = _randomness;\n        emit LotteryFinished(latestWinner, block.timestamp);\n    }\n\n    function transferPrize(uint256 _winnerPrize, address winner) private{\n        token.setApproval(address(this), winner, _winnerPrize*(10**18));\n        token.transfer(winner, _winnerPrize);\n    }\n\n    // function changeEntryFee(uint256 _newEntryFee)\n    //     public\n    //     onlyOwner\n    //     onlyClosed\n    //     notZero(_newEntryFee)\n    // {\n    //     entryFee = _newEntryFee;\n    // }\n\n    function changeDuration(uint256 _newDuration) \n        public\n        onlyOwner \n        onlyClosed\n        notZero(_newDuration)\n    {\n        lotteryDuration = _newDuration;\n    }\n}\n",
  "sourceMap": "275:5995:10:-:0;;;476:23;;;-1:-1:-1;;;;;;;;476:23:10;-1:-1:-1;;;476:23:10;;;1275:777;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9369:32:5;;;;;9407;;;;909:6:0;:18;;-1:-1:-1;;;;;;909:18:0;665:10:4;909:18:0;;;;;;942:43;;665:10:4;;867:17:0;;942:43;;867:17;;942:43;-1:-1:-1;1729:3:10::1;:10:::0;;;1749:7:::1;:18:::0;;;1777:12:::1;:35:::0;;-1:-1:-1;;;;1777:35:10::1;::::0;;1859:3:::1;1841:15;:21:::0;1872:5:::1;:14:::0;;-1:-1:-1;;;;;1872:14:10;::::1;-1:-1:-1::0;;;;;;1872:14:10;;::::1;::::0;::::1;::::0;;;1896:53:::1;::::0;-1:-1:-1;;;1896:53:10;;1914:10:::1;1896:53:::0;;::::1;1199:34:12::0;;;;1934:4:10::1;1249:18:12::0;;;1242:43;1941:7:10::1;1301:18:12::0;;;1294:34;1872:14:10;1896:17:::1;::::0;1134:18:12;;1896:53:10::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1959:5:10::1;::::0;:54:::1;::::0;-1:-1:-1;;;1959:54:10;;1978:10:::1;1959:54;::::0;::::1;1199:34:12::0;1998:4:10::1;1249:18:12::0;;;1242:43;2005:7:10::1;1301:18:12::0;;;1294:34;-1:-1:-1;;;;;1959:5:10;;::::1;::::0;-1:-1:-1;1959:18:10::1;::::0;-1:-1:-1;1134:18:12;;1959:54:10::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1275:777:::0;;;;;275:5995;;14:131:12;-1:-1:-1;;;;;89:31:12;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:658::-;271:6;279;287;295;303;356:3;344:9;335:7;331:23;327:33;324:53;;;373:1;370;363:12;324:53;405:9;399:16;424:31;449:5;424:31;:::i;:::-;524:2;509:18;;503:25;474:5;;-1:-1:-1;537:33:12;503:25;537:33;:::i;:::-;589:7;579:17;;;636:2;625:9;621:18;615:25;605:35;;680:2;669:9;665:18;659:25;649:35;;729:3;718:9;714:19;708:26;743:33;768:7;743:33;:::i;:::-;795:7;785:17;;;150:658;;;;;;;;:::o;1339:277::-;1406:6;1459:2;1447:9;1438:7;1434:23;1430:32;1427:52;;;1475:1;1472;1465:12;1427:52;1507:9;1501:16;1560:5;1553:13;1546:21;1539:5;1536:32;1526:60;;1582:1;1579;1572:12;1526:60;1605:5;1339:277;-1:-1:-1;;;1339:277:12:o;:::-;275:5995:10;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Lottery.sol",
  "type": "contract"
}